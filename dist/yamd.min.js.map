{"version":3,"file":"yamd.min.js","mappings":"CAAA,SAAUA,iCAAiCC,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAc,KAAID,IAElBD,EAAW,KAAIC,IARjB,CASmB,oBAATK,KAAuBA,KAAOC,MAAM,WAC9C,M,kCCIA,SAASC,gBAAgBC,EAASC,EAAUC,EAAOC,GACjDL,KAAKE,QAAWA,EAChBF,KAAKG,SAAWA,EAChBH,KAAKI,MAAWA,EAChBJ,KAAKK,SAAWA,EAChBL,KAAKM,KAAW,cAEuB,mBAA5BC,MAAMC,mBACfD,MAAMC,kBAAkBR,KAAMC,kBAdlC,SAASQ,aAAaC,EAAOC,GAC3B,SAASC,OAASZ,KAAKa,YAAcH,EACrCE,KAAKE,UAAYH,EAAOG,UACxBJ,EAAMI,UAAY,IAAIF,KAexBH,CAAaR,gBAAiBM,OAE9BN,gBAAgBc,aAAe,SAASZ,EAAUC,GAChD,IAAIY,EAA2B,CACzBC,QAAS,SAASC,GAChB,MAAO,IAAOC,cAAcD,EAAYE,MAAQ,KAGlD,MAAS,SAASF,GAChB,IACIG,EADAC,EAAe,GAGnB,IAAKD,EAAI,EAAGA,EAAIH,EAAYK,MAAMC,OAAQH,IACxCC,GAAgBJ,EAAYK,MAAMF,aAAcI,MAC5CC,YAAYR,EAAYK,MAAMF,GAAG,IAAM,IAAMK,YAAYR,EAAYK,MAAMF,GAAG,IAC9EK,YAAYR,EAAYK,MAAMF,IAGpC,MAAO,KAAOH,EAAYS,SAAW,IAAM,IAAML,EAAe,KAGlEM,IAAK,SAASV,GACZ,MAAO,iBAGTW,IAAK,SAASX,GACZ,MAAO,gBAGTY,MAAO,SAASZ,GACd,OAAOA,EAAYa,cAI3B,SAASC,IAAIC,GACX,OAAOA,EAAGC,WAAW,GAAGC,SAAS,IAAIC,cAGvC,SAASjB,cAAckB,GACrB,OAAOA,EACJC,QAAQ,MAAO,QACfA,QAAQ,KAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,gBAAyB,SAASL,GAAM,MAAO,OAASD,IAAIC,MACpEK,QAAQ,yBAAyB,SAASL,GAAM,MAAO,MAASD,IAAIC,MAGzE,SAASP,YAAYW,GACnB,OAAOA,EACJC,QAAQ,MAAO,QACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,KAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,gBAAyB,SAASL,GAAM,MAAO,OAASD,IAAIC,MACpEK,QAAQ,yBAAyB,SAASL,GAAM,MAAO,MAASD,IAAIC,MA6CzE,MAAO,YAtCP,SAASM,iBAAiBpC,GACxB,IACIkB,EAAGmB,EANoBtB,EAKvBuB,EAAe,IAAIhB,MAAMtB,EAASqB,QAGtC,IAAKH,EAAI,EAAGA,EAAIlB,EAASqB,OAAQH,IAC/BoB,EAAapB,IATYH,EASaf,EAASkB,GAR1CL,EAAyBE,EAAYwB,MAAMxB,IAalD,GAFAuB,EAAaE,OAETF,EAAajB,OAAS,EAAG,CAC3B,IAAKH,EAAI,EAAGmB,EAAI,EAAGnB,EAAIoB,EAAajB,OAAQH,IACtCoB,EAAapB,EAAI,KAAOoB,EAAapB,KACvCoB,EAAaD,GAAKC,EAAapB,GAC/BmB,KAGJC,EAAajB,OAASgB,EAGxB,OAAQC,EAAajB,QACnB,KAAK,EACH,OAAOiB,EAAa,GAEtB,KAAK,EACH,OAAOA,EAAa,GAAK,OAASA,EAAa,GAEjD,QACE,OAAOA,EAAaG,MAAM,GAAI,GAAGC,KAAK,MAClC,QACAJ,EAAaA,EAAajB,OAAS,IAQxBe,CAAiBpC,GAAY,QAJlD,SAAS2C,cAAc1C,GACrB,OAAOA,EAAQ,IAAOe,cAAcf,GAAS,IAAO,eAGM0C,CAAc1C,GAAS,WA04FrFR,EAAOD,QAAU,CACfoD,YAAa9C,gBACb+C,MAz4FF,SAASC,UAAUC,EAAOC,GACxBA,OAAsB,IAAZA,EAAqBA,EAAU,GAEzC,IAmMIC,EAnMAC,EAAa,GAEbC,EAAyB,CAAEC,MAAOC,gBAClCC,EAAyBD,eAuBzBE,EAASC,uBAAuB,KAAK,GACrCC,EAAS,IACTC,EAASF,uBAAuB,KAAK,GASrCG,EAAS,IACTC,EAAUJ,uBAAuB,KAAK,GACtCK,EAAU,IACVC,EAAUN,uBAAuB,KAAM,GACvCO,EAAU,IACVC,EAAUR,uBAAuB,KAAK,GACtCS,EAAU,IACVC,EAAUV,uBAAuB,KAAK,GACtCW,EAAU,IACVC,EAAUZ,uBAAuB,KAAK,GACtCa,EAAU,IACVC,EAAUd,uBAAuB,KAAK,GACtCe,EAAU,IACVC,EAAUhB,uBAAuB,KAAK,GACtCiB,EAAU,IACVC,EAAUlB,uBAAuB,KAAK,GACtCmB,EAAU,IACVC,EAAUpB,uBAAuB,KAAK,GACtCqB,EAAU,IACVC,EAAUtB,uBAAuB,KAAK,GACtCuB,EAAU,IACVC,EAAUxB,uBAAuB,KAAK,GACtCyB,EAAU,IACVC,EAAU1B,uBAAuB,KAAK,GACtC2B,EAAU,IACVC,EAAU5B,uBAAuB,KAAK,GACtC6B,EAAU,IACVC,EAAU9B,uBAAuB,KAAK,GACtC+B,EAAU,IACVC,EAAUhC,uBAAuB,KAAK,GACtCiC,EAAU,IACVC,EAAUlC,uBAAuB,KAAK,GACtCmC,EAAU,IACVC,EAAUpC,uBAAuB,KAAK,GACtCqC,EAAU,IACVC,EAAUtC,uBAAuB,KAAK,GACtCuC,EAAU,KACVC,EAAUxC,uBAAuB,MAAM,GACvCyC,EAAU,IACVC,EAAU1C,uBAAuB,KAAK,GACtC2C,EAAU,IACVC,EAAU5C,uBAAuB,KAAK,GACtC6C,EAAU,IACVC,EAAU9C,uBAAuB,KAAK,GACtC+C,EAAU,IACVC,GAAUhD,uBAAuB,KAAK,GACtCiD,GAAU,IACVC,GAAUlD,uBAAuB,KAAK,GACtCmD,GAAU,IACVC,GAAUpD,uBAAuB,KAAK,GACtCqD,GAAU,SACVC,GAAUC,qBAAqB,CAAC,CAAC,IAAK,OAAO,GAAO,GACpDC,GAAU,YACVC,GAAUF,qBAAqB,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,OAAO,GAAO,GAChEG,GAAU,IACVC,GAAU3D,uBAAuB,KAAK,GACtC4D,QAAU,SAASC,EAAGC,EAAGC,EAAGC,GAAI,MAAO,IAAMD,EAAIC,EAAE9E,KAAK,KAIxD+E,GAAU,GAEVC,GAAUlE,uBAAuB,KAAK,GACtCmE,GAAU,cACVC,GAAUb,qBAAqB,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,MAAM,GAAO,GACrEc,GAwIK,CAAEtF,KAAM,OAtIbuF,QAAU,SAASC,EAAM5H,EAAMkH,EAAGC,EAAGU,EAAGT,GACnC,MAAO,CAACF,EAAGC,EAAGU,EAAGT,IAEtBU,GAAU,oBACVC,GAAUnB,qBAAqB,CAAC,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,OAAO,GAAO,GAC9FoB,QAAU,SAASJ,EAAM5H,EAAMkH,EAAGW,GAC7B,MAAO,CAACX,EAAG,GAAIW,EAAG,KAKvBI,QAAU,SAASL,EAAM5H,EAAMkI,GAC3B,MAAO,CACNC,MAAO,YACPC,UAAW,CAACpI,GAAMqI,OAAOH,KAG9BI,QAAU,SAASV,EAAMV,GACrB,MAAO,CACNiB,MAAO,aACPI,WAAYrB,IAGjBsB,QAAU,SAASZ,EAAMV,GACrB,MAAO,CACNiB,MAAO,QACPM,MAAOvB,IAYZwB,GAAU,IACVC,GAAUtF,uBAAuB,KAAK,GAQtCuF,GAAUvF,uBAAuB,KAAK,GAQtCwF,GAAU,IACVC,GAAUzF,uBAAuB,KAAK,GAEtC0F,QAAU,SAAS7B,GACjB,MAAO,CACN9E,KAAM,OACNtB,KAAMoG,EAAE3E,KAAK,IACbxC,SAAUA,aAmBbiJ,GAAW,aACXC,GAAWrC,qBAAqB,CAAC,IAAK,KAAM,KAAM,OAAO,GAAO,GAEhEsC,GAAuB,EACvBC,GAAuB,EACvBC,GAAuB,CAAC,CAAEC,KAAM,EAAGC,OAAQ,IAC3CC,GAAuB,EACvBC,GAAuB,GACvBC,GAAuB,EAI3B,GAAI,cAAe5G,EAAS,CAC1B,KAAMA,EAAQ6G,aAAa1G,GACzB,MAAM,IAAI/C,MAAM,mCAAqC4C,EAAQ6G,UAAY,MAG3EvG,EAAwBH,EAAuBH,EAAQ6G,WAOzD,SAAS3J,WACP,OAAO4J,oBAAoBR,GAAcD,IAmB3C,SAAS7F,uBAAuBvC,EAAM8I,GACpC,MAAO,CAAExH,KAAM,UAAWtB,KAAMA,EAAM8I,WAAYA,GAGpD,SAAShD,qBAAqB3F,EAAOI,EAAUuI,GAC7C,MAAO,CAAExH,KAAM,QAASnB,MAAOA,EAAOI,SAAUA,EAAUuI,WAAYA,GAexE,SAASC,sBAAsBC,GAC7B,IAAwCC,EAApCC,EAAUZ,GAAoBU,GAElC,GAAIE,EACF,OAAOA,EAGP,IADAD,EAAID,EAAM,GACFV,GAAoBW,IAC1BA,IASF,IALAC,EAAU,CACRX,MAFFW,EAAUZ,GAAoBW,IAEZV,KAChBC,OAAQU,EAAQV,QAGXS,EAAID,GACmB,KAAxBlH,EAAMhB,WAAWmI,IACnBC,EAAQX,OACRW,EAAQV,OAAS,GAEjBU,EAAQV,SAGVS,IAIF,OADAX,GAAoBU,GAAOE,EACpBA,EAIX,SAASL,oBAAoBM,EAAUC,GACrC,IAAIC,EAAkBN,sBAAsBI,GACxCG,EAAkBP,sBAAsBK,GAE5C,MAAO,CACLjH,MAAO,CACLoH,OAAQJ,EACRZ,KAAQc,EAAgBd,KACxBC,OAAQa,EAAgBb,QAE1B/H,IAAK,CACH8I,OAAQH,EACRb,KAAQe,EAAcf,KACtBC,OAAQc,EAAcd,SAK5B,SAASgB,SAASzK,GACZqJ,GAAcK,KAEdL,GAAcK,KAChBA,GAAiBL,GACjBM,GAAsB,IAGxBA,GAAoBe,KAAK1K,IAO3B,SAAS2K,yBAAyB3K,EAAUC,EAAOC,GACjD,OAAO,IAAIJ,gBACTA,gBAAgBc,aAAaZ,EAAUC,GACvCD,EACAC,EACAC,GAIJ,SAASmD,iBACP,IAAIuH,EAAIC,EAUR,OARAD,EAAKvB,IACLwB,EAAKC,qBACM5H,IACToG,GAAesB,EACfC,EArUS,CACNvL,KAAM,CACLiD,KAAM,OACNwI,SAkUQF,EAjUR3K,SAAUA,cAmUhB0K,EAAKC,EAKP,SAASC,kBACP,IAAIF,EAAIC,EAIR,IAFAD,EAAK,GACLC,EAAKG,iBACEH,IAAO3H,GACZ0H,EAAGF,KAAKG,GACRA,EAAKG,iBAGP,OAAOJ,EAGT,SAASI,iBACP,IAAIJ,EAUJ,OARAA,EAWF,SAASK,mBACP,IAAIL,EAAIC,EAAIK,EAAIC,EAAIC,EAAIC,EAExBT,EAAKvB,GACLwB,EAqGF,SAASS,oBACP,IAAIV,EAAIC,EAERD,EAAKvB,IACLwB,EAAKU,kBACMrI,IACToG,GAAesB,EA3bGvD,EA4bNwD,EA3bVW,GAAOd,KAAKrD,EAAEhG,QA2bhBwJ,EA1bSxD,GAFA,IAASA,EAgcpB,OAFAuD,EAAKC,EA9GAS,GACDT,IAAO3H,GACTgI,EAiHJ,SAASO,oBACP,IAAIb,EAAIC,EAAIK,EAAIC,EAAIC,EAAIC,EAAIK,EAAIC,GAAIC,GAAIC,GAExCjB,EAAKvB,GACLwB,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKvH,EACL0F,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS7G,IAExC,GAAIsH,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKvH,EACL0F,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS7G,SAI1CiH,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKrH,EACLwF,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS3G,IAEpCoH,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKrH,EACLwF,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS3G,SAI1C+G,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKnH,EACLsF,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASzG,IAEpCkH,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKnH,EACLsF,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASzG,SAI1C6G,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKjH,EACLoF,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASvG,IAEpCgH,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKjH,EACLoF,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASvG,SAI1C2G,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAK/G,EACLkF,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASrG,IAEpC8G,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAK/G,EACLkF,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASrG,SAI1CyG,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAK7G,EACLgF,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASnG,IAEpC4G,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAK7G,EACLgF,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASnG,SAI1CuG,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAK3G,EACL8E,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASjG,IAEpC0G,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAK3G,EACL8E,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASjG,SAI1CqG,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKzG,EACL4E,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS/F,IAEpCwG,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKzG,EACL4E,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS/F,SAI1CmG,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKvG,EACL0E,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS7F,IAEpCsG,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKvG,EACL0E,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS7F,SAI1CiG,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKrG,EACLwE,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS3F,IAEpCoG,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKrG,EACLwE,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS3F,SAI1C+F,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKnG,EACLsE,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASzF,IAEpCkG,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKnG,EACLsE,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASzF,SAI1C6F,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKjG,EACLoE,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASvF,IAEpCgG,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKjG,EACLoE,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASvF,SAI1C2F,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAK/F,EACLkE,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASrF,IAEpC8F,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAK/F,EACLkE,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASrF,SAI1CyF,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAK7F,EACLgE,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASnF,IAEpC4F,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAK7F,EACLgE,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASnF,SAI1CuF,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAK3F,EACL8D,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASjF,IAEpC0F,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAK3F,EACL8D,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASjF,SAI1CqF,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKzF,EACL4D,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS/E,IAEpCwF,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKzF,EACL4D,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS/E,SAI1CmF,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKvF,EACL0D,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS7E,IAEpCsF,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKvF,EACL0D,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS7E,SAI1CiF,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKrF,EACLwD,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS3E,IAEpCoF,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKrF,EACLwD,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS3E,SAI1C+E,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKnF,EACLsD,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASzE,IAEpCkF,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKnF,EACLsD,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASzE,SAI1C6E,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKjF,EACLoD,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASvE,IAEpCgF,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKjF,EACLoD,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASvE,SAI1C2E,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAK/E,EACLkD,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASrE,IAEpC8E,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAK/E,EACLkD,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASrE,SAI1CyE,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,MAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAK7E,EACLgD,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASnE,IAEpC4E,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,MAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAK7E,EACLgD,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASnE,SAI1CuE,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,MAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAK3E,EACL8C,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASjE,KAEpC0E,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,MAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAK3E,EACL8C,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASjE,UAI1CqE,EAAK3H,EAEP,GAAI2H,IAAO3H,EAAY,CASrB,GARA2H,EAAK,GACiC,MAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKzE,GACL4C,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS/D,KAEpCwE,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,MAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKzE,GACL4C,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS/D,UAI1CmE,EAAK3H,EAEP,GAAI2H,IAAO3H,EAST,GARA2H,EAAK,GACiC,MAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKvE,GACL0C,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS7D,KAEpCsE,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,MAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKvE,GACL0C,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS7D,UAI1CiE,EAAK3H,wBA2BrD0H,EADEC,IAAO3H,EACJH,EAAM+I,UAAUlB,EAAIvB,IAEpBwB,EAEP,GAAID,IAAO1H,EAAY,CASrB,GARA0H,EAAKvB,GACDxC,GAAQkF,KAAKhJ,EAAMiJ,OAAO3C,MAC5BwB,EAAK9H,EAAMiJ,OAAO3C,IAClBA,OAEAwB,EAAK3H,EACmB,IAApB0G,IAAyBa,SAAS3D,KAEpC+D,IAAO3H,EAAY,CAUrB,IATAgI,EAAK7B,GACL8B,EAAK,GACDnE,GAAQ+E,KAAKhJ,EAAMiJ,OAAO3C,MAC5B+B,EAAKrI,EAAMiJ,OAAO3C,IAClBA,OAEA+B,EAAKlI,EACmB,IAApB0G,IAAyBa,SAASxD,KAEjCmE,IAAOlI,GACZiI,EAAGT,KAAKU,GACJpE,GAAQ+E,KAAKhJ,EAAMiJ,OAAO3C,MAC5B+B,EAAKrI,EAAMiJ,OAAO3C,IAClBA,OAEA+B,EAAKlI,EACmB,IAApB0G,IAAyBa,SAASxD,KAQ1C,IAJEiE,EADEC,IAAOjI,EACJH,EAAM+I,UAAUZ,EAAI7B,IAEpB8B,KAEIjI,EAAY,CAWrB,GAVAiI,EAAK9B,GACL+B,EAAK,GACLC,EAAKhC,GACiC,KAAlCtG,EAAMhB,WAAWsH,KACnBqC,EAAKxE,GACLmC,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAAStD,KAEpCuE,IAAOxI,EAQT,GAPI2D,GAAQkF,KAAKhJ,EAAMiJ,OAAO3C,MAC5BsC,GAAK5I,EAAMiJ,OAAO3C,IAClBA,OAEAsC,GAAKzI,EACmB,IAApB0G,IAAyBa,SAAS3D,KAEpC6E,KAAOzI,EAAY,CASrB,IARA0I,GAAK,GACD5E,GAAQ+E,KAAKhJ,EAAMiJ,OAAO3C,MAC5BwC,GAAK9I,EAAMiJ,OAAO3C,IAClBA,OAEAwC,GAAK3I,EACmB,IAApB0G,IAAyBa,SAASxD,KAEjC4E,KAAO3I,GACZ0I,GAAGlB,KAAKmB,IACJ7E,GAAQ+E,KAAKhJ,EAAMiJ,OAAO3C,MAC5BwC,GAAK9I,EAAMiJ,OAAO3C,IAClBA,OAEAwC,GAAK3I,EACmB,IAApB0G,IAAyBa,SAASxD,KAGtC2E,KAAO1I,GACToG,GAAe+B,EAEfA,EADAK,EAAKtE,QAAQyD,EAAIK,EAAIS,GAAIC,MAGzBvC,GAAcgC,EACdA,EAAKnI,QAGPmG,GAAcgC,EACdA,EAAKnI,OAGPmG,GAAcgC,EACdA,EAAKnI,EAEP,KAAOmI,IAAOnI,GAUZ,GATAkI,EAAGV,KAAKW,GACRA,EAAKhC,GACiC,KAAlCtG,EAAMhB,WAAWsH,KACnBqC,EAAKxE,GACLmC,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAAStD,KAEpCuE,IAAOxI,EAQT,GAPI2D,GAAQkF,KAAKhJ,EAAMiJ,OAAO3C,MAC5BsC,GAAK5I,EAAMiJ,OAAO3C,IAClBA,OAEAsC,GAAKzI,EACmB,IAApB0G,IAAyBa,SAAS3D,KAEpC6E,KAAOzI,EAAY,CASrB,IARA0I,GAAK,GACD5E,GAAQ+E,KAAKhJ,EAAMiJ,OAAO3C,MAC5BwC,GAAK9I,EAAMiJ,OAAO3C,IAClBA,OAEAwC,GAAK3I,EACmB,IAApB0G,IAAyBa,SAASxD,KAEjC4E,KAAO3I,GACZ0I,GAAGlB,KAAKmB,IACJ7E,GAAQ+E,KAAKhJ,EAAMiJ,OAAO3C,MAC5BwC,GAAK9I,EAAMiJ,OAAO3C,IAClBA,OAEAwC,GAAK3I,EACmB,IAApB0G,IAAyBa,SAASxD,KAGtC2E,KAAO1I,GACToG,GAAe+B,EAEfA,EADAK,EAAKtE,QAAQyD,EAAIK,EAAIS,GAAIC,MAGzBvC,GAAcgC,EACdA,EAAKnI,QAGPmG,GAAcgC,EACdA,EAAKnI,OAGPmG,GAAcgC,EACdA,EAAKnI,GAIPiI,EADEC,IAAOlI,EACJH,EAAM+I,UAAUX,EAAI9B,IAEpB+B,KAEIlI,GACToG,GAAesB,EAEfA,EADAC,EAAaA,EAAIK,EAAIC,IAGrB9B,GAAcuB,EACdA,EAAK1H,QAGPmG,GAAcuB,EACdA,EAAK1H,OAGPmG,GAAcuB,EACdA,EAAK1H,EAEH0H,IAAO1H,IACT0H,EAAKnD,IAIT,OAAOmD,EAx3BAa,GACDP,IAAOhI,GACTiI,EAy3BN,SAASc,sBACP,IAAIrB,EAAIC,EAAIK,EAAIC,EAAIC,EAAIC,EAAIK,EAAIC,EAAIC,EAAIC,EAAIK,EAAKC,EAAKC,EAEtDxB,EAAKvB,GACiC,KAAlCtG,EAAMhB,WAAWsH,KACnBwB,EAjpCU,IAkpCVxB,OAEAwB,EAAK3H,EACmB,IAApB0G,IAAyBa,SAAS/C,KAExC,GAAImD,IAAO3H,EAAY,CAYrB,GAXAgI,EAAK,GACLC,EAAK9B,GACL+B,EAAK/B,GACLgC,EAAK,GACD1D,GAAQoE,KAAKhJ,EAAMiJ,OAAO3C,MAC5BqC,EAAK3I,EAAMiJ,OAAO3C,IAClBA,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAAS7C,KAEpC8D,IAAOxI,EACT,KAAOwI,IAAOxI,GACZmI,EAAGX,KAAKgB,GACJ/D,GAAQoE,KAAKhJ,EAAMiJ,OAAO3C,MAC5BqC,EAAK3I,EAAMiJ,OAAO3C,IAClBA,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAAS7C,UAI1CyD,EAAKnI,EAOP,IAJEkI,EADEC,IAAOnI,EACJH,EAAM+I,UAAUV,EAAI/B,IAEpBgC,KAEInI,EAAY,CASrB,GARAmI,EAAKhC,GACiC,KAAlCtG,EAAMhB,WAAWsH,KACnBqC,EAAKnG,EACL8D,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAASjF,IAEpCkG,IAAOxI,EAQT,GAPsC,KAAlCH,EAAMhB,WAAWsH,KACnBsC,EAAK9H,EACLwF,OAEAsC,EAAKzI,EACmB,IAApB0G,IAAyBa,SAAS3G,IAEpC6H,IAAOzI,EAAY,CAuCrB,IAtCA0I,EAAKvC,GACLwC,EAAK,GACLK,EAAM7C,GACN8C,EAAM9C,GACNO,KACsC,KAAlC7G,EAAMhB,WAAWsH,KACnB+C,EAAMvI,EACNwF,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAAS3G,IAExC8F,KACIwC,IAAQlJ,EACViJ,OAAM,GAEN9C,GAAc8C,EACdA,EAAMjJ,GAEJiJ,IAAQjJ,GACNH,EAAM1B,OAASgI,IACjB+C,EAAMrJ,EAAMiJ,OAAO3C,IACnBA,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAAS5C,KAEpCuE,IAAQlJ,EAEVgJ,EADAC,EAAM,CAACA,EAAKC,IAGZ/C,GAAc6C,EACdA,EAAMhJ,KAGRmG,GAAc6C,EACdA,EAAMhJ,GAEDgJ,IAAQhJ,GACb2I,EAAGnB,KAAKwB,GACRA,EAAM7C,GACN8C,EAAM9C,GACNO,KACsC,KAAlC7G,EAAMhB,WAAWsH,KACnB+C,EAAMvI,EACNwF,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAAS3G,IAExC8F,KACIwC,IAAQlJ,EACViJ,OAAM,GAEN9C,GAAc8C,EACdA,EAAMjJ,GAEJiJ,IAAQjJ,GACNH,EAAM1B,OAASgI,IACjB+C,EAAMrJ,EAAMiJ,OAAO3C,IACnBA,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAAS5C,KAEpCuE,IAAQlJ,EAEVgJ,EADAC,EAAM,CAACA,EAAKC,IAGZ/C,GAAc6C,EACdA,EAAMhJ,KAGRmG,GAAc6C,EACdA,EAAMhJ,IAIR0I,EADEC,IAAO3I,EACJH,EAAM+I,UAAUF,EAAIvC,IAEpBwC,KAEI3I,GAC6B,KAAlCH,EAAMhB,WAAWsH,KACnBwC,EAAKhI,EACLwF,OAEAwC,EAAK3I,EACmB,IAApB0G,IAAyBa,SAAS3G,IAEpC+H,IAAO3I,IACT2I,EAAKxC,IACL6C,EAAMG,kBACMnJ,IACVoG,GAAeuC,EACfK,EAlyCoC,IAoyCtCL,EAAKK,GAEHL,IAAO3I,GACToG,GAAe+B,EAEfA,EADAK,EAAK5D,QAAQ+C,EAAIO,EAAIM,EAAIC,EAAIC,EAAIC,KAGjCxC,GAAcgC,EACdA,EAAKnI,KAGPmG,GAAcgC,EACdA,EAAKnI,QAGPmG,GAAcgC,EACdA,EAAKnI,OAGPmG,GAAcgC,EACdA,EAAKnI,EAEP,GAAImI,IAAOnI,EAAY,CASrB,GARAmI,EAAKhC,GACiC,KAAlCtG,EAAMhB,WAAWsH,KACnBqC,EAAKnG,EACL8D,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAASjF,IAEpCkG,IAAOxI,EAQT,GAPsC,KAAlCH,EAAMhB,WAAWsH,KACnBsC,EAAKpH,EACL8E,OAEAsC,EAAKzI,EACmB,IAApB0G,IAAyBa,SAASjG,IAEpCmH,IAAOzI,EAAY,CAuCrB,IAtCA0I,EAAKvC,GACLwC,EAAK,GACLK,EAAM7C,GACN8C,EAAM9C,GACNO,KACsC,KAAlC7G,EAAMhB,WAAWsH,KACnB+C,EAAM7H,EACN8E,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAASjG,IAExCoF,KACIwC,IAAQlJ,EACViJ,OAAM,GAEN9C,GAAc8C,EACdA,EAAMjJ,GAEJiJ,IAAQjJ,GACNH,EAAM1B,OAASgI,IACjB+C,EAAMrJ,EAAMiJ,OAAO3C,IACnBA,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAAS5C,KAEpCuE,IAAQlJ,EAEVgJ,EADAC,EAAM,CAACA,EAAKC,IAGZ/C,GAAc6C,EACdA,EAAMhJ,KAGRmG,GAAc6C,EACdA,EAAMhJ,GAEDgJ,IAAQhJ,GACb2I,EAAGnB,KAAKwB,GACRA,EAAM7C,GACN8C,EAAM9C,GACNO,KACsC,KAAlC7G,EAAMhB,WAAWsH,KACnB+C,EAAM7H,EACN8E,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAASjG,IAExCoF,KACIwC,IAAQlJ,EACViJ,OAAM,GAEN9C,GAAc8C,EACdA,EAAMjJ,GAEJiJ,IAAQjJ,GACNH,EAAM1B,OAASgI,IACjB+C,EAAMrJ,EAAMiJ,OAAO3C,IACnBA,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAAS5C,KAEpCuE,IAAQlJ,EAEVgJ,EADAC,EAAM,CAACA,EAAKC,IAGZ/C,GAAc6C,EACdA,EAAMhJ,KAGRmG,GAAc6C,EACdA,EAAMhJ,IAIR0I,EADEC,IAAO3I,EACJH,EAAM+I,UAAUF,EAAIvC,IAEpBwC,KAEI3I,GAC6B,KAAlCH,EAAMhB,WAAWsH,KACnBwC,EAAKtH,EACL8E,OAEAwC,EAAK3I,EACmB,IAApB0G,IAAyBa,SAASjG,IAEpCqH,IAAO3I,IACT2I,EAAKxC,IACL6C,EAAMG,kBACMnJ,IACVoG,GAAeuC,EACfK,EA36CkC,IA66CpCL,EAAKK,GAEHL,IAAO3I,GACToG,GAAe+B,EAEfA,EADAK,EAAK5D,QAAQ+C,EAAIO,EAAIM,EAAIC,EAAIC,EAAIC,KAGjCxC,GAAcgC,EACdA,EAAKnI,KAGPmG,GAAcgC,EACdA,EAAKnI,QAGPmG,GAAcgC,EACdA,EAAKnI,OAGPmG,GAAcgC,EACdA,EAAKnI,EAEP,GAAImI,IAAOnI,EAAY,CASrB,GARAmI,EAAKhC,GACiC,KAAlCtG,EAAMhB,WAAWsH,KACnBqC,EAAKnG,EACL8D,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAASjF,IAEpCkG,IAAOxI,EAAY,CAuCrB,IAtCAyI,EAAKtC,GACLuC,EAAK,GACLC,EAAKxC,GACL6C,EAAM7C,GACNO,KACI3B,GAAQ8D,KAAKhJ,EAAMiJ,OAAO3C,MAC5B8C,EAAMpJ,EAAMiJ,OAAO3C,IACnBA,OAEA8C,EAAMjJ,EACkB,IAApB0G,IAAyBa,SAASvC,KAExC0B,KACIuC,IAAQjJ,EACVgJ,OAAM,GAEN7C,GAAc6C,EACdA,EAAMhJ,GAEJgJ,IAAQhJ,GACNH,EAAM1B,OAASgI,IACjB8C,EAAMpJ,EAAMiJ,OAAO3C,IACnBA,OAEA8C,EAAMjJ,EACkB,IAApB0G,IAAyBa,SAAS5C,KAEpCsE,IAAQjJ,EAEV2I,EADAK,EAAM,CAACA,EAAKC,IAGZ9C,GAAcwC,EACdA,EAAK3I,KAGPmG,GAAcwC,EACdA,EAAK3I,GAEA2I,IAAO3I,GACZ0I,EAAGlB,KAAKmB,GACRA,EAAKxC,GACL6C,EAAM7C,GACNO,KACI3B,GAAQ8D,KAAKhJ,EAAMiJ,OAAO3C,MAC5B8C,EAAMpJ,EAAMiJ,OAAO3C,IACnBA,OAEA8C,EAAMjJ,EACkB,IAApB0G,IAAyBa,SAASvC,KAExC0B,KACIuC,IAAQjJ,EACVgJ,OAAM,GAEN7C,GAAc6C,EACdA,EAAMhJ,GAEJgJ,IAAQhJ,GACNH,EAAM1B,OAASgI,IACjB8C,EAAMpJ,EAAMiJ,OAAO3C,IACnBA,OAEA8C,EAAMjJ,EACkB,IAApB0G,IAAyBa,SAAS5C,KAEpCsE,IAAQjJ,EAEV2I,EADAK,EAAM,CAACA,EAAKC,IAGZ9C,GAAcwC,EACdA,EAAK3I,KAGPmG,GAAcwC,EACdA,EAAK3I,IAIPyI,EADEC,IAAO1I,EACJH,EAAM+I,UAAUH,EAAItC,IAEpBuC,KAEI1I,GACToG,GAAe+B,EAEfA,EADAK,EAAKvD,QAAQ0C,EAAIO,EAAIM,EAAIC,KAGzBtC,GAAcgC,EACdA,EAAKnI,QAGPmG,GAAcgC,EACdA,EAAKnI,EAEHmI,IAAOnI,IACTmI,EAAKhC,IACLqC,EAAKjE,MACMvE,IACToG,GAAe+B,EACfK,EAtiDE,CAAC,GAAI,GAAI,GAAI,KAwiDjBL,EAAKK,IAIPL,IAAOnI,GACToG,GAAe6B,EAEfA,EADAC,EAAKhD,QAAQyC,EAAIO,EAAIC,KAGrBhC,GAAc8B,EACdA,EAAKjI,QAGPmG,GAAc8B,EACdA,EAAKjI,EA4EP,IA1EIiI,IAAOjI,IACTiI,EAAK9B,IACL+B,EAAKkB,iBACMpJ,IACToG,GAAe6B,EACfC,EAAK3C,QAAQoC,EAAIO,KAEnBD,EAAKC,KACMlI,IACTiI,EAAK9B,GACL+B,EAAK/B,GACLgC,EAAKhC,GACLqC,EAAKrC,GACLO,KACsC,KAAlC7G,EAAMhB,WAAWsH,KACnBsC,EAAKlH,EACL4E,OAEAsC,EAAKzI,EACmB,IAApB0G,IAAyBa,SAAS/F,IAExCkF,KACI+B,IAAOzI,EACTwI,OAAK,GAELrC,GAAcqC,EACdA,EAAKxI,GAEHwI,IAAOxI,GACTyI,EAAKtC,GACLO,KACAgC,EAAKW,eACL3C,KACIgC,IAAO1I,EACTyI,OAAK,GAELtC,GAAcsC,EACdA,EAAKzI,GAEHyI,IAAOzI,GACLH,EAAM1B,OAASgI,IACjBuC,EAAK7I,EAAMiJ,OAAO3C,IAClBA,OAEAuC,EAAK1I,EACmB,IAApB0G,IAAyBa,SAAS5C,KAEpC+D,IAAO1I,EAETmI,EADAK,EAAK,CAACA,EAAIC,EAAIC,IAGdvC,GAAcgC,EACdA,EAAKnI,KAGPmG,GAAcgC,EACdA,EAAKnI,KAGPmG,GAAcgC,EACdA,EAAKnI,IAGLkI,EADEC,IAAOnI,EACJH,EAAM+I,UAAUV,EAAI/B,IAEpBgC,KAEInI,IACToG,GAAe6B,EACfC,EAAKzC,QAAQkC,EAAIO,IAEnBD,EAAKC,IAGFD,IAAOjI,GAAY,CAYxB,GAXAgI,EAAGR,KAAKS,GACRA,EAAK9B,GACL+B,EAAK/B,GACLgC,EAAK,GACD1D,GAAQoE,KAAKhJ,EAAMiJ,OAAO3C,MAC5BqC,EAAK3I,EAAMiJ,OAAO3C,IAClBA,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAAS7C,KAEpC8D,IAAOxI,EACT,KAAOwI,IAAOxI,GACZmI,EAAGX,KAAKgB,GACJ/D,GAAQoE,KAAKhJ,EAAMiJ,OAAO3C,MAC5BqC,EAAK3I,EAAMiJ,OAAO3C,IAClBA,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAAS7C,UAI1CyD,EAAKnI,EAOP,IAJEkI,EADEC,IAAOnI,EACJH,EAAM+I,UAAUV,EAAI/B,IAEpBgC,KAEInI,EAAY,CASrB,GARAmI,EAAKhC,GACiC,KAAlCtG,EAAMhB,WAAWsH,KACnBqC,EAAKnG,EACL8D,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAASjF,IAEpCkG,IAAOxI,EAQT,GAPsC,KAAlCH,EAAMhB,WAAWsH,KACnBsC,EAAK9H,EACLwF,OAEAsC,EAAKzI,EACmB,IAApB0G,IAAyBa,SAAS3G,IAEpC6H,IAAOzI,EAAY,CAuCrB,IAtCA0I,EAAKvC,GACLwC,EAAK,GACLK,EAAM7C,GACN8C,EAAM9C,GACNO,KACsC,KAAlC7G,EAAMhB,WAAWsH,KACnB+C,EAAMvI,EACNwF,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAAS3G,IAExC8F,KACIwC,IAAQlJ,EACViJ,OAAM,GAEN9C,GAAc8C,EACdA,EAAMjJ,GAEJiJ,IAAQjJ,GACNH,EAAM1B,OAASgI,IACjB+C,EAAMrJ,EAAMiJ,OAAO3C,IACnBA,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAAS5C,KAEpCuE,IAAQlJ,EAEVgJ,EADAC,EAAM,CAACA,EAAKC,IAGZ/C,GAAc6C,EACdA,EAAMhJ,KAGRmG,GAAc6C,EACdA,EAAMhJ,GAEDgJ,IAAQhJ,GACb2I,EAAGnB,KAAKwB,GACRA,EAAM7C,GACN8C,EAAM9C,GACNO,KACsC,KAAlC7G,EAAMhB,WAAWsH,KACnB+C,EAAMvI,EACNwF,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAAS3G,IAExC8F,KACIwC,IAAQlJ,EACViJ,OAAM,GAEN9C,GAAc8C,EACdA,EAAMjJ,GAEJiJ,IAAQjJ,GACNH,EAAM1B,OAASgI,IACjB+C,EAAMrJ,EAAMiJ,OAAO3C,IACnBA,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAAS5C,KAEpCuE,IAAQlJ,EAEVgJ,EADAC,EAAM,CAACA,EAAKC,IAGZ/C,GAAc6C,EACdA,EAAMhJ,KAGRmG,GAAc6C,EACdA,EAAMhJ,IAIR0I,EADEC,IAAO3I,EACJH,EAAM+I,UAAUF,EAAIvC,IAEpBwC,KAEI3I,GAC6B,KAAlCH,EAAMhB,WAAWsH,KACnBwC,EAAKhI,EACLwF,OAEAwC,EAAK3I,EACmB,IAApB0G,IAAyBa,SAAS3G,IAEpC+H,IAAO3I,IACT2I,EAAKxC,IACL6C,EAAMG,kBACMnJ,IACVoG,GAAeuC,EACfK,EA5xDkC,IA8xDpCL,EAAKK,GAEHL,IAAO3I,GACToG,GAAe+B,EAEfA,EADAK,EAAK5D,QAAQ+C,EAAIO,EAAIM,EAAIC,EAAIC,EAAIC,KAGjCxC,GAAcgC,EACdA,EAAKnI,KAGPmG,GAAcgC,EACdA,EAAKnI,QAGPmG,GAAcgC,EACdA,EAAKnI,OAGPmG,GAAcgC,EACdA,EAAKnI,EAEP,GAAImI,IAAOnI,EAAY,CASrB,GARAmI,EAAKhC,GACiC,KAAlCtG,EAAMhB,WAAWsH,KACnBqC,EAAKnG,EACL8D,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAASjF,IAEpCkG,IAAOxI,EAQT,GAPsC,KAAlCH,EAAMhB,WAAWsH,KACnBsC,EAAKpH,EACL8E,OAEAsC,EAAKzI,EACmB,IAApB0G,IAAyBa,SAASjG,IAEpCmH,IAAOzI,EAAY,CAuCrB,IAtCA0I,EAAKvC,GACLwC,EAAK,GACLK,EAAM7C,GACN8C,EAAM9C,GACNO,KACsC,KAAlC7G,EAAMhB,WAAWsH,KACnB+C,EAAM7H,EACN8E,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAASjG,IAExCoF,KACIwC,IAAQlJ,EACViJ,OAAM,GAEN9C,GAAc8C,EACdA,EAAMjJ,GAEJiJ,IAAQjJ,GACNH,EAAM1B,OAASgI,IACjB+C,EAAMrJ,EAAMiJ,OAAO3C,IACnBA,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAAS5C,KAEpCuE,IAAQlJ,EAEVgJ,EADAC,EAAM,CAACA,EAAKC,IAGZ/C,GAAc6C,EACdA,EAAMhJ,KAGRmG,GAAc6C,EACdA,EAAMhJ,GAEDgJ,IAAQhJ,GACb2I,EAAGnB,KAAKwB,GACRA,EAAM7C,GACN8C,EAAM9C,GACNO,KACsC,KAAlC7G,EAAMhB,WAAWsH,KACnB+C,EAAM7H,EACN8E,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAASjG,IAExCoF,KACIwC,IAAQlJ,EACViJ,OAAM,GAEN9C,GAAc8C,EACdA,EAAMjJ,GAEJiJ,IAAQjJ,GACNH,EAAM1B,OAASgI,IACjB+C,EAAMrJ,EAAMiJ,OAAO3C,IACnBA,OAEA+C,EAAMlJ,EACkB,IAApB0G,IAAyBa,SAAS5C,KAEpCuE,IAAQlJ,EAEVgJ,EADAC,EAAM,CAACA,EAAKC,IAGZ/C,GAAc6C,EACdA,EAAMhJ,KAGRmG,GAAc6C,EACdA,EAAMhJ,IAIR0I,EADEC,IAAO3I,EACJH,EAAM+I,UAAUF,EAAIvC,IAEpBwC,KAEI3I,GAC6B,KAAlCH,EAAMhB,WAAWsH,KACnBwC,EAAKtH,EACL8E,OAEAwC,EAAK3I,EACmB,IAApB0G,IAAyBa,SAASjG,IAEpCqH,IAAO3I,IACT2I,EAAKxC,IACL6C,EAAMG,kBACMnJ,IACVoG,GAAeuC,EACfK,EAr6DgC,IAu6DlCL,EAAKK,GAEHL,IAAO3I,GACToG,GAAe+B,EAEfA,EADAK,EAAK5D,QAAQ+C,EAAIO,EAAIM,EAAIC,EAAIC,EAAIC,KAGjCxC,GAAcgC,EACdA,EAAKnI,KAGPmG,GAAcgC,EACdA,EAAKnI,QAGPmG,GAAcgC,EACdA,EAAKnI,OAGPmG,GAAcgC,EACdA,EAAKnI,EAEP,GAAImI,IAAOnI,EAAY,CASrB,GARAmI,EAAKhC,GACiC,KAAlCtG,EAAMhB,WAAWsH,KACnBqC,EAAKnG,EACL8D,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAASjF,IAEpCkG,IAAOxI,EAAY,CAuCrB,IAtCAyI,EAAKtC,GACLuC,EAAK,GACLC,EAAKxC,GACL6C,EAAM7C,GACNO,KACI3B,GAAQ8D,KAAKhJ,EAAMiJ,OAAO3C,MAC5B8C,EAAMpJ,EAAMiJ,OAAO3C,IACnBA,OAEA8C,EAAMjJ,EACkB,IAApB0G,IAAyBa,SAASvC,KAExC0B,KACIuC,IAAQjJ,EACVgJ,OAAM,GAEN7C,GAAc6C,EACdA,EAAMhJ,GAEJgJ,IAAQhJ,GACNH,EAAM1B,OAASgI,IACjB8C,EAAMpJ,EAAMiJ,OAAO3C,IACnBA,OAEA8C,EAAMjJ,EACkB,IAApB0G,IAAyBa,SAAS5C,KAEpCsE,IAAQjJ,EAEV2I,EADAK,EAAM,CAACA,EAAKC,IAGZ9C,GAAcwC,EACdA,EAAK3I,KAGPmG,GAAcwC,EACdA,EAAK3I,GAEA2I,IAAO3I,GACZ0I,EAAGlB,KAAKmB,GACRA,EAAKxC,GACL6C,EAAM7C,GACNO,KACI3B,GAAQ8D,KAAKhJ,EAAMiJ,OAAO3C,MAC5B8C,EAAMpJ,EAAMiJ,OAAO3C,IACnBA,OAEA8C,EAAMjJ,EACkB,IAApB0G,IAAyBa,SAASvC,KAExC0B,KACIuC,IAAQjJ,EACVgJ,OAAM,GAEN7C,GAAc6C,EACdA,EAAMhJ,GAEJgJ,IAAQhJ,GACNH,EAAM1B,OAASgI,IACjB8C,EAAMpJ,EAAMiJ,OAAO3C,IACnBA,OAEA8C,EAAMjJ,EACkB,IAApB0G,IAAyBa,SAAS5C,KAEpCsE,IAAQjJ,EAEV2I,EADAK,EAAM,CAACA,EAAKC,IAGZ9C,GAAcwC,EACdA,EAAK3I,KAGPmG,GAAcwC,EACdA,EAAK3I,IAIPyI,EADEC,IAAO1I,EACJH,EAAM+I,UAAUH,EAAItC,IAEpBuC,KAEI1I,GACToG,GAAe+B,EAEfA,EADAK,EAAKvD,QAAQ0C,EAAIO,EAAIM,EAAIC,KAGzBtC,GAAcgC,EACdA,EAAKnI,QAGPmG,GAAcgC,EACdA,EAAKnI,EAEHmI,IAAOnI,IACTmI,EAAKhC,IACLqC,EAAKjE,MACMvE,IACToG,GAAe+B,EACfK,EAhiEA,CAAC,GAAI,GAAI,GAAI,KAkiEfL,EAAKK,IAIPL,IAAOnI,GACToG,GAAe6B,EAEfA,EADAC,EAAKhD,QAAQyC,EAAIO,EAAIC,KAGrBhC,GAAc8B,EACdA,EAAKjI,QAGPmG,GAAc8B,EACdA,EAAKjI,EAEHiI,IAAOjI,IACTiI,EAAK9B,IACL+B,EAAKkB,iBACMpJ,IACToG,GAAe6B,EACfC,EAAK3C,QAAQoC,EAAIO,KAEnBD,EAAKC,KACMlI,IACTiI,EAAK9B,GACL+B,EAAK/B,GACLgC,EAAKhC,GACLqC,EAAKrC,GACLO,KACsC,KAAlC7G,EAAMhB,WAAWsH,KACnBsC,EAAKlH,EACL4E,OAEAsC,EAAKzI,EACmB,IAApB0G,IAAyBa,SAAS/F,IAExCkF,KACI+B,IAAOzI,EACTwI,OAAK,GAELrC,GAAcqC,EACdA,EAAKxI,GAEHwI,IAAOxI,GACTyI,EAAKtC,GACLO,KACAgC,EAAKW,eACL3C,KACIgC,IAAO1I,EACTyI,OAAK,GAELtC,GAAcsC,EACdA,EAAKzI,GAEHyI,IAAOzI,GACLH,EAAM1B,OAASgI,IACjBuC,EAAK7I,EAAMiJ,OAAO3C,IAClBA,OAEAuC,EAAK1I,EACmB,IAApB0G,IAAyBa,SAAS5C,KAEpC+D,IAAO1I,EAETmI,EADAK,EAAK,CAACA,EAAIC,EAAIC,IAGdvC,GAAcgC,EACdA,EAAKnI,KAGPmG,GAAcgC,EACdA,EAAKnI,KAGPmG,GAAcgC,EACdA,EAAKnI,IAGLkI,EADEC,IAAOnI,EACJH,EAAM+I,UAAUV,EAAI/B,IAEpBgC,KAEInI,IACToG,GAAe6B,EACfC,EAAKzC,QAAQkC,EAAIO,IAEnBD,EAAKC,IAIPF,IAAOhI,GAC6B,KAAlCH,EAAMhB,WAAWsH,KACnB8B,EAAK1G,EACL4E,OAEA8B,EAAKjI,EACmB,IAApB0G,IAAyBa,SAAS/F,IAEpCyG,IAAOjI,IACTiI,EAAK9B,GACL+B,EAAK/B,GACLO,KACAyB,EAAKkB,eACL3C,KACIyB,IAAOnI,GACTmG,GAAc+B,EACdA,OAAK,GAELA,EAAKlI,EAEHkI,IAAOlI,IACToG,GAAe6B,EACfC,EA/nEoC,IAioEtCD,EAAKC,GAEHD,IAAOjI,GACToG,GAAesB,EAEfA,EADAC,EAnoEK,CACNvC,MAAO,cACPP,KAioEc8C,EAhoEd2B,QAgoEkBtB,EA/nElBuB,MA+nEsBtB,KAGrB9B,GAAcuB,EACdA,EAAK1H,KAGPmG,GAAcuB,EACdA,EAAK1H,QAGPmG,GAAcuB,EACdA,EAAK1H,EAEH0H,IAAO1H,IACT0H,EAAKvB,GACiC,KAAlCtG,EAAMhB,WAAWsH,KACnBwB,EA7oEQ,IA8oERxB,OAEAwB,EAAK3H,EACmB,IAApB0G,IAAyBa,SAAS3B,KAEpC+B,IAAO3H,IACT2H,EAAKpD,IAEHoD,IAAO3H,IACToG,GAAesB,EACfC,EArpEO,CACNvC,MAAO,YACPoE,UAmpEY7B,IAEfD,EAAKC,GAGP,OAAOD,EAt7DEqB,GACDd,IAAOjI,IACTkI,EAAKN,qBACM5H,GACTmI,EA8/DV,SAASsB,mBACP,IAAI/B,EAAIC,EAERD,EAAKvB,IACLwB,EAAK0B,kBACMrJ,IACToG,GAAesB,EAluEIvD,EAmuENwD,EAluEXW,GAAOoB,MAkuET/B,EAjuESxD,GAFC,IAASA,EAuuErB,OAFAuD,EAAKC,EAvgEQ8B,GACDtB,IAAOnI,GACToG,GAAesB,EAEfA,EADAC,EA7WC,CACNtI,KAAM,UACNsK,IA2WiBhC,EA1WjB1K,KA0WqB+K,EAzWrB4B,WAyWyB3B,EAxWzBJ,SAwW6BK,EAvW7B2B,IAuWiC1B,EAtWjCnL,SAAUA,cAyWLmJ,GAAcuB,EACdA,EAAK1H,KAOTmG,GAAcuB,EACdA,EAAK1H,KAGPmG,GAAcuB,EACdA,EAAK1H,KAGPmG,GAAcuB,EACdA,EAAK1H,GAGP,OAAO0H,EAjDFK,MACM/H,IACT0H,EAmtEJ,SAASoC,oBACP,IAAIpC,EAAIC,EAAIK,EAAIC,EAAIC,EAEpBR,EAAKvB,GACLwB,EA+BF,SAASoC,eACP,IAAIrC,EAAIC,EAAIK,EAAIC,EAEhBP,EAAKvB,GACiC,KAAlCtG,EAAMhB,WAAWsH,KACnBwB,EAAK7B,GACLK,OAEAwB,EAAK3H,EACmB,IAApB0G,IAAyBa,SAASxB,KAExC,GAAI4B,IAAO3H,EAAY,CASrB,IARAgI,EAAK,GACiC,KAAlCnI,EAAMhB,WAAWsH,KACnB8B,EAAK1H,EACL4F,OAEA8B,EAAKjI,EACmB,IAApB0G,IAAyBa,SAAS/G,IAEjCyH,IAAOjI,GACZgI,EAAGR,KAAKS,GAC8B,KAAlCpI,EAAMhB,WAAWsH,KACnB8B,EAAK1H,EACL4F,OAEA8B,EAAKjI,EACmB,IAApB0G,IAAyBa,SAAS/G,IAGtCwH,IAAOhI,GACToG,GAAesB,EAt8EEvD,EAu8EJwD,EAt8EbqC,IADoB5F,EAu8EH4D,GAt8EN7J,OAAS,EAu8EpBuJ,EADAC,EAr8EOxD,EAAIC,EAAE5E,KAAK,MAw8ElB2G,GAAcuB,EACdA,EAAK1H,QAGPmG,GAAcuB,EACdA,EAAK1H,EA/8EK,IAASmE,EAAGC,EAk9ExB,OAAOsD,EA1EFqC,GACDpC,IAAO3H,GACTgI,EA2EJ,SAASiC,8BACP,IAAIvC,EAEkC,KAAlC7H,EAAMhB,WAAWsH,KACnBuB,EAAK/B,GACLQ,OAEAuB,EAAK1H,EACmB,IAApB0G,IAAyBa,SAAS3B,KAEpC8B,IAAO1H,IACT0H,EAAKnD,IAGP,OAAOmD,EAzFAuC,GACDjC,IAAOhI,GACTiI,EA6JN,SAASiC,yBACP,IAAIxC,EAAIC,EAAIK,EAAIC,EAAIC,EAEpBR,EAAKvB,GACLwB,EAAK,GACLK,EAAK7B,GACL8B,EAAK9B,GACLO,KACAwB,EAAKiC,eACLzD,KACIwB,IAAOlI,EACTiI,OAAK,GAEL9B,GAAc8B,EACdA,EAAKjI,GAEHiI,IAAOjI,GACLH,EAAM1B,OAASgI,IACjB+B,EAAKrI,EAAMiJ,OAAO3C,IAClBA,OAEA+B,EAAKlI,EACmB,IAApB0G,IAAyBa,SAAS5C,KAEpCuD,IAAOlI,GACToG,GAAe4B,EAEfA,EADAC,EAAaC,IAGb/B,GAAc6B,EACdA,EAAKhI,KAGPmG,GAAc6B,EACdA,EAAKhI,GAEP,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GACRA,EAAK7B,GACL8B,EAAK9B,GACLO,KACAwB,EAAKiC,eACLzD,KACIwB,IAAOlI,EACTiI,OAAK,GAEL9B,GAAc8B,EACdA,EAAKjI,GAEHiI,IAAOjI,GACLH,EAAM1B,OAASgI,IACjB+B,EAAKrI,EAAMiJ,OAAO3C,IAClBA,OAEA+B,EAAKlI,EACmB,IAApB0G,IAAyBa,SAAS5C,KAEpCuD,IAAOlI,GACToG,GAAe4B,EAEfA,EADAC,EAAaC,IAGb/B,GAAc6B,EACdA,EAAKhI,KAGPmG,GAAc6B,EACdA,EAAKhI,GAGL2H,IAAO3H,IACToG,GAAesB,EACfC,EAAK3B,QAAQ2B,IAIf,OAFAD,EAAKC,EAvOIuC,GACDjC,IAAOjI,IACTkI,EAAKiC,kBACMnK,GACToG,GAAesB,EAEfA,EADAC,EA15EG,CACNtI,KAAM,WACN+K,IAw5EgBzC,EAv5EhB6B,UAu5EoBxB,EAt5EpB3K,MAs5EwB4K,EAr5ExBoC,IAq5E4BnC,EAp5E5BlL,SAAUA,cA25ETmJ,GAAcuB,EACdA,EAAK1H,KAGPmG,GAAcuB,EACdA,EAAK1H,KAGPmG,GAAcuB,EACdA,EAAK1H,GAGP,OAAO0H,EAnvEAoC,MACM9J,IACT0H,EAsjEN,SAAS4C,gBACP,IAAI5C,EAAIC,EAAIK,EAAIC,EAAIC,EAAIC,EAAIK,EAE5Bd,EAAKvB,GACLwB,EAAK,GACLK,EAAK7B,GACL8B,EAAK9B,GACLO,KACAwB,EAAKG,eACL3B,KACIwB,IAAOlI,EACTiI,OAAK,GAEL9B,GAAc8B,EACdA,EAAKjI,GAEHiI,IAAOjI,GACTkI,EAAK/B,GACLO,KACAyB,EAAKkB,eACL3C,KACIyB,IAAOnI,EACTkI,OAAK,GAEL/B,GAAc+B,EACdA,EAAKlI,GAEHkI,IAAOlI,GACTmI,EAAKhC,GACLO,KACsC,KAAlC7G,EAAMhB,WAAWsH,KACnBqC,EAAK1C,GACLK,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAASxB,KAExCW,KACI8B,IAAOxI,EACTmI,OAAK,GAELhC,GAAcgC,EACdA,EAAKnI,GAEHmI,IAAOnI,GACLH,EAAM1B,OAASgI,IACjBqC,EAAK3I,EAAMiJ,OAAO3C,IAClBA,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAAS5C,KAEpC6D,IAAOxI,GACToG,GAAe4B,EAEfA,EADAC,EAAaO,IAGbrC,GAAc6B,EACdA,EAAKhI,KAGPmG,GAAc6B,EACdA,EAAKhI,KAGPmG,GAAc6B,EACdA,EAAKhI,KAGPmG,GAAc6B,EACdA,EAAKhI,GAEP,GAAIgI,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GACRA,EAAK7B,GACL8B,EAAK9B,GACLO,KACAwB,EAAKG,eACL3B,KACIwB,IAAOlI,EACTiI,OAAK,GAEL9B,GAAc8B,EACdA,EAAKjI,GAEHiI,IAAOjI,GACTkI,EAAK/B,GACLO,KACAyB,EAAKkB,eACL3C,KACIyB,IAAOnI,EACTkI,OAAK,GAEL/B,GAAc+B,EACdA,EAAKlI,GAEHkI,IAAOlI,GACTmI,EAAKhC,GACLO,KACsC,KAAlC7G,EAAMhB,WAAWsH,KACnBqC,EAAK1C,GACLK,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAASxB,KAExCW,KACI8B,IAAOxI,EACTmI,OAAK,GAELhC,GAAcgC,EACdA,EAAKnI,GAEHmI,IAAOnI,GACLH,EAAM1B,OAASgI,IACjBqC,EAAK3I,EAAMiJ,OAAO3C,IAClBA,OAEAqC,EAAKxI,EACmB,IAApB0G,IAAyBa,SAAS5C,KAEpC6D,IAAOxI,GACToG,GAAe4B,EAEfA,EADAC,EAAaO,IAGbrC,GAAc6B,EACdA,EAAKhI,KAGPmG,GAAc6B,EACdA,EAAKhI,KAGPmG,GAAc6B,EACdA,EAAKhI,KAGPmG,GAAc6B,EACdA,EAAKhI,QAIT2H,EAAK3H,EAEH2H,IAAO3H,IACToG,GAAesB,EACfC,EAAK3B,QAAQ2B,IAIf,OAFAD,EAAKC,EA5sEI2C,IAIF5C,EA4CT,SAASW,eACP,IAAIX,EAAIC,EAAIK,EAAIC,EAAIC,EA1XG9D,EAoYvB,GARAsD,EAAKvB,GACiC,KAAlCtG,EAAMhB,WAAWsH,KACnBwB,EAlYS,IAmYTxB,OAEAwB,EAAK3H,EACmB,IAApB0G,IAAyBa,SAASlH,IAEpCsH,IAAO3H,EAAY,CAUrB,IATAgI,EAAK7B,GACL8B,EAAK,GACiC,KAAlCpI,EAAMhB,WAAWsH,KACnB+B,EAAK3H,EACL4F,OAEA+B,EAAKlI,EACmB,IAApB0G,IAAyBa,SAAS/G,IAEjC0H,IAAOlI,GACZiI,EAAGT,KAAKU,GAC8B,KAAlCrI,EAAMhB,WAAWsH,KACnB+B,EAAK3H,EACL4F,OAEA+B,EAAKlI,EACmB,IAApB0G,IAAyBa,SAAS/G,KAIxCwH,EADEC,IAAOjI,EACJH,EAAM+I,UAAUZ,EAAI7B,IAEpB8B,KAEIjI,GACToG,GAAeD,GA9ZI/B,EA+ZH4D,GAEdC,GAFFA,GA/Z+BK,GAAOA,GAAOnK,OAAS,IAAM,IAAMiG,EAAEjG,OAAS,QAiatE,EAEA6B,KAEIA,GACToG,GAAesB,EACfC,EAtaK,SAASxD,EAAGC,GACnB,OAAOD,EAAIC,EAqaJmG,CAAO5C,EAAIK,GAChBN,EAAKC,IAELxB,GAAcuB,EACdA,EAAK1H,KAGPmG,GAAcuB,EACdA,EAAK1H,QAGPmG,GAAcuB,EACdA,EAAK1H,EAGP,OAAO0H,EA21DT,SAAS2B,eACP,IAAI3B,EAAIC,EAAIK,EAAIC,EAvpEK9D,EAmqErB,IAVAuD,EAAKvB,GACLwB,EAAKxB,GACL6B,EAAK,GACiC,KAAlCnI,EAAMhB,WAAWsH,KACnB8B,EAAK1F,EACL4D,OAEA8B,EAAKjI,EACmB,IAApB0G,IAAyBa,SAAS/E,IAEjCyF,IAAOjI,GACZgI,EAAGR,KAAKS,GAC8B,KAAlCpI,EAAMhB,WAAWsH,KACnB8B,EAAK1F,EACL4D,OAEA8B,EAAKjI,EACmB,IAApB0G,IAAyBa,SAAS/E,IAkD1C,OA9CEmF,EADEK,IAAOhI,EACJH,EAAM+I,UAAUjB,EAAIxB,IAEpB6B,KAEIhI,GAC6B,KAAlCH,EAAMhB,WAAWsH,KACnB6B,EAtrEQ,IAurER7B,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS1B,KAEpCmC,IAAOhI,GACToG,GAAeD,GA3rEEhC,EA4rEJwD,GAEXM,GAFFA,GA5rEgCK,GAAOA,GAAOnK,OAAS,IAAM,IAAMgG,EAAEhG,OAAS,QA8rEvE,EAEA6B,KAEIA,GACToG,GAAesB,EACfC,EAnsEM,SAASxD,EAAGC,GAAI,OAAOD,EAAIC,EAmsE5BoG,CAAQ7C,EAAIK,GACjBN,EAAKC,IAELxB,GAAcuB,EACdA,EAAK1H,KAGPmG,GAAcuB,EACdA,EAAK1H,KAGPmG,GAAcuB,EACdA,EAAK1H,GAEH0H,IAAO1H,IACT0H,EAAKvB,IACLwB,EAAKwB,kBACMnJ,IACToG,GAAesB,EACfC,EArtE2B,IAutE7BD,EAAKC,GAGAD,EAiBT,SAASyB,eACP,IAAIzB,EAAIC,EAmBR,OAjBAD,EAAKvB,GACLO,KACI7G,EAAM1B,OAASgI,IACjBwB,EAAK9H,EAAMiJ,OAAO3C,IAClBA,OAEAwB,EAAK3H,EACmB,IAApB0G,IAAyBa,SAAS5C,KAExC+B,KACIiB,IAAO3H,EACT0H,OAAK,GAELvB,GAAcuB,EACdA,EAAK1H,GAGA0H,EAgQT,SAASyC,eACP,IAAIzC,EAAIC,EAAIK,EAWZ,IATAN,EAAKvB,GACLwB,EAAK,GACiC,KAAlC9H,EAAMhB,WAAWsH,KACnB6B,EAAKzF,EACL4D,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS/E,IAEjCwF,IAAOhI,GACZ2H,EAAGH,KAAKQ,GAC8B,KAAlCnI,EAAMhB,WAAWsH,KACnB6B,EAAKzF,EACL4D,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAAS/E,IA6C1C,OA1CImF,IAAO3H,GAC6B,KAAlCH,EAAMhB,WAAWsH,KACnB6B,EAAKlC,GACLK,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASxB,KAEpCiC,IAAOhI,GACToG,GAAeD,IAjgFgB6D,IAkgFlBrC,EAlgF8BxJ,OAAS,OAogF7C,EAEA6B,KAEIA,GACToG,GAAesB,EACfC,EAzgFO,SAASxD,EAAGC,GAAI,OAAOD,EAAE3E,KAAK,IAAM4E,EAygFtCqG,CAAS9C,EAAIK,GAClBN,EAAKC,IAELxB,GAAcuB,EACdA,EAAK1H,KAGPmG,GAAcuB,EACdA,EAAK1H,KAGPmG,GAAcuB,EACdA,EAAK1H,GAEH0H,IAAO1H,IACT0H,EAAKvB,IACLwB,EAAKwB,kBACMnJ,IACToG,GAAesB,EACfC,EA1jF2B,IA4jF7BD,EAAKC,GAGAD,EAiHT,SAAS0B,cACP,IAAI1B,EAAIC,EAAIK,EAWZ,GATAN,EAAKvB,GACLwB,EAAK,GACD1B,GAAS4C,KAAKhJ,EAAMiJ,OAAO3C,MAC7B6B,EAAKnI,EAAMiJ,OAAO3C,IAClBA,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASrB,KAEpC8B,IAAOhI,EACT,KAAOgI,IAAOhI,GACZ2H,EAAGH,KAAKQ,GACJ/B,GAAS4C,KAAKhJ,EAAMiJ,OAAO3C,MAC7B6B,EAAKnI,EAAMiJ,OAAO3C,IAClBA,OAEA6B,EAAKhI,EACmB,IAApB0G,IAAyBa,SAASrB,UAI1CyB,EAAK3H,EAQP,OALE0H,EADEC,IAAO3H,EACJH,EAAM+I,UAAUlB,EAAIvB,IAEpBwB,EAOR,IAAiBqC,GAAb1B,GAAS,GAKd,IAFAvI,EAAaK,OAEMJ,GAAcmG,KAAgBtG,EAAM1B,OACrD,OAAO4B,EAMP,MAJIA,IAAeC,GAAcmG,GAActG,EAAM1B,QACnDoJ,SAroFK,CAAElI,KAAM,QAwoFToI,yBACJhB,GACAD,GAAiB3G,EAAM1B,OAAS0B,EAAMiJ,OAAOtC,IAAkB,KAC/DA,GAAiB3G,EAAM1B,OACnByI,oBAAoBJ,GAAgBA,GAAiB,GACrDI,oBAAoBJ,GAAgBA,Q,YCtgG9C,SAASkE,QAAQC,GAChB,IAAIC,EAA6B,GAEjC,IAAK,IAAIC,KAAKF,EAAGC,EAAGC,GAAKF,EAAEE,GAE3B,OAAOD,EAGR,SAASE,YAAYH,GACpB,IAAIC,EAA2B,GAI/B,OAHID,EAAEI,OAAMH,EAAGG,KAAOL,QAAQC,EAAEI,OAC5BJ,EAAEK,OAAMJ,EAAGI,KAAOL,EAAEK,MACpBL,EAAEM,QAAOL,EAAGK,MAAQN,EAAEM,OACnBL,EAGR,SAASG,KAAKG,EAA4BN,GAGzC,IAAK,IAAIC,KAFTK,EAAKR,QAAQQ,GAECN,EACbM,EAAGL,GAAKD,EAAGC,GAGZ,OAAOK,E,iDAyBR,UAAe,CACdJ,YACAC,KACAjL,QAzBD,SAASA,QAAQoL,EAA0BN,GAC1C,GAAiB,iBAANM,GACO,iBAANN,EACX,MAAMO,UAAU,gDAgBjB,OAbAD,EAAKJ,YAAYI,GAEbN,EAAGG,OACDG,EAAGH,OACPG,EAAGH,KAAO,IAGXG,EAAGH,KAAOA,KAAKG,EAAGH,KAAMH,EAAGG,OAGxBH,EAAGI,OAAME,EAAGF,KAAOJ,EAAGI,MACtBJ,EAAGK,QAAOC,EAAGD,MAAQL,EAAGK,OAErBC,K,6DChDR,IAICE,EAAyB,EACzBC,EAAyB,EAE1B,mBAAwBC,kBAAkBC,GACzC,SAASC,MAAMC,EAAQC,GACtB,IAAKA,EAAMC,OAAOD,EAAMC,OAAOxN,OAAS,IAAM,GAAK,EAAG,CACrD,IAAIyN,GAAYF,EAAMC,OAAOD,EAAMC,OAAOxN,OAAS,GAC/C0N,EAAY,IAAIC,OAAOF,EAAW,GAAK,IAM3C,OALIH,EAAOM,OAAOF,IACjBJ,EAAOO,MAAMH,GACbH,EAAMC,OAAOjC,OACP+B,EAAOQ,YAEP,UAGR,IAAInH,EAAI2G,EAAOS,OAEf,IAAK,CAACd,EAAwBC,GAAwBc,SAAST,EAAMU,SAChE,CAAC,IAAK,KAAKD,SAASrH,KACpBuH,EAAWX,EAAMC,OAAOD,EAAMC,OAAOxN,OAAS,IAAM,GACzC,EAAG,CACjB,IAAImO,EAAY,IAAIR,OAAOO,EAAW,GAAK,IAC3C,GAAIZ,EAAOO,MAAMM,GAGhB,OAFAZ,EAAMC,OAAOjC,MACbgC,EAAMU,OA7BQ,EA8BP,MAKV,GAnCiB,GAmCbV,EAAMU,OAAwB,CACjC,GAAIX,EAAOO,MAAM,KAEhB,OADAN,EAAMU,OArCS,EAsCR,MAGR,GAxCqB,GAwCjBV,EAAMU,OACT,OAAIX,EAAOO,MAAM,gBAChBN,EAAMU,OAzCW,EA0CV,aACGX,EAAOO,MAAM,eAChB,MAEPP,EAAOc,OACA,SAIT,GAnDmB,GAmDfb,EAAMU,OACT,OAAIX,EAAOO,MAAM,MAChBN,EAAMU,OApDc,EAqDb,OAEPV,EAAMU,OAzDa,EA0DZ,MAIT,GA5DsB,GA4DlBV,EAAMU,OACT,OAAIX,EAAOO,MAAM,MAChBN,EAAMU,OAAShB,EACR,UAGJK,EAAOO,MAAM,MAChBN,EAAMU,OAASf,EACR,WAGRI,EAAOO,MAAM,wBACbN,EAAMU,OA1Ec,EA2Eb,UAGR,GAAIV,EAAMU,QAAUhB,EAMnB,OALIK,EAAOM,OAAO,MACjBN,EAAOO,MAAM,KACbN,EAAMU,OAjFa,GAkFbX,EAAOQ,YAEP,SAGR,GAAIP,EAAMU,QAAUf,EAMnB,OALII,EAAOM,OAAO,MACjBN,EAAOO,MAAM,KACbN,EAAMU,OA1Fa,GA2FbX,EAAOQ,YAEP,SAIT,GAAS,KAALnH,EAAU,CACb2G,EAAOc,OAGP,IADA,IAAIC,EAAQ,EACL1H,EAAI2G,EAAOc,QAAQ,CACzB,GAAS,KAALzH,EAAU,CACb2G,EAAOgB,OAAO,GACd,MAEDD,IAKD,OAFAd,EAAMC,OAAOnE,MAAMgF,GAEZ,UACD,GAAS,KAAL1H,EAAU,CACpB2G,EAAOc,OAGP,IADIC,EAAQ,EACL1H,EAAI2G,EAAOc,QAAQ,CACzB,GAAS,KAALzH,EAAU,CACb2G,EAAOgB,OAAO,GACd,MAEDD,IAID,GAAIA,GADed,EAAMC,OAAOD,EAAMC,OAAOxN,OAAS,IAAM,GAE3D,OAAO,KAOR,GAFAsN,EAAOO,MAFY,iJAIfP,EAAOO,MAAM,KAChBN,EAAMU,OAtIc,MAuId,CAENX,EAAOO,MADc,cAMtB,OAFAN,EAAMC,OAAOnE,KAAKgF,GAEX,MACD,GAAS,KAAL1H,GAAiB,KAALA,EAAU,CAChC,IAAIuH,EACJ,IADIA,EAAWX,EAAMC,OAAOD,EAAMC,OAAOxN,OAAS,IAAM,IACxC,EAEf,OADAsN,EAAOc,OACA,KAGJD,EAAY,IAAIR,OAAOO,EAAW,GAAK,IAC3C,OAAIZ,EAAOO,MAAMM,IAChBZ,EAAMC,OAAOjC,MACN,QAEP+B,EAAOc,OACA,MAIRd,EAAOO,MAAM,eAIfT,EAAWmB,WAAW,QAAQ,CAACC,EAAQC,KAAiB,CACvDC,WAAWC,IACH,CACNnB,OAAQ,GACRS,OAzKe,IA4KjBZ,Y,yJC5KF,kBACA,YACA,YACA,YACA,YAGA,IAAIuB,EAAsC,GAgD1C,IAAIC,EAAO,CACVC,OAAA,UACAC,SAAA,UACAC,YAAA,UACAC,OAtCD,SAASA,OAAOC,EAAkBvN,GAQjC,OAPKA,IAASA,EAAU,IACnBA,EAAQiL,OAAMjL,EAAQiL,KAAO,IAElCjL,EAAU,UAAQA,QAAQiN,EAAejN,GAEhC,UAASsN,OAAOC,EAAKvN,IAiC9BwN,OA5BD,SAASA,OAAOzN,EAAeC,GAC9BD,GAAS,GACJC,IAASA,EAAU,IACnBA,EAAQiL,OAAMjL,EAAQiL,KAAO,IAElCjL,EAAU,UAAQA,QAAQiN,EAAejN,GAEzC,IAAIyN,EAAK,UAAOC,SAAS3N,GACrBwN,EAAM,UAAOI,OAAOF,GAGxB,OAFW,UAASH,OAAOC,EAAKvN,GAAS4N,WAoBzCC,UAfD,SAASA,UAAU9N,GAClBA,GAAS,GAET,IAAI0N,EAAK,UAAOC,SAAS3N,GAGzB,OAFS,UAAY+N,MAAML,IAY3BM,QArDD,SAASC,eAAehO,GACvB,GAAsB,iBAAXA,EACV,MAAMqL,UAAU,8BACjB4B,EAAgB,UAAQjN,QAAQiN,EAAejN,IAmD/CiO,IAhDD,SAASC,WAAWlO,GACnB,GAAsB,iBAAXA,EACV,MAAMqL,UAAU,8BACjB4B,EAAgBjN,GA8ChBwL,kBAAA,WAGD/O,EAAOD,QAAU0Q,G,6DC9DjB,SAASiB,SAASC,GACjB,MAAO,uBAAuBA,EAAS7O,SAAS6O,EAASC,OANzCnP,EAM4DkP,EAASnQ,MAN/DiB,EAAI,IAAIC,QAAQ,YAAYmP,IAAK,CACvD,IAAK,QAAS,IAAK,OAAQ,IAAK,OAChC,IAAK,SAAU,IAAM,SACnBA,gBAHcpP,IAAAA,EA8HjB,UAAe,CACd4O,MAtHD,SAASA,MAAML,GACd,OAAO,SAAUc,QAAQd,GAGxB,IAFA,IAAIe,EAAM,GAEDtQ,EAAI,EAAGA,EAAIuP,EAAGpP,OAAQH,IAC9B,OAAOuP,EAAGvP,GAAGqB,MACZ,IAAK,OACJiP,GAAOL,SAAS,CACf5O,KAAM,KACNtB,KAAMwP,EAAGvP,GAAGD,OAEb,MACD,IAAK,UACJ,IAAIwQ,EAAMN,SAAS,CAClB5O,KAAM,MACNtB,KAAMwP,EAAGvP,GAAG2L,MAEVsE,SAAS,CACX5O,KAAM,KACNtB,KAAMwP,EAAGvP,GAAGf,OAEV,CAAC+J,IACH,OAAQA,EAAE5B,OACT,IAAK,cACJ,OAAO6I,SAAS,CACf5O,KAAM,MACNtB,KAAMiJ,EAAEnC,OAEPmC,EAAEsC,QAAQkF,KAAIC,IACf,OAAQA,EAAErJ,OACT,IAAK,YACJ,OAAO6I,SAAS,CACf5O,KAAM,KACNtB,KAAM0Q,EAAEpJ,UAAU,KAEjB4I,SAAS,CACV5O,KAAM,KACNtB,KAAM0Q,EAAEpJ,UAAU,KAEjB4I,SAAS,CACV5O,KAAM,MACNtB,KAAM0Q,EAAEpJ,UAAU,KAEjB4I,SAAS,CACV5O,KAAM,KACNtB,KAAM0Q,EAAEpJ,UAAU,KAEjB4I,SAAS,CACV5O,KAAM,MACNtB,KAAM0Q,EAAEpJ,UAAU,KAEpB,IAAK,aACJ,OAAO4I,SAAS,CACf5O,KAAM,KACNtB,KAAM0Q,EAAEjJ,aAEV,IAAK,QACJ,OAAOyI,SAAS,CACf5O,KAAM,MACNtB,KAAM0Q,EAAE/I,QAEV,QACC,MAAMxI,MAAM,oBAEZsC,KAAK,IACNyO,SAAS,CACV5O,KAAM,MACNtB,KAAMiJ,EAAEuC,QAEV,IAAK,YACJ,OAAO0E,SAAS,CACf5O,KAAM,KACNtB,KAAMiJ,EAAEwC,YAEV,QACC,MAAMtM,MAAM,kBAtDZ,CAwDAqQ,EAAGvP,GAAG4L,YACNyE,QAAQd,EAAGvP,GAAG6J,UACdoG,SAAS,CACX5O,KAAM,MACNtB,KAAMwP,EAAGvP,GAAG6L,MAGbyE,GAAOL,SAAS,CACf5O,KAAM,OACN8O,KAAMI,IAEP,MACD,IAAK,WACJ,IAAIG,EAAOT,SAAS,CACnB5O,KAAM,MACNtB,KAAMwP,EAAGvP,GAAGoM,IAAMmD,EAAGvP,GAAGwL,YAEtByE,SAAS,CACX5O,KAAM,KACNtB,KAAMwP,EAAGvP,GAAGX,MAAMU,OAEhBkQ,SAAS,CACX5O,KAAM,MACNtB,KAAMwP,EAAGvP,GAAGqM,MAGbiE,GAAOL,SAAS,CACf5O,KAAM,OACN8O,KAAMO,IAEP,MACD,QACC,MAAM,IAAIvD,UAAU,iBAAiBoC,EAAGvP,GAAGqB,QAI9C,OAAOiP,EAhHD,CAiHJf,EAAGnR,KAAKyL,a,cC3HZ,IAAI8G,E,iDAGHA,EAAM,EAAQ,KA6Gf,UAAe,CACdnB,SAvED,SAASA,SAAS3N,GACjB,IAAI0N,EAAKoB,EAAIhP,MAAME,GAGnB,OAFA0N,EAAG1N,MAAQA,EAEJ0N,GAoEPE,OAjED,SAASA,OAAOF,GACf,IAAI1N,EAAQ0N,EAAG1N,MAEX+O,EAAI,SAAUP,QAAQd,GACzB,IAAIF,EAAME,EAAGiB,KAAIlK,IAChB,OAAQA,EAAEjF,MACT,IAAK,OACJ,MAAO,CACNA,KAAM,OACNtB,KAAMuG,EAAEvG,MAEV,IAAK,WACJ,MAAO,CACNsB,KAAM,OACNtB,KAAMuG,EAAEjH,MAAMU,MAEhB,IAAK,UACJ,IAAI6L,EAAmC,eAAtBtF,EAAEsF,WAAWxE,MAC3B,GACAd,EAAEsF,WAAWN,QAAQuF,QAAO,EAAEzJ,MAAAA,KAAoB,aAATA,IACzCoJ,KAAI,EAAEnJ,UAAAA,MAAe,CACrBpI,KAAMoI,EAAU,GAChBF,MAAOE,EAAU,OAGpB,MAAO,CACNhG,KAAM,UACNpC,KAAMqH,EAAErH,KACR2M,WAAAA,EACAkF,KAAMjP,EAAM+I,UAAUtE,EAAEtH,SAASkD,MAAMoH,OAAQhD,EAAEtH,SAASwB,IAAI8I,QAC9DO,SAAUwG,QAAQ/J,EAAEuD,WAEtB,QACC,MAAM,IAAIsD,UAAU,iBAAiB7G,EAAEjF,YAiB1C,OAZAgO,EAAMA,EAAI0B,QAAO,CAACC,EAAGJ,KACpB,GAAc,QAAVA,EAAEvP,KAAgB,CACrB,IAAKuP,EAAE7Q,KAAM,OAAOiR,EACpB,GAAIA,EAAE7Q,QAAkC,QAAxB6Q,EAAEA,EAAE7Q,OAAS,GAAGkB,KAE/B,OADA2P,EAAEA,EAAE7Q,OAAS,GAAGJ,MAAQ6Q,EAAE7Q,KACnBiR,EAIT,OAAOA,EAAExH,KAAKoH,GAAII,IAChB,IAEI3B,EA/CA,CAgDLE,EAAGnR,KAAKyL,UAEX,MAAO,CACNhI,MAAO0N,EAAG1N,MACVzD,KAAM,CACLiD,KAAM,OACNwI,SAAU+G,EACVE,KAAMjP,O,yJC3GT,kBAEA,IAAIoP,EAEA,GAyHJ,SAASC,aAAaC,GAIrB,OAHAA,EAAMA,EAAIC,OAGN,KAAKvG,KAAKsG,KACT,YAAYtG,KAAKsG,IACbA,EAKL,oBAAoBtG,KAAKsG,KACxB,2BAA2BtG,KAAKsG,IAC5BA,GAIJ,mCAAmCtG,KAAKsG,KAC5CA,EAAM,UAAYA,KAGf,mHAAmHtG,KAAKsG,IACpHA,GA7ITF,EAAWI,QAAU,IAAI,UAAI,CAC5BpS,KAAM,UACNqS,QAAS,SACTpC,SAAUqC,GAAMA,EAAGxR,KAAK,MAGzBkR,EAAWO,OAAS,IAAI,UAAI,CAC3BvS,KAAM,SACNqS,QAAS,SACTpC,SAAUqC,GACJA,EAAGE,YAGJ,iDAAiD5G,KAAK0G,EAAGG,WAGtDH,EAAGpB,KAAK,IAAIoB,EAAGG,cAFdH,EAAG7J,MAAM,iBAHT6J,EAAG7J,MAAM,oBASnB,CACC,IAAK,OAAQ,IAAK,IAAK,MAAO,OAC7BiK,SAAQ1S,GAAQgS,EAAWhS,GAAQ,IAAI,UAAI,CAC5CA,KAAMA,EACNqS,QAAS,SACTpC,SAAUqC,GACFA,EAAGpB,KAAK,IAAIlR,KAAQsS,EAAGK,cAAc3S,UAI9C,CACC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACnC0S,SAAQ1S,GAAQgS,EAAWhS,GAAQ,IAAI,UAAI,CAC5CA,KAAMA,EACNqS,QAAS,aACTpC,SAAUqC,GACFA,EAAGpB,KAAK,IAAIlR,KAAQsS,EAAGK,cAAc3S,UAI9CgS,EAAuB,WAAI,IAAI,UAAI,CAClChS,KAAM,aACNqS,QAAS,kBACTpC,SAAUqC,IACT,IAAIlQ,EAAOkQ,EAAGM,aAAa,QAE3B,MAAI,CAAC,OAAQ,QAAQ1D,SAAS9M,GACtBkQ,EAAGpB,KAAK,8BAA8B9O,MAASkQ,EAAGK,0BAEnDL,EAAGpB,KAAK,eAAeoB,EAAGK,6BAInC,CACC,MACCD,SAAQ1S,GAAQgS,EAAWhS,GAAQ,IAAI,UAAI,CAC5CA,KAAAA,EACAqS,QAAS,SACTpC,SAAUqC,GACFA,EAAGpB,KAAK,IAAIlR,KAAQsS,EAAGK,iBAIhC,CACC,MACCD,SAAQ1S,GAAQgS,EAAWhS,GAAQ,IAAI,UAAI,CAC5CA,KAAAA,EACAqS,QAAS,aACTpC,SAAUqC,GACFA,EAAGpB,KAAK,IAAIlR,KAAQsS,EAAGK,iBAIhC,CAAC,KAAM,MAAMD,SAAQ1S,IACpBgS,EAAWhS,GAAQ,IAAI,UAAI,CAC1BA,KAAAA,EACAqS,QAAS,kBACTQ,MAAO,IACP5C,SAAUqC,GACFA,EAAGpB,KAAK,IAAIlR,KACfsS,EAAGK,UAAuBpB,KAAIuB,GAAK,OAAOA,WAAUvQ,KAAK,IAC1D,KAAKvC,WAKXgS,EAAWe,MAAQ,IAAI,UAAI,CAC1B/S,KAAM,QACNqS,QAAS,kBACTQ,MAAO,CAAC,IAAK,MACb5C,SAAUqC,IACT,IAAIU,EAAKV,EAAGK,UAAyBpB,KAAIlK,GAAKA,EAAEnG,SAAQ4Q,QAAO,CAACC,EAAGJ,IAAMI,EAAIJ,EAAIA,EAAII,IAErF,OAAOO,EAAGpB,KAAK,UACXoB,EAAGK,UAAyBpB,KAAI0B,GAAM,OACxCA,EAAG5K,OAAOlH,MAAM6R,EAAIC,EAAG/R,QAAQgS,KAAK,KAClC3B,KAAIuB,GAAK,OAAOA,WAAUvQ,KAAK,aACzBA,KAAK,IACZ,eAILyP,EAAWmB,UAAY,IAAI,UAAI,CAC9BnT,KAAM,YACNqS,QAAS,aACTpC,SAAUqC,IACT,IAAIc,EAAWd,EAAGK,UAAqB3Q,QAAQ,+CAAgD,IAC/F,OAAOsQ,EAAGpB,KAAK,cAAckC,uBAI/BpB,EAAWqB,GAAK,IAAI,UAAI,CACvBrT,KAAM,KACNqS,QAAS,SACTpC,SAAUqC,GACFA,EAAGpB,KAAK,SAASoB,EAAGK,uBA8B7BX,EAAWsB,KAAO,IAAI,UAAI,CACzBtT,KAAM,OACNqS,QAAS,SACTpC,SAAUqC,IACT,IAAIiB,EAAOjB,EAAGM,aAAa,QAE3B,GAAY,MAARW,EAAc,CACjB,IAAKjB,EAAGE,YACP,OAAOF,EAAG7J,MAAM,kBAEjB,IAAIyJ,EAAMD,aAAaK,EAAGG,WAC1B,IAAKP,EAAK,OAAOI,EAAG7J,MAAM,eAE1B,IAAI+K,EAAUlB,EAAGmB,WAAWvB,GAC5B,OAAOI,EAAGpB,KAAK,YAAYsC,aAAmBA,MAAYA,SACpD,CACN,IAAItB,EAAMD,aAAasB,GACvB,IAAKrB,EAAK,OAAOI,EAAG7J,MAAM,eAE1B,IAAI+K,EAAUlB,EAAGmB,WAAWvB,GAC5B,OAAOI,EAAGpB,KAAK,YAAYsC,aAAmBA,MAAYlB,EAAGK,qBAKhEX,EAAW0B,IAAM,IAAI,UAAI,CACxB1T,KAAM,MACNqS,QAAS,aACTpC,SAAUqC,IACT,IAAKA,EAAGE,YACP,OAAOF,EAAG7J,MAAM,kBAEjB,IAAIyJ,EAAMD,aAAaK,EAAGG,WAC1B,IAAKP,EAAK,OAAOI,EAAG7J,MAAM,eAE1B,IAAI+K,EAAUlB,EAAGmB,WAAWvB,GAC5B,OAAOI,EAAGpB,KAAK,aAAasC,UAI9B,CACC,SAAU,UACTd,SAAQ1S,GAAQgS,EAAWhS,GAAQ,IAAI,UAAI,CAC5CA,KAAAA,EACAqS,QAAS,SACTpC,SAAUqC,IACT,IAAIqB,EAAS,CACZC,OAAQ,CACPC,OAAQ,CAAC,IAAU,KACnBC,MAAO,CAAC,IAAU,KAClBC,OAAQ,CAAC,IAAU,MAEpBC,OAAQ,CACPH,OAAQ,CAAC,IAAU,KACnBC,MAAO,CAAC,IAAU,KAClBC,OAAQ,CAAC,IAAU,OAIjB3R,EAAOkQ,EAAGM,aAAa,QAI3B,MAHK,CAAC,QAAS,UAAU1D,SAAS9M,KACjCA,EAAO,UAEDkQ,EAAGpB,KAAK,GAAGyC,EAAO3T,GAAMoC,GAAM,KAAKkQ,EAAGK,YAAYgB,EAAO3T,GAAMoC,GAAM,WAI9E4P,EAAWtB,UAAY,IAAI,UAAI,CAC9B1Q,KAAM,YACNqS,QAAS,aACTpC,SAAU,CAACqC,EAAIzP,KACd,IAAKA,EAAQkL,KACZ,OAAOuE,EAAG7J,MAAM,yDAEjB,IAAK6J,EAAGE,YACP,OAAOF,EAAG7J,MAAM,kBAEjB,IAUIwL,EAVAC,EAAc,CACjB,SAAU,OAAQ,eAAgB,MAAO,KACzC,MAAO,OAAQ,OAAQ,MAAO,OAC9B,aAAc,OAAQ,WAAY,MAAO,WACzC,QAAS,aAAc,OAAQ,MAAO,SACtC,OAAQ,OAGLd,EAAWd,EAAGG,UAAqBzQ,QAAQ,+CAAgD,IAI/F,GAAIkS,EAAYhF,SAASoD,EAAGM,aAAa,SAAU,CAClD,IAAIuB,EAAO7B,EAAGM,aAAa,QAC3BqB,EAAcpR,EAAQkL,KAAK2C,UAAUyD,EAAMf,GAASlL,WAEpD+L,EAAcpR,EAAQkL,KAAKqG,cAAchB,EAASc,GAAahM,MAGhE,OAAOoK,EAAGpB,KAAK,2BAA2B+C,uBAI5CjC,EAAWqC,KAAO,IAAI,UAAI,CACzBrU,KAAM,OACNqS,QAAS,SACTpC,SAAU,CAACqC,EAAIzP,KACd,IAAKA,EAAQmL,MACZ,OAAOsE,EAAG7J,MAAM,qDAEjB,IAAK6J,EAAGE,YACP,OAAOF,EAAG7J,MAAM,kBAEjB,IAAI6L,EAAWzR,EAAQmL,MAAMuG,eAAejC,EAAGG,UAAW,CACzD+B,cAAc,EACdC,aAAa,EACbC,OAAQ,UAGT,OAAOpC,EAAGpB,KAAKoD,MAIjBtC,EAAW2C,YAAc,IAAI,UAAI,CAChC3U,KAAM,cACNqS,QAAS,aACTpC,SAAU,CAACqC,EAAIzP,KACd,IAAKA,EAAQmL,MACZ,OAAOsE,EAAG7J,MAAM,qDAEjB,IAAK6J,EAAGE,YACP,OAAOF,EAAG7J,MAAM,kBAEjB,IAAI6L,EAAWzR,EAAQmL,MAAMuG,eAAejC,EAAGG,UAAW,CACzD+B,cAAc,EACdC,aAAa,EACbC,OAAQ,UAGT,OAAOpC,EAAGpB,KAAKoD,MAKjB,IAAIM,EAAU,CACb,IAAK,SACL,EAAK,OACL,GAAM,cACN,IAAK,UACL,IAAK,SACL,IAAM,SACN,IAAK,IACL,KAAM,IACN,MAAO,KACP,IAAK,OACL,KAAM,YACN,MAAO,YACP,IAAK,KACL,KAAM,KACN,MAAO,KACP,OAAQ,KACR,QAAS,KACT,SAAU,KACV,IAAK,aACL,KAAM,KACN,IAAK,MACL,EAAK,MACL,IAAK,OACL,KAAM,OAGP,IAAK,IAAIhH,KAAKgH,EAAS,CACtB,IAAK5C,EAAW4C,EAAQhH,IACvB,MAAMM,UAAU,mBAEjB8D,EAAWpE,GAAKoE,EAAW4C,EAAQhH,IAGpC,UAAeoE,G,yJCtUf,kBACA,YACA,YACA,YACA,YACA,YACA,YACA,YAIA,IAAI6C,EAAY,IAAI,UAAI,CACvB7U,KAAM,SACNqS,QAAS,kBACTpC,SAAUqC,GAAMA,EAAGpB,KAAKoB,EAAGK,aAmH5B,UAAe,CACdxC,OAjHD,SAASA,OAAOC,EAAkBvN,GAC5BA,IAASA,EAAU,IACnBA,EAAQiL,OAAMjL,EAAQiL,KAAO,IAElC,IAAIkE,EAAa,UAAQlE,KAAK,EAAAgH,QAAmBjS,EAAQiL,MAErD3O,EAAO,SAAUiS,QAAQ2D,GAC5B,GAAiB,QAAbA,EAAK3S,KACR,OAAOyS,EAAUG,cAAc,CAC9BnD,KAAMkD,EAAKlD,KACXlF,WAAY,GACZ/B,SAAUmK,EAAKnK,SAAS2G,IAAIH,SAC5BvO,QAAAA,IAGF,GAAiB,QAAbkS,EAAK3S,KACR,OAAO,IAAI,UAAS2S,EAAKjU,MAI1B,GAAiB,SAAbiU,EAAK3S,KACR,OAAO,IAAI,UAAU,CACpBxC,QAAS,eAETiS,KAAMkD,EAAKjU,OAIb,GAAiB,WAAbiU,EAAK3S,KAAmB,CAC3B,GAAI2S,EAAK/U,QAAQgS,GAAcA,EAAW+C,EAAK/U,MAAO,CACrD,GAAIgS,EAAW+C,EAAK/U,MAAM6S,MAAO,CAChC,IAAIoC,aAAe,CAACC,EAAMrC,KACzB,GAAoB,GAAhBA,EAAM3R,OACT,OAAOgU,EAAK3D,IAAIH,SAEjB,IAEYjK,EAFRpF,EAAI8Q,EAAMA,EAAM3R,OAAS,GAEzBgG,EAAI,IAGRgO,EAAOA,EAAK3D,KAAIQ,GACD,WAAVA,EAAE3P,MAAqB2P,EAAE/R,MAAQ+B,GAC/BgQ,EAAEnH,SAAS1J,OAMV6Q,EALC,CACN3P,KAAM,gBAQAlB,QAA0B,QAAhBgU,EAAK,GAAG9S,OACrB8S,EAAK,GAAGpU,KAAKqR,SAClB+C,EAAOA,EAAK5S,MAAM,IAIb4S,EAAKhU,QAA0B,aAAhBgU,EAAK,GAAG9S,MAC5B8S,EAAKC,QAAQ,CACZ/S,KAAM,cAIR,IAAK,IAAIrB,EAAI,EAAGA,EAAImU,EAAKhU,OAAQH,IACZ,aAAhBmU,EAAKnU,GAAGqB,MACP+E,GAAGD,EAAEqD,KAAKpD,GACdA,EAAI,IAEJA,EAAEoD,KAAK2K,EAAKnU,IAMd,OAFAmG,EAAEqD,KAAKpD,GAEAD,EAAEqK,KAAIlK,GAAK4N,aAAa5N,EAAGwL,EAAMvQ,MAAM,GAAI,OAGnD,OAAO0P,EAAW+C,EAAK/U,MAAMgV,cAAc,CAC1CnD,KAAMkD,EAAKlD,KACXlF,WAAYoI,EAAKpI,WACjB/B,SAAUqK,aACTF,EAAKnK,SACLoH,EAAW+C,EAAK/U,MAAM6S,OAEvBhQ,QAAAA,IAIF,OAAOmP,EAAW+C,EAAK/U,MAAMgV,cAAc,CAC1CnD,KAAMkD,EAAKlD,KACXlF,WAAYoI,EAAKpI,WACjB/B,SAAUmK,EAAKnK,SAAS2G,IAAIH,SAC5BvO,QAAAA,IAIF,OAAO,IAAI,UAAU,CACpBjD,QAASmV,EAAK/U,KAAO,uBAAuB+U,EAAK/U,QAAU,cAC3D6R,KAAMkD,EAAKlD,OAKb,MAAM3D,UAAU6G,EAAK3S,MAlGX,CAmGRgO,EAAIjR,MAIP,OAFAA,EAAKkR,SAEElR,GAKPiW,KAAA,UACAC,SAAA,UACAC,SAAA,UACAC,UAAA,UACAC,IAAA,UACAC,QAAA,Y,6fCvID,kBACA,YACA,YACA,YACA,YAWA,SAAgBC,qBAAqBC,GACpC,MAAO,CAAC,SAAU,aAAc,mBAAmBzG,SAASyG,GAD7D,4CAIA,MAAqBF,gBAAgB,UAyBpClV,aAAa,KAACP,EAAI,QAAEqS,EAAO,SAAEpC,EAAQ,MAAE4C,EAAK,KAAEhB,EAAI,WAAElF,EAAU,SAAE/B,EAAQ,QAAE/H,IAGzE,GAFA+S,QAdO,KAAAC,iBAAkB,EAC1B,mBACA,mBACA,mBAEQ,KAAAC,iBAAkB,EAC1B,mBACA,mBACA,mBACA,mBACA,mBACA,oBAKM9V,EAAM,MAAMkO,UAAU,4BAC3B,IAAKwH,qBAAqBrD,GACzB,MAAMnE,UAAU,+EACjB,KAAM+B,aAAoB8F,UACzB,MAAM7H,UAAU,oCACjB,GAAmB,iBAAR2D,EAAkB,MAAM3D,UAAU,4BAC7C,KAAMvB,aAAsBxL,OAAQ,MAAM+M,UAAU,iCAepD,GAbA,MACC,IAAI8H,IAAMnO,GAAKA,aAAa4N,SACxB5N,aAAa,WACbA,aAAa,WACXA,aAAa1G,OAAU0G,EAAEoO,MAAMD,KAErC,IAAKpL,EAASqL,MAAMD,KACnB,MAAM9H,UAAU,+EAPlB,GAUK2E,IAAOA,EAAQ,IACA,iBAATA,IAAmBA,EAAQ,CAACA,MAEjCA,aAAiB1R,OACtB,MAAM+M,UAAU,gEAEjBxO,KAAKM,KAAOA,EACZN,KAAK2S,QAAUA,EACf3S,KAAKuQ,SAAWA,EAChBvQ,KAAKmT,MAAQA,EACbnT,KAAKmS,KAAOA,EACZnS,KAAKiN,WAAaA,EAClBjN,KAAKkL,SAAWA,EAChBlL,KAAKmD,QAAUA,EAGRqT,cACHxW,KAAKmW,kBAGT,MACC,IAAIM,EAAMzW,KAAKmT,MAAQnT,KAAKmT,MAAM3R,OAAS,GAE3C,SAAUkQ,QAAQxG,EAAwBuL,GACzC,GAAIA,EAAM,EACT,OAAQvL,EAA4B8H,SAAQ0D,IAC3ChF,QAAQgF,EAAeD,EAAM,MAI9BvL,EAAoB8H,SAAQtS,IACxBA,aAAiBqV,SACpBrV,EAAMiQ,YATT,CAYG3Q,KAAKkL,SAAUuL,IAfnB,GAkBA,EAAAzW,KAAI,EAAgB,MACnB,IAAIyW,EAAMzW,KAAKmT,MAAQnT,KAAKmT,MAAM3R,OAAS,EAEvC8U,IAAM,CAACK,EAAkBC,IACxBA,EAAK,EACAD,EAAsB9E,KAAIQ,GAAKiE,IAAIjE,EAAGuE,EAAK,KAE5CD,EAAc9E,KAAI1J,IACzB,GAAIA,aAAa,UAAU,OAAO,EAClC,GAAIA,aAAa,UAAW,OAAO,EACnC,GAAIA,aAAa4N,QAAS,OAAO5N,EAAE0O,YACnC,MAAMtW,MAAM,UACVgW,OAAM5O,GAAKA,IAGf,OAAO2O,IAAItW,KAAKkL,SAAUuL,IAfP,IAkBpB,EAAAzW,KAAI,EAAc,MACjB,IAAIyW,EAAMzW,KAAKmT,MAAQnT,KAAKmT,MAAM3R,OAAS,EAEvC8U,IAAM,CAACK,EAAIC,EAAIE,IACdF,EAAK,EACDD,EAAG9E,KAAI,CAACQ,EAAGhR,IAAMiV,IAAIjE,EAAGuE,EAAK,EAAGE,EAAIzV,MAErCyV,EACJH,EAAG9E,KAAK1J,GACLA,aAAa,UAAiBA,EAAE/G,KAC7B+G,EAAE4O,YACPlU,KAAK,IACN,KAGJ,OAAOyT,IAAItW,KAAKkL,SAAUuL,EAAK,EAAF,UAfZ,IAkBlB,EAAAzW,KAAI,EAAc,MACjB,IAAIyW,EAAMzW,KAAKmT,MAAQnT,KAAKmT,MAAM3R,OAAS,EAEvC8U,IAAM,CAACK,EAAIC,EAAIE,EAAKE,KACvB,GAAIJ,EAAK,EACR,OAAOD,EAAG9E,KAAI,CAACQ,EAAGhR,IAAMiV,IAAIjE,EAAGuE,EAAK,EAAGE,EAAIzV,GAAI2V,EAAG3V,MAEnD,GAAIyV,EACH,OAAIE,EAAGvE,QAA0B,mBAAhBzS,KAAK2S,QACdqE,EAEL7D,MAAM,wDACNjB,QAAO9Q,KAAUA,EAAKqR,SACtBZ,IAAI,WACJA,KAAIxP,GAAK,MAAMA,UAASQ,KAAK,IAGzB,UAAWmU,GAGnB,GAAoB,mBAAhBhX,KAAK2S,QAER,OAAOgE,EAAG9E,KAAI1J,GACTA,aAAa,UACT,UAAWA,EAAE/G,MACjB+G,aAAa,UACTA,EAAE8O,SACH9O,EAAE4I,YACPlO,KAAK,IAGT,IAAIqU,EAAa,GAAI7M,EAAI,GAErB8M,OAAS,KACR9M,EAAE7I,SACL0V,EAAWrM,KAAKR,GAChBA,EAAI,KAIF+M,IAAMzP,GAAK0C,EAAEQ,KAAKlD,GAmCtB,OAjCAgP,EAAG3D,SAAQ7K,IACV,GAAIA,aAAa,UAAU,CAE1B,IAAIgL,EAAQhL,EAAE/G,KAAK+R,MAAM,wDACzB,GAAIA,EAAM3R,OAAS,EAClB,OAAO4V,IAAIjP,GAGZgL,EAAMH,SAAQ,CAAC3Q,EAAGhB,KACbgB,EAAEoQ,QAAQ2E,IAAIpX,KAAKoB,KAAKiB,IAExBhB,EAAI8R,EAAM3R,OAAS,GAAG2V,iBAEjBhP,aAAa,UAEvBiP,IAAIjP,GAGa,UAAbA,EAAEwK,SACLwE,SAEAD,EAAWrM,KAAK1C,GAChBgP,UAIAC,IAAIjP,MAKPgP,SAEOD,EAAWrF,KAAIxH,GACjBA,aAAa5I,MACT,MAAQ4I,EAAEwH,KAAIyB,GAChBA,aAAa,UACT,UAAWA,EAAElS,MACjBkS,aAAa,UACTA,EAAE2D,SACH3D,EAAEvC,YACPlO,KAAK,IAAM,OAGRwH,EAAE0G,YACPlO,KAAK,KAGT,OAAOyT,IAAItW,KAAKkL,SAAUuL,EAAK,EAAF,oBA1FZ,IA6FlBzW,KAAKmW,iBAAkB,GAGbrD,kBACV,IAAK9S,KAAKmW,gBACT,MAAM5V,MAAM,8DAGb,OAAO,EAAP,QAGUwS,gBACV,IAAK/S,KAAKmW,gBACT,MAAM5V,MAAM,4DAGb,OAAO,EAAP,QAGU0S,gBACV,IAAKjT,KAAKmW,gBACT,MAAM5V,MAAM,4DAGb,OAAO,EAAP,QAGMoQ,SACN,GAAI3Q,KAAKoW,gBAAiB,OAAO,EAAP,QAE1BpW,KAAKwW,cACL,IAAIvE,EAAIjS,KAAKuQ,SAASvQ,KAAMA,KAAKmD,SAQjC,GANA,EAAAnD,KAAI,EAAaiS,GACjB,EAAAjS,KAAI,EAAgBiS,aAAa,WACjC,EAAAjS,KAAI,EAAciS,aAAa,UAAWA,EAAE7Q,KAAO,MACnD,EAAApB,KAAI,EAAYiS,aAAa,WAC7B,EAAAjS,KAAI,EAAiBiS,aAAa,UAAYA,EAAE/R,QAAU,MAEtD,EAAJ,QACC,EAAAF,KAAI,EAAc,UAAW,EAAD,eACtB,GAAIiS,aAAa,UACvB,EAAAjS,KAAI,EAAciS,EAAET,UACd,MAAIS,aAAa,WAGvB,MAAMzD,UAAU,mEAFhB,EAAAxO,KAAI,EAAciS,EAAEgF,UAKrBjX,KAAKoW,iBAAkB,EAGbS,kBACV,IAAK7W,KAAKoW,gBACT,MAAM7V,MAAM,8DAGb,OAAO,EAAP,QAGUwW,gBACV,IAAK/W,KAAKoW,gBACT,MAAM7V,MAAM,4DAGb,OAAO,EAAP,QAGUwQ,gBACV,IAAK/Q,KAAKoW,gBACT,MAAM7V,MAAM,4DAGb,OAAO,EAAP,QAGU8W,cACV,IAAKrX,KAAKoW,gBACT,MAAM7V,MAAM,0DAGb,OAAO,EAAP,QAGU+W,mBACV,IAAKtX,KAAKoW,gBACT,MAAM7V,MAAM,+DAGb,OAAO,EAAP,QAGMa,KAAKA,GACX,OAAO,IAAI,UAASA,GAGdoQ,KAAKA,GACX,OAAO,IAAI,UAAS,CAACA,KAAAA,EAAMmB,QAAS3S,KAAK2S,UAGnC5J,MAAM7I,GACZ,OAAO,IAAI,UAAU,CACpBA,QAAS,IAAIF,KAAKM,UAAUJ,IAC5BiS,KAAMnS,KAAKmS,OAINe,aAAa5S,GACnB,IAAK,IAAIe,EAAI,EAAGA,EAAIrB,KAAKiN,WAAWzL,OAAQH,IAC3C,GAAIrB,KAAKiN,WAAW5L,GAAGf,MAAQA,EAC9B,OAAON,KAAKiN,WAAW5L,GAAGmH,MAG5B,OAAO,KAGD+O,iBAAiB1H,GACvB,IAAIrI,EAAI,CACP,UAAW,QACX,OAAQ,aAER,cAAe,YAAa,YAE5B,cAAe,YAAa,YAC5B,UAAW,gBACVqK,KAAI3D,GAAKA,EAAI,KACO,iBAAXlO,KAAKkO,IAAkBlO,KAAKkO,aAAczM,MACjD+V,KAAKC,UAAUzX,KAAKkO,IACpBlO,KAAKkO,GAAK,MACZrL,KAAK,KAAO,KAAKsM,OAAOU,EAAQ,IAE9BpI,EAAI,SAAUiK,QAAQxG,EAAU2E,GACnC,OAAO3E,EAAS2G,KAAI1J,GACfA,aAAa1G,MACT,CACN,IACA,KAAOiQ,QAAQvJ,EAAG0H,EAAQ,GAC1B,KACChN,KAAK,KAAO,KAAKsM,OAAOU,IAGpB1H,EAAEoP,iBAAiB1H,KACxBhN,KAAK,MAAQ,KAAKsM,OAAOU,IAXrB,CAYL7P,KAAKkL,SAAU2E,EAAQ,GAE1B,MAAO,WAAW2H,KAAKC,UAAUzX,KAAKM,YAC/B,KAAK6O,OAAOU,EAAQ,KAAKrI,MAC1B,KAAK2H,OAAOU,UACf,KAAKV,OAAOU,EAAQ,GAAK,GAAGpI,MAC5B,GAAG,KAAK0H,OAAOU,MAGZkE,WAAW1R,GACjB,OAAO,UAAWA,IA9WpB,kB,wRCpBA,kBACA,YAEA,MAAqBwT,kBAAkB,UAKtChV,aAAa,QAACX,EAAO,KAAEiS,IAGtB,GAFA+D,QAEsB,iBAAXhW,EACV,MAAMsO,UAAU,sBAEjB,GAAmB,iBAAR2D,EACV,MAAM3D,UAAU,mBAEjBxO,KAAKE,QAAUA,EACfF,KAAKmS,KAAOA,EAGN8E,SACN,MAAO,0CAA0C,UAAWjX,KAAKE,aAAa,UAAWF,KAAKmS,eAGxFoF,iBAAiB1H,GAGvB,MAAO,SAFC,CAAC,UAAW,QAAQgC,KAAI3D,GAC/BA,EAAI,IAAMsJ,KAAKC,UAAUzX,KAAKkO,MAAKrL,KAAK,SAxB3C,qB,yJCHA,eACA,YAQA,MAAqB+S,iBAAiB,UAKrC/U,aAAa,KAAC2Q,EAAI,QAAEmB,IAGnB,GAFAuD,QAEmB,iBAAR1E,EACV,MAAMhD,UAAU,mBAEjB,IAAK,EAAAwH,qBAAqBrD,GACzB,MAAMnE,UAAU,+EAEjBxO,KAAKwR,KAAOA,EACZxR,KAAK2S,QAAUA,EAGT4E,iBAAiB1H,GAGvB,MAAO,QAFC,CAAC,WAAWgC,KAAI3D,GACvBA,EAAI,IAAMsJ,KAAKC,UAAUzX,KAAKkO,MAAKrL,KAAK,UACnB2U,KAAKC,UAAUzX,KAAKwR,UArB5C,oB,6DCTA,gBAA8BkE,KAEtBvT,WACN,OAAOnC,KAAKuX,iBAAiB,M,kmBCF/B,kBAiBA,gBAAqBzB,IAOpBjV,aAAa,KAACP,EAAI,QAAEqS,EAAO,SAAEpC,EAAQ,MAAE4C,IACtC,IAAK7S,EAAM,MAAMkO,UAAU,4BAC3B,IAAK,EAAAwH,qBAAqBrD,GACzB,MAAMnE,UAAU,+EACjB,KAAM+B,aAAoB8F,UACzB,MAAM7H,UAAU,oCAajB,IAXCxO,KAAKM,KAAMN,KAAK2S,SAAW,CAACrS,EAAMqS,GAEnC3S,KAAKuQ,SAAW,CAACqC,EAAIzP,KACpB,KAAMyP,aAAc,WACnB,MAAMpE,UAAU,uDACjB,OAAO+B,EAASqC,EAAIzP,IAGhBgQ,IAAOA,EAAQ,IACA,iBAATA,IAAmBA,EAAQ,CAACA,MAEjCA,aAAiB1R,OACtB,MAAM+M,UAAU,gEAEjBxO,KAAKmT,MAAQA,EAGPmC,eAAc,KAACnD,EAAI,WAAElF,EAAU,SAAE/B,EAAQ,QAAE/H,IACjD,OAAO,IAAI,UAAQ,CAClB7C,KAAMN,KAAKM,KACXqS,QAAS3S,KAAK2S,QACdpC,SAAUvQ,KAAKuQ,SACf4C,MAAOnT,KAAKmT,MACZhB,KAAAA,EACAlF,WAAAA,EACA/B,SAAAA,EACA/H,QAAAA,O,yJC1DH,kBAQA,MAAqBwS,iBAAiB,UAGrC9U,YAAaO,GAGZ,GAFA8U,QAEmB,iBAAR9U,EACV,MAAMoN,UAAU,mBAEjBxO,KAAKoB,KAAOA,EAGNmW,iBAAiB1H,GACvB,MAAO,SAAS2H,KAAKC,UAAUzX,KAAKoB,UAbtC,oB,6DCRA,mBAAwB2S,WAAW1R,GAClC,OAAQA,EAAI,IAAIC,QAAQ,YAAYmP,IAAK,CACxC,IAAK,QAAS,IAAK,OAAQ,IAAK,OAChC,IAAK,SAAU,IAAM,SACnBA,SCHAiG,EAA2B,GCE/B,IAAIC,EDCJ,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAanY,QAGrB,IAAIC,EAAS8X,EAAyBG,GAAY,CAGjDlY,QAAS,IAOV,OAHAqY,EAAoBH,GAAUI,KAAKrY,EAAOD,QAASC,EAAQA,EAAOD,QAASiY,qBAGpEhY,EAAOD,QClBWiY,CAAoB,K","sources":["webpack://yamd/webpack/universalModuleDefinition","webpack://yamd/./build_tmp/peg.js","webpack://yamd/./src/cascade.ts","webpack://yamd/./src/codemirror.ts","webpack://yamd/./src/entry.ts","webpack://yamd/./src/highlighter.ts","webpack://yamd/./src/parser.ts","webpack://yamd/./src/renderer/elements/default.ts","webpack://yamd/./src/renderer/index.ts","webpack://yamd/./src/renderer/nodes/Element.ts","webpack://yamd/./src/renderer/nodes/ErrorNode.ts","webpack://yamd/./src/renderer/nodes/HtmlNode.ts","webpack://yamd/./src/renderer/nodes/Node.ts","webpack://yamd/./src/renderer/nodes/Tag.ts","webpack://yamd/./src/renderer/nodes/TextNode.ts","webpack://yamd/./src/renderer/nodes/escapeHtml.ts","webpack://yamd/webpack/bootstrap","webpack://yamd/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"yamd\"] = factory();\n\telse\n\t\troot[\"yamd\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = function(children) {\n      \t\treturn {\n      \t\t\troot: {\n      \t\t\t\ttype: 'root',\n      \t\t\t\tchildren,\n      \t\t\t\tlocation: location()\n      \t\t\t}\n      \t\t}\n      \t},\n      peg$c1 = function(lbm, name, attributes, children, rbm) {\n      \t\treturn {\n      \t\t\ttype: 'element',\n      \t\t\tlbm,\n      \t\t\tname,\n      \t\t\tattributes,\n      \t\t\tchildren,\n      \t\t\trbm,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c2 = \"[\",\n      peg$c3 = peg$literalExpectation(\"[\", false),\n      peg$c4 = \"<\",\n      peg$c5 = peg$literalExpectation(\"<\", false),\n      peg$c6 = function(a, b) {return (bstack[bstack.length - 1] || 0) <= b.length + 1},\n      peg$c7 = function(a, b) {\n      \t\treturn a + b;\n      \t},\n      peg$c8 = function(a) {\n      \t\tbstack.push(a.length);\n      \t\treturn a;\n      \t},\n      peg$c9 = \"!\",\n      peg$c10 = peg$literalExpectation(\"!\", false),\n      peg$c11 = \"\\\"\",\n      peg$c12 = peg$literalExpectation(\"\\\"\", false),\n      peg$c13 = \"#\",\n      peg$c14 = peg$literalExpectation(\"#\", false),\n      peg$c15 = \"$\",\n      peg$c16 = peg$literalExpectation(\"$\", false),\n      peg$c17 = \"%\",\n      peg$c18 = peg$literalExpectation(\"%\", false),\n      peg$c19 = \"&\",\n      peg$c20 = peg$literalExpectation(\"&\", false),\n      peg$c21 = \"'\",\n      peg$c22 = peg$literalExpectation(\"'\", false),\n      peg$c23 = \")\",\n      peg$c24 = peg$literalExpectation(\")\", false),\n      peg$c25 = \"*\",\n      peg$c26 = peg$literalExpectation(\"*\", false),\n      peg$c27 = \"+\",\n      peg$c28 = peg$literalExpectation(\"+\", false),\n      peg$c29 = \",\",\n      peg$c30 = peg$literalExpectation(\",\", false),\n      peg$c31 = \"-\",\n      peg$c32 = peg$literalExpectation(\"-\", false),\n      peg$c33 = \"/\",\n      peg$c34 = peg$literalExpectation(\"/\", false),\n      peg$c35 = \";\",\n      peg$c36 = peg$literalExpectation(\";\", false),\n      peg$c37 = \"=\",\n      peg$c38 = peg$literalExpectation(\"=\", false),\n      peg$c39 = \">\",\n      peg$c40 = peg$literalExpectation(\">\", false),\n      peg$c41 = \"?\",\n      peg$c42 = peg$literalExpectation(\"?\", false),\n      peg$c43 = \"@\",\n      peg$c44 = peg$literalExpectation(\"@\", false),\n      peg$c45 = \"\\\\\",\n      peg$c46 = peg$literalExpectation(\"\\\\\", false),\n      peg$c47 = \"^\",\n      peg$c48 = peg$literalExpectation(\"^\", false),\n      peg$c49 = \"_\",\n      peg$c50 = peg$literalExpectation(\"_\", false),\n      peg$c51 = \"{\",\n      peg$c52 = peg$literalExpectation(\"{\", false),\n      peg$c53 = \"|\",\n      peg$c54 = peg$literalExpectation(\"|\", false),\n      peg$c55 = \"}\",\n      peg$c56 = peg$literalExpectation(\"}\", false),\n      peg$c57 = \"~\",\n      peg$c58 = peg$literalExpectation(\"~\", false),\n      peg$c59 = /^[a-z]/,\n      peg$c60 = peg$classExpectation([[\"a\", \"z\"]], false, false),\n      peg$c61 = /^[a-z0-9]/,\n      peg$c62 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"]], false, false),\n      peg$c63 = \":\",\n      peg$c64 = peg$literalExpectation(\":\", false),\n      peg$c65 = function(a, b, d, e) {return ':' + d + e.join('')},\n      peg$c66 = function(a, b, c) {\n      \t\treturn a + b + c;\n      \t},\n      peg$c67 = \"\",\n      peg$c68 = \"(\",\n      peg$c69 = peg$literalExpectation(\"(\", false),\n      peg$c70 = /^[a-z0-9\\-]/,\n      peg$c71 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"], \"-\"], false, false),\n      peg$c72 = peg$anyExpectation(),\n      peg$c73 = function(left, name, a, b, c) {return ''},\n      peg$c74 = function(left, name, a, b, c, d) {\n      \t\t\t\t\treturn [a, b, c, d];\n      \t\t\t\t},\n      peg$c75 = /^['\"()[\\] \\t\\n\\r]/,\n      peg$c76 = peg$classExpectation([\"'\", \"\\\"\", \"(\", \")\", \"[\", \"]\", \" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n      peg$c77 = function(left, name, a, c) {\n      \t\t\t\t\treturn [a, '', c, ''];\n      \t\t\t\t},\n      peg$c78 = function(left, name) {\n      \t\t\t\t\treturn ['', '', '', ''];\n      \t\t\t\t},\n      peg$c79 = function(left, name, value) {\n      \t\t\t\treturn {\n      \t\t\t\t\t_type: 'attribute',\n      \t\t\t\t\tattribute: [name].concat(value)\n      \t\t\t\t};\n      \t\t\t},\n      peg$c80 = function(left, a) {\n      \t\t\t\treturn {\n      \t\t\t\t\t_type: 'whitespace',\n      \t\t\t\t\twhitespace: a\n      \t\t\t\t}\n      \t\t\t},\n      peg$c81 = function(left, a) {\n      \t\t\t\treturn {\n      \t\t\t\t\t_type: 'error',\n      \t\t\t\t\terror: a\n      \t\t\t\t}\n      \t\t\t},\n      peg$c82 = function(left, content) {return ''},\n      peg$c83 = function(left, content, right) {\n      \t\treturn {\n      \t\t\t_type: 'parenthesis',\n      \t\t\tleft,\n      \t\t\tcontent,\n      \t\t\tright\n      \t\t}\n      \t},\n      peg$c84 = \".\",\n      peg$c85 = peg$literalExpectation(\".\", false),\n      peg$c86 = function(a) {\n      \t\treturn {\n      \t\t\t_type: 'separator',\n      \t\t\tseparator: a\n      \t\t}\n      \t},\n      peg$c87 = \"]\",\n      peg$c88 = peg$literalExpectation(\"]\", false),\n      peg$c89 = function(a, b) {return (bstack[bstack.length - 1] || 0) == a.length + 1},\n      peg$c90 = function(a, b) {return a + b},\n      peg$c91 = function() {return ''},\n      peg$c92 = function(a) {\n      \t\tbstack.pop();\n      \t\treturn a;\n      \t},\n      peg$c93 = \"`\",\n      peg$c94 = peg$literalExpectation(\"`\", false),\n      peg$c95 = function(b) {return b},\n      peg$c96 = function(a) {\n      \t\treturn {\n      \t\t\ttype: 'text',\n      \t\t\ttext: a.join(''),\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c97 = function(lvm, separator, child, rvm) {\n      \t\treturn {\n      \t\t\ttype: 'verbatim',\n      \t\t\tlvm,\n      \t\t\tseparator,\n      \t\t\tchild,\n      \t\t\trvm,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c98 = function(a, b) {\n      \t\tvlevel = b.length + 1;\n      \t\treturn a + b.join('');\n      \t},\n      peg$c99 = function(a, b) {return vlevel == a.length + 1},\n      peg$c100 = function(a, b) {return a.join('') + b},\n      peg$c101 = /^[ \\t\\n\\r]/,\n      peg$c102 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsethings();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c0(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsethings() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parsething();\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parsething();\n    }\n\n    return s0;\n  }\n\n  function peg$parsething() {\n    var s0;\n\n    s0 = peg$parseelement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseverbatim();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsetext();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseelement() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parselbm_push();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetag_name();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseattributes();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsethings();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parserbm_pop();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c1(s1, s2, s3, s4, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselbm() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c2;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c3); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      if (input.charCodeAt(peg$currPos) === 60) {\n        s4 = peg$c4;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        if (input.charCodeAt(peg$currPos) === 60) {\n          s4 = peg$c4;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c5); }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s3 = peg$c6(s1, s2);\n        if (s3) {\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c7(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselbm_push() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parselbm();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c8(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsetag_name() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 33) {\n      s2 = peg$c9;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c10); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = [];\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s2 = peg$c11;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c12); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s2 = peg$c11;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = [];\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s2 = peg$c13;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (input.charCodeAt(peg$currPos) === 35) {\n              s2 = peg$c13;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n          }\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n          s1 = [];\n          if (input.charCodeAt(peg$currPos) === 36) {\n            s2 = peg$c15;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c16); }\n          }\n          if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n              s1.push(s2);\n              if (input.charCodeAt(peg$currPos) === 36) {\n                s2 = peg$c15;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c16); }\n              }\n            }\n          } else {\n            s1 = peg$FAILED;\n          }\n          if (s1 === peg$FAILED) {\n            s1 = [];\n            if (input.charCodeAt(peg$currPos) === 37) {\n              s2 = peg$c17;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s2 !== peg$FAILED) {\n              while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                if (input.charCodeAt(peg$currPos) === 37) {\n                  s2 = peg$c17;\n                  peg$currPos++;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c18); }\n                }\n              }\n            } else {\n              s1 = peg$FAILED;\n            }\n            if (s1 === peg$FAILED) {\n              s1 = [];\n              if (input.charCodeAt(peg$currPos) === 38) {\n                s2 = peg$c19;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c20); }\n              }\n              if (s2 !== peg$FAILED) {\n                while (s2 !== peg$FAILED) {\n                  s1.push(s2);\n                  if (input.charCodeAt(peg$currPos) === 38) {\n                    s2 = peg$c19;\n                    peg$currPos++;\n                  } else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                  }\n                }\n              } else {\n                s1 = peg$FAILED;\n              }\n              if (s1 === peg$FAILED) {\n                s1 = [];\n                if (input.charCodeAt(peg$currPos) === 39) {\n                  s2 = peg$c21;\n                  peg$currPos++;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                }\n                if (s2 !== peg$FAILED) {\n                  while (s2 !== peg$FAILED) {\n                    s1.push(s2);\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                      s2 = peg$c21;\n                      peg$currPos++;\n                    } else {\n                      s2 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                    }\n                  }\n                } else {\n                  s1 = peg$FAILED;\n                }\n                if (s1 === peg$FAILED) {\n                  s1 = [];\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s2 = peg$c23;\n                    peg$currPos++;\n                  } else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                  }\n                  if (s2 !== peg$FAILED) {\n                    while (s2 !== peg$FAILED) {\n                      s1.push(s2);\n                      if (input.charCodeAt(peg$currPos) === 41) {\n                        s2 = peg$c23;\n                        peg$currPos++;\n                      } else {\n                        s2 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                      }\n                    }\n                  } else {\n                    s1 = peg$FAILED;\n                  }\n                  if (s1 === peg$FAILED) {\n                    s1 = [];\n                    if (input.charCodeAt(peg$currPos) === 42) {\n                      s2 = peg$c25;\n                      peg$currPos++;\n                    } else {\n                      s2 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n                    }\n                    if (s2 !== peg$FAILED) {\n                      while (s2 !== peg$FAILED) {\n                        s1.push(s2);\n                        if (input.charCodeAt(peg$currPos) === 42) {\n                          s2 = peg$c25;\n                          peg$currPos++;\n                        } else {\n                          s2 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c26); }\n                        }\n                      }\n                    } else {\n                      s1 = peg$FAILED;\n                    }\n                    if (s1 === peg$FAILED) {\n                      s1 = [];\n                      if (input.charCodeAt(peg$currPos) === 43) {\n                        s2 = peg$c27;\n                        peg$currPos++;\n                      } else {\n                        s2 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                      }\n                      if (s2 !== peg$FAILED) {\n                        while (s2 !== peg$FAILED) {\n                          s1.push(s2);\n                          if (input.charCodeAt(peg$currPos) === 43) {\n                            s2 = peg$c27;\n                            peg$currPos++;\n                          } else {\n                            s2 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                          }\n                        }\n                      } else {\n                        s1 = peg$FAILED;\n                      }\n                      if (s1 === peg$FAILED) {\n                        s1 = [];\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                          s2 = peg$c29;\n                          peg$currPos++;\n                        } else {\n                          s2 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                        }\n                        if (s2 !== peg$FAILED) {\n                          while (s2 !== peg$FAILED) {\n                            s1.push(s2);\n                            if (input.charCodeAt(peg$currPos) === 44) {\n                              s2 = peg$c29;\n                              peg$currPos++;\n                            } else {\n                              s2 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                            }\n                          }\n                        } else {\n                          s1 = peg$FAILED;\n                        }\n                        if (s1 === peg$FAILED) {\n                          s1 = [];\n                          if (input.charCodeAt(peg$currPos) === 45) {\n                            s2 = peg$c31;\n                            peg$currPos++;\n                          } else {\n                            s2 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c32); }\n                          }\n                          if (s2 !== peg$FAILED) {\n                            while (s2 !== peg$FAILED) {\n                              s1.push(s2);\n                              if (input.charCodeAt(peg$currPos) === 45) {\n                                s2 = peg$c31;\n                                peg$currPos++;\n                              } else {\n                                s2 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c32); }\n                              }\n                            }\n                          } else {\n                            s1 = peg$FAILED;\n                          }\n                          if (s1 === peg$FAILED) {\n                            s1 = [];\n                            if (input.charCodeAt(peg$currPos) === 47) {\n                              s2 = peg$c33;\n                              peg$currPos++;\n                            } else {\n                              s2 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                            }\n                            if (s2 !== peg$FAILED) {\n                              while (s2 !== peg$FAILED) {\n                                s1.push(s2);\n                                if (input.charCodeAt(peg$currPos) === 47) {\n                                  s2 = peg$c33;\n                                  peg$currPos++;\n                                } else {\n                                  s2 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                                }\n                              }\n                            } else {\n                              s1 = peg$FAILED;\n                            }\n                            if (s1 === peg$FAILED) {\n                              s1 = [];\n                              if (input.charCodeAt(peg$currPos) === 59) {\n                                s2 = peg$c35;\n                                peg$currPos++;\n                              } else {\n                                s2 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c36); }\n                              }\n                              if (s2 !== peg$FAILED) {\n                                while (s2 !== peg$FAILED) {\n                                  s1.push(s2);\n                                  if (input.charCodeAt(peg$currPos) === 59) {\n                                    s2 = peg$c35;\n                                    peg$currPos++;\n                                  } else {\n                                    s2 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c36); }\n                                  }\n                                }\n                              } else {\n                                s1 = peg$FAILED;\n                              }\n                              if (s1 === peg$FAILED) {\n                                s1 = [];\n                                if (input.charCodeAt(peg$currPos) === 61) {\n                                  s2 = peg$c37;\n                                  peg$currPos++;\n                                } else {\n                                  s2 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c38); }\n                                }\n                                if (s2 !== peg$FAILED) {\n                                  while (s2 !== peg$FAILED) {\n                                    s1.push(s2);\n                                    if (input.charCodeAt(peg$currPos) === 61) {\n                                      s2 = peg$c37;\n                                      peg$currPos++;\n                                    } else {\n                                      s2 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c38); }\n                                    }\n                                  }\n                                } else {\n                                  s1 = peg$FAILED;\n                                }\n                                if (s1 === peg$FAILED) {\n                                  s1 = [];\n                                  if (input.charCodeAt(peg$currPos) === 62) {\n                                    s2 = peg$c39;\n                                    peg$currPos++;\n                                  } else {\n                                    s2 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c40); }\n                                  }\n                                  if (s2 !== peg$FAILED) {\n                                    while (s2 !== peg$FAILED) {\n                                      s1.push(s2);\n                                      if (input.charCodeAt(peg$currPos) === 62) {\n                                        s2 = peg$c39;\n                                        peg$currPos++;\n                                      } else {\n                                        s2 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n                                      }\n                                    }\n                                  } else {\n                                    s1 = peg$FAILED;\n                                  }\n                                  if (s1 === peg$FAILED) {\n                                    s1 = [];\n                                    if (input.charCodeAt(peg$currPos) === 63) {\n                                      s2 = peg$c41;\n                                      peg$currPos++;\n                                    } else {\n                                      s2 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                                    }\n                                    if (s2 !== peg$FAILED) {\n                                      while (s2 !== peg$FAILED) {\n                                        s1.push(s2);\n                                        if (input.charCodeAt(peg$currPos) === 63) {\n                                          s2 = peg$c41;\n                                          peg$currPos++;\n                                        } else {\n                                          s2 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                                        }\n                                      }\n                                    } else {\n                                      s1 = peg$FAILED;\n                                    }\n                                    if (s1 === peg$FAILED) {\n                                      s1 = [];\n                                      if (input.charCodeAt(peg$currPos) === 64) {\n                                        s2 = peg$c43;\n                                        peg$currPos++;\n                                      } else {\n                                        s2 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                                      }\n                                      if (s2 !== peg$FAILED) {\n                                        while (s2 !== peg$FAILED) {\n                                          s1.push(s2);\n                                          if (input.charCodeAt(peg$currPos) === 64) {\n                                            s2 = peg$c43;\n                                            peg$currPos++;\n                                          } else {\n                                            s2 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                                          }\n                                        }\n                                      } else {\n                                        s1 = peg$FAILED;\n                                      }\n                                      if (s1 === peg$FAILED) {\n                                        s1 = [];\n                                        if (input.charCodeAt(peg$currPos) === 92) {\n                                          s2 = peg$c45;\n                                          peg$currPos++;\n                                        } else {\n                                          s2 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                                        }\n                                        if (s2 !== peg$FAILED) {\n                                          while (s2 !== peg$FAILED) {\n                                            s1.push(s2);\n                                            if (input.charCodeAt(peg$currPos) === 92) {\n                                              s2 = peg$c45;\n                                              peg$currPos++;\n                                            } else {\n                                              s2 = peg$FAILED;\n                                              if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                                            }\n                                          }\n                                        } else {\n                                          s1 = peg$FAILED;\n                                        }\n                                        if (s1 === peg$FAILED) {\n                                          s1 = [];\n                                          if (input.charCodeAt(peg$currPos) === 94) {\n                                            s2 = peg$c47;\n                                            peg$currPos++;\n                                          } else {\n                                            s2 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                                          }\n                                          if (s2 !== peg$FAILED) {\n                                            while (s2 !== peg$FAILED) {\n                                              s1.push(s2);\n                                              if (input.charCodeAt(peg$currPos) === 94) {\n                                                s2 = peg$c47;\n                                                peg$currPos++;\n                                              } else {\n                                                s2 = peg$FAILED;\n                                                if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                                              }\n                                            }\n                                          } else {\n                                            s1 = peg$FAILED;\n                                          }\n                                          if (s1 === peg$FAILED) {\n                                            s1 = [];\n                                            if (input.charCodeAt(peg$currPos) === 95) {\n                                              s2 = peg$c49;\n                                              peg$currPos++;\n                                            } else {\n                                              s2 = peg$FAILED;\n                                              if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                                            }\n                                            if (s2 !== peg$FAILED) {\n                                              while (s2 !== peg$FAILED) {\n                                                s1.push(s2);\n                                                if (input.charCodeAt(peg$currPos) === 95) {\n                                                  s2 = peg$c49;\n                                                  peg$currPos++;\n                                                } else {\n                                                  s2 = peg$FAILED;\n                                                  if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                                                }\n                                              }\n                                            } else {\n                                              s1 = peg$FAILED;\n                                            }\n                                            if (s1 === peg$FAILED) {\n                                              s1 = [];\n                                              if (input.charCodeAt(peg$currPos) === 123) {\n                                                s2 = peg$c51;\n                                                peg$currPos++;\n                                              } else {\n                                                s2 = peg$FAILED;\n                                                if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                                              }\n                                              if (s2 !== peg$FAILED) {\n                                                while (s2 !== peg$FAILED) {\n                                                  s1.push(s2);\n                                                  if (input.charCodeAt(peg$currPos) === 123) {\n                                                    s2 = peg$c51;\n                                                    peg$currPos++;\n                                                  } else {\n                                                    s2 = peg$FAILED;\n                                                    if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                                                  }\n                                                }\n                                              } else {\n                                                s1 = peg$FAILED;\n                                              }\n                                              if (s1 === peg$FAILED) {\n                                                s1 = [];\n                                                if (input.charCodeAt(peg$currPos) === 124) {\n                                                  s2 = peg$c53;\n                                                  peg$currPos++;\n                                                } else {\n                                                  s2 = peg$FAILED;\n                                                  if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                                                }\n                                                if (s2 !== peg$FAILED) {\n                                                  while (s2 !== peg$FAILED) {\n                                                    s1.push(s2);\n                                                    if (input.charCodeAt(peg$currPos) === 124) {\n                                                      s2 = peg$c53;\n                                                      peg$currPos++;\n                                                    } else {\n                                                      s2 = peg$FAILED;\n                                                      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                                                    }\n                                                  }\n                                                } else {\n                                                  s1 = peg$FAILED;\n                                                }\n                                                if (s1 === peg$FAILED) {\n                                                  s1 = [];\n                                                  if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s2 = peg$c55;\n                                                    peg$currPos++;\n                                                  } else {\n                                                    s2 = peg$FAILED;\n                                                    if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                                                  }\n                                                  if (s2 !== peg$FAILED) {\n                                                    while (s2 !== peg$FAILED) {\n                                                      s1.push(s2);\n                                                      if (input.charCodeAt(peg$currPos) === 125) {\n                                                        s2 = peg$c55;\n                                                        peg$currPos++;\n                                                      } else {\n                                                        s2 = peg$FAILED;\n                                                        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                                                      }\n                                                    }\n                                                  } else {\n                                                    s1 = peg$FAILED;\n                                                  }\n                                                  if (s1 === peg$FAILED) {\n                                                    s1 = [];\n                                                    if (input.charCodeAt(peg$currPos) === 126) {\n                                                      s2 = peg$c57;\n                                                      peg$currPos++;\n                                                    } else {\n                                                      s2 = peg$FAILED;\n                                                      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                                                    }\n                                                    if (s2 !== peg$FAILED) {\n                                                      while (s2 !== peg$FAILED) {\n                                                        s1.push(s2);\n                                                        if (input.charCodeAt(peg$currPos) === 126) {\n                                                          s2 = peg$c57;\n                                                          peg$currPos++;\n                                                        } else {\n                                                          s2 = peg$FAILED;\n                                                          if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                                                        }\n                                                      }\n                                                    } else {\n                                                      s1 = peg$FAILED;\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (peg$c59.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c60); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        if (peg$c61.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c62); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c61.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c62); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = input.substring(s2, peg$currPos);\n        } else {\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s6 = peg$c63;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c64); }\n          }\n          if (s6 !== peg$FAILED) {\n            if (peg$c59.test(input.charAt(peg$currPos))) {\n              s7 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c60); }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = [];\n              if (peg$c61.test(input.charAt(peg$currPos))) {\n                s9 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c62); }\n              }\n              while (s9 !== peg$FAILED) {\n                s8.push(s9);\n                if (peg$c61.test(input.charAt(peg$currPos))) {\n                  s9 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                }\n              }\n              if (s8 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c65(s1, s2, s7, s8);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 58) {\n              s6 = peg$c63;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c64); }\n            }\n            if (s6 !== peg$FAILED) {\n              if (peg$c59.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = [];\n                if (peg$c61.test(input.charAt(peg$currPos))) {\n                  s9 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                }\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  if (peg$c61.test(input.charAt(peg$currPos))) {\n                    s9 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                  }\n                }\n                if (s8 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c65(s1, s2, s7, s8);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = input.substring(s3, peg$currPos);\n          } else {\n            s3 = s4;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c66(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$c67;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseattributes() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c68;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c69); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$currPos;\n      s5 = [];\n      if (peg$c70.test(input.charAt(peg$currPos))) {\n        s6 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c71); }\n      }\n      if (s6 !== peg$FAILED) {\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n          if (peg$c70.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c71); }\n          }\n        }\n      } else {\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s4 = input.substring(s4, peg$currPos);\n      } else {\n        s4 = s5;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s6 = peg$c37;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s6 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s7 = peg$c11;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$currPos;\n            s9 = [];\n            s10 = peg$currPos;\n            s11 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 34) {\n              s12 = peg$c11;\n              peg$currPos++;\n            } else {\n              s12 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c12); }\n            }\n            peg$silentFails--;\n            if (s12 === peg$FAILED) {\n              s11 = void 0;\n            } else {\n              peg$currPos = s11;\n              s11 = peg$FAILED;\n            }\n            if (s11 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s12 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s12 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n              }\n              if (s12 !== peg$FAILED) {\n                s11 = [s11, s12];\n                s10 = s11;\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s10;\n              s10 = peg$FAILED;\n            }\n            while (s10 !== peg$FAILED) {\n              s9.push(s10);\n              s10 = peg$currPos;\n              s11 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 34) {\n                s12 = peg$c11;\n                peg$currPos++;\n              } else {\n                s12 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c12); }\n              }\n              peg$silentFails--;\n              if (s12 === peg$FAILED) {\n                s11 = void 0;\n              } else {\n                peg$currPos = s11;\n                s11 = peg$FAILED;\n              }\n              if (s11 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s12 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s12 !== peg$FAILED) {\n                  s11 = [s11, s12];\n                  s10 = s11;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n            }\n            if (s9 !== peg$FAILED) {\n              s8 = input.substring(s8, peg$currPos);\n            } else {\n              s8 = s9;\n            }\n            if (s8 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 34) {\n                s9 = peg$c11;\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c12); }\n              }\n              if (s9 === peg$FAILED) {\n                s9 = peg$currPos;\n                s10 = peg$parseEOF();\n                if (s10 !== peg$FAILED) {\n                  peg$savedPos = s9;\n                  s10 = peg$c73(s1, s4, s6, s7, s8);\n                }\n                s9 = s10;\n              }\n              if (s9 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c74(s1, s4, s6, s7, s8, s9);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 === peg$FAILED) {\n          s5 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s6 = peg$c37;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c38); }\n          }\n          if (s6 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s7 = peg$c21;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c22); }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$currPos;\n              s9 = [];\n              s10 = peg$currPos;\n              s11 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 39) {\n                s12 = peg$c21;\n                peg$currPos++;\n              } else {\n                s12 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c22); }\n              }\n              peg$silentFails--;\n              if (s12 === peg$FAILED) {\n                s11 = void 0;\n              } else {\n                peg$currPos = s11;\n                s11 = peg$FAILED;\n              }\n              if (s11 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s12 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s12 !== peg$FAILED) {\n                  s11 = [s11, s12];\n                  s10 = s11;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n              while (s10 !== peg$FAILED) {\n                s9.push(s10);\n                s10 = peg$currPos;\n                s11 = peg$currPos;\n                peg$silentFails++;\n                if (input.charCodeAt(peg$currPos) === 39) {\n                  s12 = peg$c21;\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                }\n                peg$silentFails--;\n                if (s12 === peg$FAILED) {\n                  s11 = void 0;\n                } else {\n                  peg$currPos = s11;\n                  s11 = peg$FAILED;\n                }\n                if (s11 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s12 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s12 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s12 !== peg$FAILED) {\n                    s11 = [s11, s12];\n                    s10 = s11;\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              }\n              if (s9 !== peg$FAILED) {\n                s8 = input.substring(s8, peg$currPos);\n              } else {\n                s8 = s9;\n              }\n              if (s8 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                  s9 = peg$c21;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                }\n                if (s9 === peg$FAILED) {\n                  s9 = peg$currPos;\n                  s10 = peg$parseEOF();\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = s9;\n                    s10 = peg$c73(s1, s4, s6, s7, s8);\n                  }\n                  s9 = s10;\n                }\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c74(s1, s4, s6, s7, s8, s9);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 === peg$FAILED) {\n            s5 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s6 = peg$c37;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c38); }\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              s8 = [];\n              s9 = peg$currPos;\n              s10 = peg$currPos;\n              peg$silentFails++;\n              if (peg$c75.test(input.charAt(peg$currPos))) {\n                s11 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s11 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c76); }\n              }\n              peg$silentFails--;\n              if (s11 === peg$FAILED) {\n                s10 = void 0;\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n              if (s10 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s11 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s11 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s11 !== peg$FAILED) {\n                  s10 = [s10, s11];\n                  s9 = s10;\n                } else {\n                  peg$currPos = s9;\n                  s9 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s9;\n                s9 = peg$FAILED;\n              }\n              while (s9 !== peg$FAILED) {\n                s8.push(s9);\n                s9 = peg$currPos;\n                s10 = peg$currPos;\n                peg$silentFails++;\n                if (peg$c75.test(input.charAt(peg$currPos))) {\n                  s11 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s11 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c76); }\n                }\n                peg$silentFails--;\n                if (s11 === peg$FAILED) {\n                  s10 = void 0;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n                if (s10 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s11 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s11 !== peg$FAILED) {\n                    s10 = [s10, s11];\n                    s9 = s10;\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s9;\n                  s9 = peg$FAILED;\n                }\n              }\n              if (s8 !== peg$FAILED) {\n                s7 = input.substring(s7, peg$currPos);\n              } else {\n                s7 = s8;\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c77(s1, s4, s6, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = peg$currPos;\n              s6 = peg$c67;\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c78(s1, s4);\n              }\n              s5 = s6;\n            }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c79(s1, s4, s5);\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parse__();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c80(s1, s4);\n        }\n        s3 = s4;\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          s5 = peg$currPos;\n          s6 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c23;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c24); }\n          }\n          peg$silentFails--;\n          if (s7 === peg$FAILED) {\n            s6 = void 0;\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$currPos;\n            peg$silentFails++;\n            s8 = peg$parserbm();\n            peg$silentFails--;\n            if (s8 === peg$FAILED) {\n              s7 = void 0;\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s8 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n              }\n              if (s8 !== peg$FAILED) {\n                s6 = [s6, s7, s8];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = input.substring(s4, peg$currPos);\n          } else {\n            s4 = s5;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c81(s1, s4);\n          }\n          s3 = s4;\n        }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        s5 = [];\n        if (peg$c70.test(input.charAt(peg$currPos))) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c71); }\n        }\n        if (s6 !== peg$FAILED) {\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            if (peg$c70.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c71); }\n            }\n          }\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = input.substring(s4, peg$currPos);\n        } else {\n          s4 = s5;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s6 = peg$c37;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c38); }\n          }\n          if (s6 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 34) {\n              s7 = peg$c11;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c12); }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$currPos;\n              s9 = [];\n              s10 = peg$currPos;\n              s11 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 34) {\n                s12 = peg$c11;\n                peg$currPos++;\n              } else {\n                s12 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c12); }\n              }\n              peg$silentFails--;\n              if (s12 === peg$FAILED) {\n                s11 = void 0;\n              } else {\n                peg$currPos = s11;\n                s11 = peg$FAILED;\n              }\n              if (s11 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s12 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s12 !== peg$FAILED) {\n                  s11 = [s11, s12];\n                  s10 = s11;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n              while (s10 !== peg$FAILED) {\n                s9.push(s10);\n                s10 = peg$currPos;\n                s11 = peg$currPos;\n                peg$silentFails++;\n                if (input.charCodeAt(peg$currPos) === 34) {\n                  s12 = peg$c11;\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c12); }\n                }\n                peg$silentFails--;\n                if (s12 === peg$FAILED) {\n                  s11 = void 0;\n                } else {\n                  peg$currPos = s11;\n                  s11 = peg$FAILED;\n                }\n                if (s11 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s12 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s12 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s12 !== peg$FAILED) {\n                    s11 = [s11, s12];\n                    s10 = s11;\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              }\n              if (s9 !== peg$FAILED) {\n                s8 = input.substring(s8, peg$currPos);\n              } else {\n                s8 = s9;\n              }\n              if (s8 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 34) {\n                  s9 = peg$c11;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c12); }\n                }\n                if (s9 === peg$FAILED) {\n                  s9 = peg$currPos;\n                  s10 = peg$parseEOF();\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = s9;\n                    s10 = peg$c73(s1, s4, s6, s7, s8);\n                  }\n                  s9 = s10;\n                }\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c74(s1, s4, s6, s7, s8, s9);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 === peg$FAILED) {\n            s5 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s6 = peg$c37;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c38); }\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 39) {\n                s7 = peg$c21;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c22); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$currPos;\n                s9 = [];\n                s10 = peg$currPos;\n                s11 = peg$currPos;\n                peg$silentFails++;\n                if (input.charCodeAt(peg$currPos) === 39) {\n                  s12 = peg$c21;\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                }\n                peg$silentFails--;\n                if (s12 === peg$FAILED) {\n                  s11 = void 0;\n                } else {\n                  peg$currPos = s11;\n                  s11 = peg$FAILED;\n                }\n                if (s11 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s12 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s12 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s12 !== peg$FAILED) {\n                    s11 = [s11, s12];\n                    s10 = s11;\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n                while (s10 !== peg$FAILED) {\n                  s9.push(s10);\n                  s10 = peg$currPos;\n                  s11 = peg$currPos;\n                  peg$silentFails++;\n                  if (input.charCodeAt(peg$currPos) === 39) {\n                    s12 = peg$c21;\n                    peg$currPos++;\n                  } else {\n                    s12 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                  }\n                  peg$silentFails--;\n                  if (s12 === peg$FAILED) {\n                    s11 = void 0;\n                  } else {\n                    peg$currPos = s11;\n                    s11 = peg$FAILED;\n                  }\n                  if (s11 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                      s12 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s12 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                    }\n                    if (s12 !== peg$FAILED) {\n                      s11 = [s11, s12];\n                      s10 = s11;\n                    } else {\n                      peg$currPos = s10;\n                      s10 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                }\n                if (s9 !== peg$FAILED) {\n                  s8 = input.substring(s8, peg$currPos);\n                } else {\n                  s8 = s9;\n                }\n                if (s8 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 39) {\n                    s9 = peg$c21;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                  }\n                  if (s9 === peg$FAILED) {\n                    s9 = peg$currPos;\n                    s10 = peg$parseEOF();\n                    if (s10 !== peg$FAILED) {\n                      peg$savedPos = s9;\n                      s10 = peg$c73(s1, s4, s6, s7, s8);\n                    }\n                    s9 = s10;\n                  }\n                  if (s9 !== peg$FAILED) {\n                    peg$savedPos = s5;\n                    s6 = peg$c74(s1, s4, s6, s7, s8, s9);\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 61) {\n                s6 = peg$c37;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c38); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$currPos;\n                s8 = [];\n                s9 = peg$currPos;\n                s10 = peg$currPos;\n                peg$silentFails++;\n                if (peg$c75.test(input.charAt(peg$currPos))) {\n                  s11 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s11 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c76); }\n                }\n                peg$silentFails--;\n                if (s11 === peg$FAILED) {\n                  s10 = void 0;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n                if (s10 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s11 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s11 !== peg$FAILED) {\n                    s10 = [s10, s11];\n                    s9 = s10;\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s9;\n                  s9 = peg$FAILED;\n                }\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$currPos;\n                  s10 = peg$currPos;\n                  peg$silentFails++;\n                  if (peg$c75.test(input.charAt(peg$currPos))) {\n                    s11 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c76); }\n                  }\n                  peg$silentFails--;\n                  if (s11 === peg$FAILED) {\n                    s10 = void 0;\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                  if (s10 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                      s11 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s11 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                    }\n                    if (s11 !== peg$FAILED) {\n                      s10 = [s10, s11];\n                      s9 = s10;\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                }\n                if (s8 !== peg$FAILED) {\n                  s7 = input.substring(s7, peg$currPos);\n                } else {\n                  s7 = s8;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c77(s1, s4, s6, s7);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$currPos;\n                s6 = peg$c67;\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c78(s1, s4);\n                }\n                s5 = s6;\n              }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c79(s1, s4, s5);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parse__();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c80(s1, s4);\n          }\n          s3 = s4;\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = peg$currPos;\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s7 = peg$c23;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c24); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              s8 = peg$parserbm();\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s6 = [s6, s7, s8];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = input.substring(s4, peg$currPos);\n            } else {\n              s4 = s5;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c81(s1, s4);\n            }\n            s3 = s4;\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c23;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c24); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parserbm();\n          peg$silentFails--;\n          if (s5 !== peg$FAILED) {\n            peg$currPos = s4;\n            s4 = void 0;\n          } else {\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c82(s1, s2);\n          }\n          s3 = s4;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c83(s1, s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c84;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c85); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$c67;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c86(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parserbm() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    if (input.charCodeAt(peg$currPos) === 62) {\n      s3 = peg$c39;\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n    while (s3 !== peg$FAILED) {\n      s2.push(s3);\n      if (input.charCodeAt(peg$currPos) === 62) {\n        s3 = peg$c39;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 93) {\n        s2 = peg$c87;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c88); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s3 = peg$c89(s1, s2);\n        if (s3) {\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c90(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseEOF();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c91();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parserbm_pop() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parserbm();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c92(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetext() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    peg$silentFails++;\n    s4 = peg$parselbm();\n    peg$silentFails--;\n    if (s4 === peg$FAILED) {\n      s3 = void 0;\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      s4 = peg$currPos;\n      peg$silentFails++;\n      s5 = peg$parserbm();\n      peg$silentFails--;\n      if (s5 === peg$FAILED) {\n        s4 = void 0;\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 96) {\n          s6 = peg$c93;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c94); }\n        }\n        peg$silentFails--;\n        if (s6 === peg$FAILED) {\n          s5 = void 0;\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c72); }\n          }\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s2;\n            s3 = peg$c95(s6);\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parselbm();\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = void 0;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parserbm();\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = void 0;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 96) {\n              s6 = peg$c93;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c94); }\n            }\n            peg$silentFails--;\n            if (s6 === peg$FAILED) {\n              s5 = void 0;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s2;\n                s3 = peg$c95(s6);\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c96(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseverbatim() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parselvm();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseverbatim_separator();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseverbatim_text();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parservm();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c97(s1, s2, s3, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselvm() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 96) {\n      s1 = peg$c93;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c94); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (input.charCodeAt(peg$currPos) === 60) {\n        s3 = peg$c4;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (input.charCodeAt(peg$currPos) === 60) {\n          s3 = peg$c4;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c5); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c98(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseverbatim_separator() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s0 = peg$c84;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c85); }\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$c67;\n    }\n\n    return s0;\n  }\n\n  function peg$parservm() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 62) {\n      s2 = peg$c39;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (input.charCodeAt(peg$currPos) === 62) {\n        s2 = peg$c39;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 96) {\n        s2 = peg$c93;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c94); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s3 = peg$c99(s1, s2);\n        if (s3) {\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c100(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseEOF();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c91();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseverbatim_text() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    peg$silentFails++;\n    s4 = peg$parservm();\n    peg$silentFails--;\n    if (s4 === peg$FAILED) {\n      s3 = void 0;\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c72); }\n      }\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s2;\n        s3 = peg$c95(s4);\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      peg$silentFails++;\n      s4 = peg$parservm();\n      peg$silentFails--;\n      if (s4 === peg$FAILED) {\n        s3 = void 0;\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c72); }\n        }\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c95(s4);\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c96(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c101.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c102); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (peg$c101.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c102); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parse__() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c101.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c102); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c101.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c102); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n\n  \tvar bstack = [], vlevel;\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import Tag from \"./renderer/nodes/Tag\";\nimport { RenderingOptionsType } from \"./renderer/RenderingOptionsType\";\n\nfunction shallow(o: { [key: string]: any }) {\n\tvar o2: { [key: string]: any } = {};\n\n\tfor (var k in o) o2[k] = o[k];\n\n\treturn o2;\n}\n\nfunction copyOptions(o: RenderingOptionsType) {\n\tvar o2: RenderingOptionsType = {};\n\tif (o.tags) o2.tags = shallow(o.tags);\n\tif (o.hljs) o2.hljs = o.hljs;\n\tif (o.katex) o2.katex = o.katex;\n\treturn o2;\n}\n\nfunction tags(o1: { [key: string]: Tag }, o2: { [key: string]: Tag }) {\n\to1 = shallow(o1);\n\t\n\tfor (var k in o2) {\n\t\to1[k] = o2[k];\n\t}\n\n\treturn o1;\n}\n\nfunction options(o1: RenderingOptionsType, o2: RenderingOptionsType) {\n\tif (typeof o1 != 'object'\n\t\t\t|| typeof o2 != 'object') {\n\t\tthrow TypeError('One of the options provided is not an object');\n\t}\n\n\to1 = copyOptions(o1);\n\t\n\tif (o2.tags) {\n\t\tif (!o1.tags) {\n\t\t\to1.tags = {};\n\t\t}\n\t\t\n\t\to1.tags = tags(o1.tags, o2.tags);\n\t}\n\n\tif (o2.hljs) o1.hljs = o2.hljs;\n\tif (o2.katex) o1.katex = o2.katex;\n\n\treturn o1;\n}\n\nexport default {\n\tcopyOptions,\n\ttags,\n\toptions\n};\n","var STATE_NORMAL = 0,\n\tSTATE_ATTRIBUTE_NAME = 1,\n\tSTATE_ATTRIBUTE_EQ = 2,\n\tSTATE_ATTRIBUTE_VALUE = 3,\n\tSTATE_ATTRIBUTE_DQUOTE = 4,\n\tSTATE_ATTRIBUTE_SQUOTE = 5;\n\nexport default function addCodeMirrorMode(CodeMirror) {\n\tfunction token(stream, state) {\n\t\tif ((state.levels[state.levels.length - 1] || 0) < 0) {\n\t\t\tvar lvmLevel = -state.levels[state.levels.length - 1];\n\t\t\tvar rvmString = '>'.repeat(lvmLevel - 1) + '`';\n\t\t\tif (stream.skipTo(rvmString)) {\n\t\t\t\tstream.match(rvmString);\n\t\t\t\tstate.levels.pop();\n\t\t\t} else stream.skipToEnd();\n\n\t\t\treturn 'comment';\n\t\t}\n\n\t\tvar c = stream.peek();\n\n\t\tif (![STATE_ATTRIBUTE_DQUOTE, STATE_ATTRIBUTE_SQUOTE].includes(state.status)\n\t\t\t\t&& ['>', ']'].includes(c)) {\n\t\t\tvar lbmLevel = state.levels[state.levels.length - 1] || 0;\n\t\t\tif (lbmLevel > 0) {\n\t\t\t\tvar rbmString = '>'.repeat(lbmLevel - 1) + ']';\n\t\t\t\tif (stream.match(rbmString)) {\n\t\t\t\t\tstate.levels.pop();\n\t\t\t\t\tstate.status = STATE_NORMAL;\n\t\t\t\t\treturn 'tag';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (state.status != STATE_NORMAL) {\n\t\t\tif (stream.match(')')) {\n\t\t\t\tstate.status = STATE_NORMAL;\n\t\t\t\treturn 'tag';\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_NAME) {\n\t\t\t\tif (stream.match(/^[a-z0-9-]+/)) {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_EQ;\n\t\t\t\t\treturn 'attribute';\n\t\t\t\t} else if (stream.match(/^[ \\t\\n\\r]+/)) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tstream.next();\n\t\t\t\t\treturn 'error';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_EQ) {\n\t\t\t\tif (stream.match('=')) {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_VALUE;\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_VALUE) {\n\t\t\t\tif (stream.match('\"')) {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_DQUOTE;\n\t\t\t\t\treturn 'string';\n\t\t\t\t}\n\n\t\t\t\tif (stream.match(\"'\")) {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_SQUOTE;\n\t\t\t\t\treturn 'string';\n\t\t\t\t}\n\n\t\t\t\tstream.match(/^[^'\"()\\[\\] \\t\\n\\r]*/);\n\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t\treturn 'string';\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_DQUOTE) {\n\t\t\t\tif (stream.skipTo('\"')) {\n\t\t\t\t\tstream.match('\"');\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t\t} else stream.skipToEnd();\n\n\t\t\t\treturn 'string';\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_SQUOTE) {\n\t\t\t\tif (stream.skipTo(\"'\")) {\n\t\t\t\t\tstream.match(\"'\");\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t\t} else stream.skipToEnd();\n\n\t\t\t\treturn 'string';\n\t\t\t}\n\t\t}\n\n\t\tif (c == '`') {\n\t\t\tstream.next();\n\n\t\t\tvar level = 1;\n\t\t\twhile (c = stream.next()) {\n\t\t\t\tif (c != '<') {\n\t\t\t\t\tstream.backUp(1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlevel++;\n\t\t\t}\n\n\t\t\tstate.levels.push(-level);\n\n\t\t\treturn 'comment';\n\t\t} else if (c == '[') {\n\t\t\tstream.next();\n\n\t\t\tvar level = 1;\n\t\t\twhile (c = stream.next()) {\n\t\t\t\tif (c != '<') {\n\t\t\t\t\tstream.backUp(1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlevel++;\n\t\t\t}\n\n\t\t\tvar currentLevel = state.levels[state.levels.length - 1] || 0;\n\t\t\tif (level < currentLevel) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar tagNameRegex = /^(?:\\!+|\\\"+|\\#+|\\$+|\\%+|\\&+|\\'+|\\)+|\\*+|\\++|\\,+|\\-+|\\/+|\\;+|\\=+|\\>+|\\?+|\\@+|\\\\+|\\^+|\\_+|\\{+|\\|+|\\}+|\\~+|[a-z][a-z0-9]*(?:\\:[a-z][a-z0-9]*)*|)/;\n\n\t\t\tstream.match(tagNameRegex);\n\n\t\t\tif (stream.match('(')) {\n\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t} else {\n\t\t\t\tvar separatorRegex = /^(?:[.]|)/i;\n\t\t\t\tstream.match(separatorRegex);\n\t\t\t}\n\n\t\t\tstate.levels.push(level);\n\n\t\t\treturn 'tag';\n\t\t} else if (c == '>' || c == ']') {\n\t\t\tvar lbmLevel = state.levels[state.levels.length - 1] || 0;\n\t\t\tif (lbmLevel <= 0) {\n\t\t\t\tstream.next();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar rbmString = '>'.repeat(lbmLevel - 1) + ']';\n\t\t\tif (stream.match(rbmString)) {\n\t\t\t\tstate.levels.pop();\n\t\t\t\treturn 'tag';\n\t\t\t} else {\n\t\t\t\tstream.next();\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}  else /* none of '[', ']', '`', '>' */ {\n\t\t\t// reduce text normalization overhead\n\t\t\tstream.match(/^[^\\[\\]`>]+/);\n\t\t}\n\t}\n\n\tCodeMirror.defineMode('yamd', (config, parserConfig) => ({\n\t\tstartState(baseColumn) {\n\t\t\treturn {\n\t\t\t\tlevels: [],\n\t\t\t\tstatus: STATE_NORMAL\n\t\t\t}\n\t\t},\n\t\ttoken\n\t}));\n};","import parser, { AstRootType } from './parser';\nimport renderer from './renderer';\nimport highlighter from './highlighter';\nimport cascade from './cascade';\nimport addCodeMirrorMode from './codemirror';\nimport { RenderingOptionsType } from './renderer/RenderingOptionsType';\n\nvar globalOptions: RenderingOptionsType = {};\n\nfunction cascadeOptions(options: RenderingOptionsType) {\n\tif (typeof options != 'object')\n\t\tthrow TypeError('typeof options != \\'object\\'');\n\tglobalOptions = cascade.options(globalOptions, options);\n}\n\nfunction setOptions(options: RenderingOptionsType) {\n\tif (typeof options != 'object')\n\t\tthrow TypeError('typeof options != \\'object\\'');\n\tglobalOptions = options;\n}\n\nfunction ast2nt(ast: AstRootType, options: RenderingOptionsType) {\n\tif (!options) options = {};\n\tif (!options.tags) options.tags = {};\n\n\toptions = cascade.options(globalOptions, options);\n\n\tvar nt = renderer.ast2nt(ast, options);\n\n\treturn nt;\n}\n\nfunction render(input: string, options: RenderingOptionsType) {\n\tinput += '';\n\tif (!options) options = {};\n\tif (!options.tags) options.tags = {};\n\t\n\toptions = cascade.options(globalOptions, options);\n\n\tvar pt = parser.input2pt(input);\n\tvar ast = parser.pt2ast(pt);\n\tvar html = renderer.ast2nt(ast, options).outerHtml;\n\t\n\treturn html;\n}\n\nfunction highlight(input: string) {\n\tinput += '';\n\n\tvar pt = parser.input2pt(input);\n\tvar hl = highlighter.pt2hl(pt);\n\n\treturn hl;\n}\n\nvar yamd = {\n\tparser,\n\trenderer,\n\thighlighter,\n\tast2nt,\n\trender,\n\thighlight,\n\tcascade: cascadeOptions,\n\tset: setOptions,\n\taddCodeMirrorMode\n};\n\nmodule.exports = yamd;\n","var escapeHtml = s => (s + '').replace(/[&<>\"']/g, m => ({\n\t'&': '&amp;', '<': '&lt;', '>': '&gt;',\n\t'\"': '&quot;', '\\'': '&#39;'\n})[m]);\n\nfunction makeHtml(fragment) {\n\treturn `<span class=\"yamdhl-${fragment.type}\">${fragment.html || escapeHtml(fragment.text)}</span>`;\n}\n\nfunction pt2hl(pt) {\n\treturn (function recurse(pt) {\n\t\tvar ret = '';\n\n\t\tfor (var i = 0; i < pt.length; i++) {\n\t\t\tswitch(pt[i].type) {\n\t\t\t\tcase 'text':\n\t\t\t\t\tret += makeHtml({\n\t\t\t\t\t\ttype: 'tx',\n\t\t\t\t\t\ttext: pt[i].text\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'element':\n\t\t\t\t\tvar tmp = makeHtml({\n\t\t\t\t\t\ttype: 'lbm',\n\t\t\t\t\t\ttext: pt[i].lbm\n\t\t\t\t\t})\n\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\ttype: 'tn',\n\t\t\t\t\t\ttext: pt[i].name\n\t\t\t\t\t})\n\t\t\t\t\t\t+ (p => {\n\t\t\t\t\t\tswitch (p._type) {\n\t\t\t\t\t\t\tcase 'parenthesis':\n\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\ttype: 'lpm',\n\t\t\t\t\t\t\t\t\ttext: p.left\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t+ p.content.map(q => {\n\t\t\t\t\t\t\t\t\tswitch (q._type) {\n\t\t\t\t\t\t\t\t\t\tcase 'attribute':\n\t\t\t\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'pk',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[0]\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'eq',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[1]\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'lqm',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[2]\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'pv',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[3]\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'rqm',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[4]\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tcase 'whitespace':\n\t\t\t\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'tx',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.whitespace\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tcase 'error':\n\t\t\t\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'err',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.error\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tthrow Error('Unknown type');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}).join('')\n\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\ttype: 'rpm',\n\t\t\t\t\t\t\t\t\ttext: p.right\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcase 'separator':\n\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\ttype: 'sp',\n\t\t\t\t\t\t\t\t\ttext: p.separator\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow Error('Unknown type');\n\t\t\t\t\t\t}\n\t\t\t\t\t})(pt[i].attributes)\n\t\t\t\t\t\t+ recurse(pt[i].children)\n\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\ttype: 'rbm',\n\t\t\t\t\t\ttext: pt[i].rbm\n\t\t\t\t\t});\n\n\t\t\t\t\tret += makeHtml({\n\t\t\t\t\t\ttype: 'elem',\n\t\t\t\t\t\thtml: tmp\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'verbatim':\n\t\t\t\t\tvar tmp2 = makeHtml({\n\t\t\t\t\t\ttype: 'lvm',\n\t\t\t\t\t\ttext: pt[i].lvm + pt[i].separator\n\t\t\t\t\t})\n\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\ttype: 'tx',\n\t\t\t\t\t\ttext: pt[i].child.text\n\t\t\t\t\t})\n\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\ttype: 'rvm',\n\t\t\t\t\t\ttext: pt[i].rvm\n\t\t\t\t\t});\n\n\t\t\t\t\tret += makeHtml({\n\t\t\t\t\t\ttype: 'verb',\n\t\t\t\t\t\thtml: tmp2\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new TypeError(`Unknown type: ${pt[i].type}`);\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t})(pt.root.children);\n}\n\nexport default {\n\tpt2hl\n};","let peg;\n\nif (process.env.__webpack__) {\n\tpeg = require('../build_tmp/peg');\n} else {\n\tlet fs = require('fs');\n\tlet path = require('path');\n\tlet pegjs = require('pegjs');\n\n\tlet grammar = fs.readFileSync(path.join(__dirname, 'parser.pegjs'), 'utf-8');\n\tpeg = pegjs.generate(grammar, {cache: true});\n}\n\nexport interface AstRootType {\n\tinput: string;\n\troot: AstRootTypeInner;\n}\n\nexport interface AstRootTypeInner {\n\ttype: 'root';\n\tchildren: (AstElementType | AstTextType)[];\n\tcode: string;\n}\n\ninterface AstElementType {\n\ttype: 'element';\n\tname: string;\n\tattributes: ({\n\t\tname: string;\n\t\tvalue: string;\n\t})[];\n\tchildren: (AstElementType | AstTextType)[];\n\tcode: string;\n}\n\ninterface AstTextType {\n\ttype: 'text';\n\ttext: string;\n}\n\nexport type AstType = AstRootTypeInner | AstElementType | AstTextType;\n\nfunction input2pt(input: string) {\n\tvar pt = peg.parse(input);\n\tpt.input = input;\n\t\n\treturn pt;\n}\n\nfunction pt2ast(pt): AstRootType {\n\tvar input = pt.input;\n\n\tvar r = (function recurse(pt) {\n\t\tvar ast = pt.map(e => {\n\t\t\tswitch (e.type) {\n\t\t\t\tcase 'text':\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\ttext: e.text\n\t\t\t\t\t};\n\t\t\t\tcase 'verbatim':\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\ttext: e.child.text\n\t\t\t\t\t};\n\t\t\t\tcase 'element':\n\t\t\t\t\tvar attributes = e.attributes._type != 'parenthesis'\n\t\t\t\t\t\t? []\n\t\t\t\t\t\t: e.attributes.content.filter(({_type}) => _type == 'attribute')\n\t\t\t\t\t\t\t.map(({attribute}) => ({\n\t\t\t\t\t\t\t\tname: attribute[0],\n\t\t\t\t\t\t\t\tvalue: attribute[3]\n\t\t\t\t\t\t\t}));\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'element',\n\t\t\t\t\t\tname: e.name,\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t\tcode: input.substring(e.location.start.offset, e.location.end.offset),\n\t\t\t\t\t\tchildren: recurse(e.children)\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new TypeError(`Unknown type: ${e.type}`);\n\t\t\t}\n\t\t});\n\n\t\t// join text nodes & remove empty\n\t\tast = ast.reduce((l, r) => {\n\t\t\tif (r.type == 'text') {\n\t\t\t\tif (!r.text) return l;\n\t\t\t\tif (l.length && l[l.length - 1].type == 'text') {\n\t\t\t\t\tl[l.length - 1].text += r.text;\n\t\t\t\t\treturn l;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn l.push(r), l;\n\t\t}, []);\n\n\t\treturn ast;\n\t})(pt.root.children);\n\n\treturn {\n\t\tinput: pt.input,\n\t\troot: {\n\t\t\ttype: 'root',\n\t\t\tchildren: r,\n\t\t\tcode: input\n\t\t}\n\t};\n}\n\nexport default {\n\tinput2pt,\n\tpt2ast\n};","import Tag from \"../nodes/Tag\";\n\nvar tagNameMap: {\n\t[key: string]: Tag\n} = {};\n\ntagNameMap.comment = new Tag({\n\tname: 'comment',\n\tdisplay: 'inline',\n\trenderer: el => el.text('')\n});\n\ntagNameMap.entity = new Tag({\n\tname: 'entity',\n\tdisplay: 'inline',\n\trenderer: el => {\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tif(!/^([a-z]{1,50}|#[0-9]{1,10}|#x[0-9a-f]{1,10})$/i.test(el.innerText as string))\n\t\t\treturn el.error('Invalid value');\n\n\t\treturn el.html(`&${el.innerText};`);\n\t}\n});\n\n[\n\t'b', 'code', 'i', 'u', 'sup', 'sub'\n].forEach(name => tagNameMap[name] = new Tag({\n\tname: name,\n\tdisplay: 'inline',\n\trenderer: el => {\n\t\treturn el.html(`<${name}>${el.innerHtml}</${name}>`);\n\t}\n}));\n\n[\n\t'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p'\n].forEach(name => tagNameMap[name] = new Tag({\n\tname: name,\n\tdisplay: 'leaf-block',\n\trenderer: el => {\n\t\treturn el.html(`<${name}>${el.innerHtml}</${name}>`);\n\t}\n}));\n\ntagNameMap['blockquote'] = new Tag({\n\tname: 'blockquote',\n\tdisplay: 'container-block',\n\trenderer: el => {\n\t\tvar type = el.getAttribute('type');\n\n\t\tif (['info', 'warn'].includes(type))\n\t\t\treturn el.html(`<blockquote class=\"yamd-bq-${type}\">${el.innerHtml}</blockquote>`);\n\n\t\treturn el.html(`<blockquote>${el.innerHtml}</blockquote>`);\n\t}\n});\n\n[\n\t'br'\n].forEach(name => tagNameMap[name] = new Tag({\n\tname,\n\tdisplay: 'inline',\n\trenderer: el => {\n\t\treturn el.html(`<${name}>${el.innerHtml}`);\n\t}\n}));\n\n[\n\t'hr'\n].forEach(name => tagNameMap[name] = new Tag({\n\tname,\n\tdisplay: 'leaf-block',\n\trenderer: el => {\n\t\treturn el.html(`<${name}>${el.innerHtml}`);\n\t}\n}));\n\n['ul', 'ol'].forEach(name => {\n\ttagNameMap[name] = new Tag({\n\t\tname,\n\t\tdisplay: 'container-block',\n\t\tsplit: '*',\n\t\trenderer: el => {\n\t\t\treturn el.html(`<${name}>`\n\t\t\t\t+ (el.innerHtml as string[]).map(h => `<li>${h}</li>`).join('')\n\t\t\t\t+ `</${name}>`);\n\t\t}\n\t});\n});\n\ntagNameMap.table = new Tag({\n\tname: 'table',\n\tdisplay: 'container-block',\n\tsplit: ['*', '**'],\n\trenderer: el => {\n\t\tvar n = (el.innerHtml as string[][]).map(e => e.length).reduce((l, r) => l < r ? r : l);\n\n\t\treturn el.html('<table>'\n\t\t\t+ (el.innerHtml as string[][]).map(hh => `<tr>${\n\t\t\t\thh.concat(Array(n - hh.length).fill(''))\n\t\t\t\t\t.map(h => `<td>${h}</td>`).join('')\n\t\t\t}</tr>`).join('')\n\t\t\t+ '</table>');\n\t}\n});\n\ntagNameMap.blockcode = new Tag({\n\tname: 'blockcode',\n\tdisplay: 'leaf-block',\n\trenderer: el => {\n\t\tvar trimmed = (el.innerHtml as string).replace(/(^[ \\t]*(\\r\\n|\\r|\\n))|((\\r\\n|\\r|\\n)[ \\t]*$)/g, '');\n\t\treturn el.html(`<pre><code>${trimmed}\\n</code></pre>`);\n\t}\n});\n\ntagNameMap.bi = new Tag({\n\tname: 'bi',\n\tdisplay: 'inline',\n\trenderer: el => {\n\t\treturn el.html(`<i><b>${el.innerHtml}</b></i>`);\n\t}\n});\n\nfunction normalizeUrl(url) {\n\turl = url.trim();\n\n\t// fragment\n\tif (/^#/.test(url)) {\n\t\tif (/^#[^\\s]*$/.test(url)) {\n\t\t\treturn url;\n\t\t} else return false;\n\t}\n\n\t// relative URL\n\tif (/^(\\/|\\.\\/|\\.\\.\\/)/.test(url)) {\n\t\tif (/^(\\/|\\.\\/|\\.\\.\\/)[^\\s]*$/.test(url)) {\n\t\t\treturn url;\n\t\t} else return false;\n\t}\n\n\tif (!/^(http:\\/\\/|https:\\/\\/|ftp:\\/\\/)/.test(url))\n\t\turl = 'http://' + url;\n\n\t// see issue #17\n\tif (/^(http:\\/\\/|https:\\/\\/|ftp:\\/\\/)[a-z0-9]+(-+[a-z0-9]+)*(\\.[a-z0-9]+(-+[a-z0-9]+)*)+\\.?(:[0-9]{1,5})?(\\/[^\\s]*)?$/.test(url)) {\n\t\treturn url;\n\t} else return false;\n}\n\ntagNameMap.link = new Tag({\n\tname: 'link',\n\tdisplay: 'inline',\n\trenderer: el => {\n\t\tvar href = el.getAttribute('href');\n\n\t\tif (href == null) {\n\t\t\tif (!el.innerIsText)\n\t\t\t\treturn el.error('Non-text input');\n\n\t\t\tlet url = normalizeUrl(el.innerText);\n\t\t\tif (!url) return el.error('Invalid URL');\n\n\t\t\tlet htmlUrl = el.escapeHtml(url);\n\t\t\treturn el.html(`<a href=\"${htmlUrl}\" title=\"${htmlUrl}\">${htmlUrl}</a>`);\n\t\t} else {\n\t\t\tlet url = normalizeUrl(href);\n\t\t\tif (!url) return el.error('Invalid URL');\n\n\t\t\tlet htmlUrl = el.escapeHtml(url);\n\t\t\treturn el.html(`<a href=\"${htmlUrl}\" title=\"${htmlUrl}\">${el.innerHtml}</a>`);\n\t\t}\n\t}\n});\n\ntagNameMap.img = new Tag({\n\tname: 'img',\n\tdisplay: 'leaf-block',\n\trenderer: el => {\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tvar url = normalizeUrl(el.innerText);\n\t\tif (!url) return el.error('Invalid URL');\n\n\t\tvar htmlUrl = el.escapeHtml(url);\n\t\treturn el.html(`<img src=\"${htmlUrl}\">`);\n\t}\n});\n\n[\n\t'squote', 'dquote'\n].forEach(name => tagNameMap[name] = new Tag({\n\tname,\n\tdisplay: 'inline',\n\trenderer: el => {\n\t\tvar quotes = {\n\t\t\tsquote: {\n\t\t\t\tnormal: ['\\u2018', '\\u2019'],\n\t\t\t\tangle: ['\\u3008', '\\u3009'],\n\t\t\t\tcorner: ['\\u300c', '\\u300d']\n\t\t\t},\n\t\t\tdquote: {\n\t\t\t\tnormal: ['\\u201c', '\\u201d'],\n\t\t\t\tangle: ['\\u300a', '\\u300b'],\n\t\t\t\tcorner: ['\\u300e', '\\u300f']\n\t\t\t}\n\t\t};\n\n\t\tvar type = el.getAttribute('type');\n\t\tif (!['angle', 'corner'].includes(type))\n\t\t\ttype = 'normal';\n\n\t\treturn el.html(`${quotes[name][type][0]}${el.innerHtml}${quotes[name][type][1]}`);\n\t}\n}));\n\ntagNameMap.highlight = new Tag({\n\tname: 'highlight',\n\tdisplay: 'leaf-block',\n\trenderer: (el, options) => {\n\t\tif (!options.hljs)\n\t\t\treturn el.error('Element not implemented (options.highlight not given)');\n\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tvar commonLangs = [\n\t\t\t'apache', 'bash', 'coffeescript', 'cpp', 'cs',\n\t\t\t'css', 'diff', 'http', 'ini', 'java',\n\t\t\t'javascript', 'json', 'makefile', 'xml', 'markdown',\n\t\t\t'nginx', 'objectivec', 'perl', 'php', 'python',\n\t\t\t'ruby', 'sql'\n\t\t];\n\n\t\tvar trimmed = (el.innerText as string).replace(/(^[ \\t]*(\\r\\n|\\r|\\n))|((\\r\\n|\\r|\\n)[ \\t]*$)/g, '');\n\n\t\tvar highlighted;\n\n\t\tif (commonLangs.includes(el.getAttribute('lang'))) {\n\t\t\tvar lang = el.getAttribute('lang');\n\t\t\thighlighted = options.hljs.highlight(lang, trimmed).value;\n\t\t} else {\n\t\t\thighlighted = options.hljs.highlightAuto(trimmed, commonLangs).value;\n\t\t}\n\n\t\treturn el.html(`<pre class=\"hljs\"><code>${highlighted}\\n</code></pre>`);\n\t}\n});\n \ntagNameMap.math = new Tag({\n\tname: 'math',\n\tdisplay: 'inline',\n\trenderer: (el, options) => {\n\t\tif (!options.katex)\n\t\t\treturn el.error('Element not implemented (options.katex not given)');\n\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tvar rendered = options.katex.renderToString(el.innerText, {\n\t\t\tthrowOnError: false,\n\t\t\tdisplayMode: false,\n\t\t\tstrict: 'error'\n\t\t});\n\n\t\treturn el.html(rendered);\n\t}\n});\n\ntagNameMap.displaymath = new Tag({\n\tname: 'displaymath',\n\tdisplay: 'leaf-block',\n\trenderer: (el, options) => {\n\t\tif (!options.katex)\n\t\t\treturn el.error('Element not implemented (options.katex not given)');\n\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tvar rendered = options.katex.renderToString(el.innerText, {\n\t\t\tthrowOnError: false,\n\t\t\tdisplayMode: true,\n\t\t\tstrict: 'error'\n\t\t});\n\n\t\treturn el.html(rendered);\n\t}\n});\n\n// tag name aliases ordered by char code\nvar aliases = {\n\t'\"': 'dquote',\n\t'$': 'math',\n\t'$$': 'displaymath',\n\t'%': 'comment',\n\t'&': 'entity',\n\t'\\'': 'squote',\n\t'*': 'i',\n\t'**': 'b',\n\t'***': 'bi',\n\t';': 'code',\n\t';;': 'blockcode',\n\t';;;': 'highlight',\n\t'=': 'h1',\n\t'==': 'h2',\n\t'===': 'h3',\n\t'====': 'h4',\n\t'=====': 'h5',\n\t'======': 'h6',\n\t'>': 'blockquote',\n\t'\\\\': 'br',\n\t'^': 'sup',\n\t'_': 'sub',\n\t'~': 'link',\n\t'~~': 'img'\n};\n\nfor (var k in aliases) {\n\tif (!tagNameMap[aliases[k]]) {\n\t\tthrow TypeError('aliasing failed');\n\t}\n\ttagNameMap[k] = tagNameMap[aliases[k]];\n}\n\nexport default tagNameMap;","import defaultTagNameMap from './elements/default';\nimport cascade from '../cascade';\nimport Element from './nodes/Element';\nimport Tag from './nodes/Tag';\nimport Node from './nodes/Node';\nimport ErrorNode from './nodes/ErrorNode';\nimport TextNode from './nodes/TextNode';\nimport HtmlNode from './nodes/HtmlNode';\nimport { AstRootType, AstType } from '../parser';\nimport { RenderingOptionsType } from './RenderingOptionsType';\n\nvar rootClass = new Tag({\n\tname: '[root]',\n\tdisplay: 'container-block',\n\trenderer: el => el.html(el.innerHtml as string)\n});\n\nfunction ast2nt(ast: AstRootType, options: RenderingOptionsType): Element {\n\tif (!options) options = {};\n\tif (!options.tags) options.tags = {};\n\n\tvar tagNameMap = cascade.tags(defaultTagNameMap, options.tags);\n\t\n\tvar root = (function recurse(tree: AstType): Node {\n\t\tif (tree.type == 'root') {\n\t\t\treturn rootClass.createElement({\n\t\t\t\tcode: tree.code,\n\t\t\t\tattributes: [],\n\t\t\t\tchildren: tree.children.map(recurse),\n\t\t\t\toptions\n\t\t\t});\n\t\t}\n\t\tif (tree.type == 'text') {\n\t\t\treturn new TextNode(tree.text);\n\t\t}\n\t\t\n\t\t// @ts-ignore\n\t\tif (tree.type == 'error') {\n\t\t\treturn new ErrorNode({\n\t\t\t\tmessage: 'Parser error',\n\t\t\t\t// @ts-ignore\n\t\t\t\tcode: tree.text\n\t\t\t});\n\t\t}\n\t\t\n\t\tif (tree.type == 'element') {\n\t\t\tif (tree.name in tagNameMap && tagNameMap[tree.name]) {\n\t\t\t\tif (tagNameMap[tree.name].split) {\n\t\t\t\t\tvar recurseSplit = (list, split) => {\n\t\t\t\t\t\tif (split.length == 0)\n\t\t\t\t\t\t\treturn list.map(recurse);\n\n\t\t\t\t\t\tvar s = split[split.length - 1];\n\n\t\t\t\t\t\tvar a = [], b;\n\n\t\t\t\t\t\t// find delimiters\n\t\t\t\t\t\tlist = list.map(l => {\n\t\t\t\t\t\t\tif (l.type == 'element' && l.name == s\n\t\t\t\t\t\t\t\t\t&& !l.children.length) {\n\t\t\t\t\t\t\t\treturn ({\n\t\t\t\t\t\t\t\t\ttype: 'delimiter'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn l;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// trim left\n\t\t\t\t\t\tif (list.length && list[0].type == 'text'\n\t\t\t\t\t\t\t\t&& !list[0].text.trim()) {\n\t\t\t\t\t\t\tlist = list.slice(1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// add omitted delimiter\n\t\t\t\t\t\tif (!(list.length && list[0].type == 'delimiter')) {\n\t\t\t\t\t\t\tlist.unshift({\n\t\t\t\t\t\t\t\ttype: 'delimiter'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\t\t\t\tif (list[i].type == 'delimiter') {\n\t\t\t\t\t\t\t\tif (b) a.push(b);\n\t\t\t\t\t\t\t\tb = [];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tb.push(list[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ta.push(b);\n\n\t\t\t\t\t\treturn a.map(e => recurseSplit(e, split.slice(0, -1)));\n\t\t\t\t\t};\n\n\t\t\t\t\treturn tagNameMap[tree.name].createElement({\n\t\t\t\t\t\tcode: tree.code,\n\t\t\t\t\t\tattributes: tree.attributes,\n\t\t\t\t\t\tchildren: recurseSplit(\n\t\t\t\t\t\t\ttree.children,\n\t\t\t\t\t\t\ttagNameMap[tree.name].split\n\t\t\t\t\t\t),\n\t\t\t\t\t\toptions\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn tagNameMap[tree.name].createElement({\n\t\t\t\t\tcode: tree.code,\n\t\t\t\t\tattributes: tree.attributes,\n\t\t\t\t\tchildren: tree.children.map(recurse),\n\t\t\t\t\toptions\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new ErrorNode({\n\t\t\t\tmessage: tree.name ? `Undefined tag name [${tree.name}]` : 'No tag name',\n\t\t\t\tcode: tree.code\n\t\t\t});\n\t\t}\n\n\t\t// @ts-ignore\n\t\tthrow TypeError(tree.type);\n\t})(ast.root) as Element;\n\n\troot.render();\n\n\treturn root;\n}\n\nexport default {\n\tast2nt,\n\tNode,\n\tTextNode,\n\tHtmlNode,\n\tErrorNode,\n\tTag,\n\tElement\n};\n","import { TagArgumentType, CreateElementArgumentType } from \"./Tag\";\nimport ErrorNode from \"./ErrorNode\";\nimport escapeHtml from \"./escapeHtml\";\nimport HtmlNode from \"./HtmlNode\";\nimport Node from \"./Node\";\nimport TextNode from \"./TextNode\";\nimport { RenderingOptionsType } from \"../RenderingOptionsType\";\n\ninterface ElementArgumentType\n\textends TagArgumentType, CreateElementArgumentType {\n}\n\nexport type Nested<T> = T | Nested<T>[];\n\nexport type ElementDisplayType = 'inline' | 'leaf-block' | 'container-block';\n\nexport function isElementDisplayType(obj: string): obj is ElementDisplayType {\n\treturn ['inline', 'leaf-block', 'container-block'].includes(obj);\n}\n\nexport default class Element extends Node {\n\n\tpublic readonly name: NonNullable<string>;\n\tpublic readonly display: ElementDisplayType;\n\tprivate readonly renderer: (el: Element, options: RenderingOptionsType) => Node;\n\tpublic readonly split: string[];\n\n\tpublic readonly code: string;\n\tpublic readonly attributes: any[];\n\tpublic readonly children: Nested<Node>[];\n\tpublic readonly options: RenderingOptionsType;\n\n\tprivate innerIsRendered = false;\n\t#innerIsText: Nested<boolean>;\n\t#innerText: Nested<string>;\n\t#innerHtml: Nested<string>;\n\n\tprivate outerIsRendered = false;\n\t#rendered: Node;\n\t#outerIsText: boolean;\n\t#outerText: string;\n\t#isError: boolean;\n\t#errorMessage: string;\n\t#outerHtml: string;\n\n\tconstructor ({name, display, renderer, split, code, attributes, children, options}: ElementArgumentType) {\n\t\tsuper();\n\n\t\tif (!name) throw TypeError('You give arg0 a bad name');\n\t\tif (!isElementDisplayType(display))\n\t\t\tthrow TypeError('arg0.display should be one of \"inline\", \"leaf-block\", or \"container-block\".');\n\t\tif (!(renderer instanceof Function))\n\t\t\tthrow TypeError('arg0.render should be a function');\n\t\tif (typeof code != 'string') throw TypeError('You give arg0 a bad code');\n\t\tif (!(attributes instanceof Array)) throw TypeError('attributes should be an array');\n\t\n\t\t(() => {\n\t\t\tvar foo = c => c instanceof Element\n\t\t\t\t|| c instanceof TextNode\n\t\t\t\t|| c instanceof ErrorNode\n\t\t\t\t|| ((c instanceof Array) && c.every(foo));\n\t\n\t\t\tif (!children.every(foo))\n\t\t\t\tthrow TypeError('All arg0.children should either be an Element, a TextNode, or an ErrorNode');\n\t\t})();\n\t\n\t\tif (!split) split = [];\n\t\tif (typeof split == 'string') split = [split];\n\n\t\tif (!(split instanceof Array))\n\t\t\tthrow TypeError('arg0.split should be either undefined, a string, or an array');\n\n\t\tthis.name = name;\n\t\tthis.display = display;\n\t\tthis.renderer = renderer;\n\t\tthis.split = split;\n\t\tthis.code = code;\n\t\tthis.attributes = attributes;\n\t\tthis.children = children;\n\t\tthis.options = options;\n\t}\n\n\tprivate renderInner() {\n\t\tif (this.innerIsRendered) return;\n\n\t\t// Render children first\n\t\t(() => {\n\t\t\tvar len = this.split ? this.split.length : 0;\n\n\t\t\t(function recurse(children: Nested<Node>, len: number) {\n\t\t\t\tif (len > 0) {\n\t\t\t\t\treturn (children as Nested<Node>[]).forEach(grandchildren => {\n\t\t\t\t\t\trecurse(grandchildren, len - 1);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t(children as Node[]).forEach(child => {\n\t\t\t\t\tif (child instanceof Element) {\n\t\t\t\t\t\tchild.render();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})(this.children, len);\n\t\t})();\n\n\t\tthis.#innerIsText = (() => {\n\t\t\tvar len = this.split ? this.split.length : 0;\n\t\n\t\t\tvar foo = (li: Nested<Node>, le: number) => {\n\t\t\t\tif (le > 0)\n\t\t\t\t\treturn (li as Nested<Node>[]).map(l => foo(l, le - 1));\n\t\t\t\t\n\t\t\t\treturn (li as Node[]).map(c => {\n\t\t\t\t\tif (c instanceof TextNode) return true;\n\t\t\t\t\tif (c instanceof ErrorNode) return false;\n\t\t\t\t\tif (c instanceof Element) return c.outerIsText;\n\t\t\t\t\tthrow Error('wut');\n\t\t\t\t}).every(e => e);\n\t\t\t};\n\t\n\t\t\treturn foo(this.children, len);\n\t\t})();\n\t\n\t\tthis.#innerText = (() => {\n\t\t\tvar len = this.split ? this.split.length : 0;\n\t\n\t\t\tvar foo = (li, le, iit) => {\n\t\t\t\tif (le > 0)\n\t\t\t\t\treturn li.map((l, i) => foo(l, le - 1, iit[i]));\n\t\t\t\t\n\t\t\t\treturn iit\n\t\t\t\t\t? li.map((c: any) => {\n\t\t\t\t\t\tif (c instanceof TextNode) return c.text;\n\t\t\t\t\t\treturn c.outerText;\n\t\t\t\t\t}).join('')\n\t\t\t\t\t: null;\n\t\t\t};\n\t\n\t\t\treturn foo(this.children, len, this.#innerIsText);\n\t\t})();\n\t\n\t\tthis.#innerHtml = (() => {\n\t\t\tvar len = this.split ? this.split.length : 0;\n\t\n\t\t\tvar foo = (li, le, iit, it) => {\n\t\t\t\tif (le > 0)\n\t\t\t\t\treturn li.map((l, i) => foo(l, le - 1, iit[i], it[i]));\n\t\n\t\t\t\tif (iit) {\n\t\t\t\t\tif (it.trim() && this.display == 'container-block') {\n\t\t\t\t\t\treturn it\n\t\t\t\t\t\t\t// ?: is important\n\t\t\t\t\t\t\t.split(/(?:\\r\\n[ \\t]*){2,}|(?:\\r[ \\t]*){2,}|(?:\\n[ \\t]*){2,}/)\n\t\t\t\t\t\t\t.filter(text => !!text.trim())\n\t\t\t\t\t\t\t.map(escapeHtml)\n\t\t\t\t\t\t\t.map(s => `<p>${s}</p>`).join('');\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn escapeHtml(it);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.display != 'container-block') {\n\t\t\t\t\t// join as HTML\n\t\t\t\t\treturn li.map(c => {\n\t\t\t\t\t\tif (c instanceof TextNode)\n\t\t\t\t\t\t\treturn escapeHtml(c.text);\n\t\t\t\t\t\tif (c instanceof ErrorNode)\n\t\t\t\t\t\t\treturn c.toHtml();\n\t\t\t\t\t\treturn c.outerHtml;\n\t\t\t\t\t}).join('');\n\t\t\t\t}\n\t\n\t\t\t\tvar paragraphs = [], p = [];\n\t\n\t\t\t\tvar commit = () => {\n\t\t\t\t\tif (p.length) {\n\t\t\t\t\t\tparagraphs.push(p);\n\t\t\t\t\t\tp = [];\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\tvar add = e => p.push(e);\n\t\n\t\t\t\tli.forEach(c => {\n\t\t\t\t\tif (c instanceof TextNode) {\n\t\t\t\t\t\t// ?: is important\n\t\t\t\t\t\tvar split = c.text.split(/(?:\\r\\n[ \\t]*){2,}|(?:\\r[ \\t]*){2,}|(?:\\n[ \\t]*){2,}/);\n\t\t\t\t\t\tif (split.length < 2) {\n\t\t\t\t\t\t\treturn add(c);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tsplit.forEach((s, i) => {\n\t\t\t\t\t\t\tif (s.trim()) add(this.text(s));\n\t\n\t\t\t\t\t\t\tif (i < split.length - 1) commit();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (c instanceof ErrorNode) {\n\t\t\t\t\t\t// treat errors like inlines\n\t\t\t\t\t\tadd(c);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// blocks interrupt paragraphs\n\t\t\t\t\t\tif (c.display != 'inline') {\n\t\t\t\t\t\t\tcommit();\n\t\t\t\t\t\t\t// direct push to list differentiates non-paragraphs\n\t\t\t\t\t\t\tparagraphs.push(c);\n\t\t\t\t\t\t\tcommit();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// inlines do not interrupt paragraphs\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tadd(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tcommit();\n\t\n\t\t\t\treturn paragraphs.map(p => {\n\t\t\t\t\tif (p instanceof Array) {\n\t\t\t\t\t\treturn '<p>' + p.map(n => {\n\t\t\t\t\t\t\tif (n instanceof TextNode)\n\t\t\t\t\t\t\t\treturn escapeHtml(n.text);\n\t\t\t\t\t\t\tif (n instanceof ErrorNode)\n\t\t\t\t\t\t\t\treturn n.toHtml();\n\t\t\t\t\t\t\treturn n.outerHtml;\n\t\t\t\t\t\t}).join('') + '</p>';\n\t\t\t\t\t}\n\t\t\t\t\t// non-paragraphs\n\t\t\t\t\treturn p.outerHtml;\n\t\t\t\t}).join('');\n\t\t\t};\n\t\n\t\t\treturn foo(this.children, len, this.#innerIsText, this.#innerText);\n\t\t})();\n\n\t\tthis.innerIsRendered = true;\n\t}\n\n\tpublic get innerIsText() {\n\t\tif (!this.innerIsRendered) {\n\t\t\tthrow Error('Cannot access Element#innerIsText before it is initialized');\n\t\t}\n\n\t\treturn this.#innerIsText;\n\t}\n\n\tpublic get innerText() {\n\t\tif (!this.innerIsRendered) {\n\t\t\tthrow Error('Cannot access Element#innerText before it is initialized');\n\t\t}\n\n\t\treturn this.#innerText;\n\t}\n\n\tpublic get innerHtml() {\n\t\tif (!this.innerIsRendered) {\n\t\t\tthrow Error('Cannot access Element#innerHtml before it is initialized');\n\t\t}\n\n\t\treturn this.#innerHtml;\n\t}\n\n\tpublic render(): Node {\n\t\tif (this.outerIsRendered) return this.#rendered;\n\n\t\tthis.renderInner();\n\t\tvar r = this.renderer(this, this.options);\n\n\t\tthis.#rendered = r;\n\t\tthis.#outerIsText = r instanceof TextNode;\n\t\tthis.#outerText = r instanceof TextNode ? r.text : null;\n\t\tthis.#isError = r instanceof ErrorNode;\n\t\tthis.#errorMessage = r instanceof ErrorNode ? r.message : null;\n\t\n\t\tif (this.#outerIsText) {\n\t\t\tthis.#outerHtml = escapeHtml(this.#outerText);\n\t\t} else if (r instanceof HtmlNode) {\n\t\t\tthis.#outerHtml = r.html;\n\t\t} else if (r instanceof ErrorNode) {\n\t\t\tthis.#outerHtml = r.toHtml();\n\t\t} else {\n\t\t\tthrow TypeError('Render output should be one of TextNode, HtmlNode, or ErrorNode');\n\t\t}\n\n\t\tthis.outerIsRendered = true;\n\t}\n\n\tpublic get outerIsText() {\n\t\tif (!this.outerIsRendered) {\n\t\t\tthrow Error('Cannot access Element#outerIsText before it is initialized');\n\t\t}\n\n\t\treturn this.#outerIsText;\n\t}\n\n\tpublic get outerText() {\n\t\tif (!this.outerIsRendered) {\n\t\t\tthrow Error('Cannot access Element#outerText before it is initialized');\n\t\t}\n\n\t\treturn this.#outerText;\n\t}\n\n\tpublic get outerHtml() {\n\t\tif (!this.outerIsRendered) {\n\t\t\tthrow Error('Cannot access Element#outerHtml before it is initialized');\n\t\t}\n\n\t\treturn this.#outerHtml;\n\t}\n\n\tpublic get isError() {\n\t\tif (!this.outerIsRendered) {\n\t\t\tthrow Error('Cannot access Element#isError before it is initialized');\n\t\t}\n\n\t\treturn this.#isError;\n\t}\n\n\tpublic get errorMessage() {\n\t\tif (!this.outerIsRendered) {\n\t\t\tthrow Error('Cannot access Element#errorMessage before it is initialized');\n\t\t}\n\n\t\treturn this.#errorMessage;\n\t}\n\n\tpublic text(text: string) {\n\t\treturn new TextNode(text);\n\t};\n\t\n\tpublic html(html: string) {\n\t\treturn new HtmlNode({html, display: this.display});\n\t};\n\t\n\tpublic error(message: string) {\n\t\treturn new ErrorNode({\n\t\t\tmessage: `[${this.name}]: ${message}`,\n\t\t\tcode: this.code\n\t\t});\n\t};\n\t\n\tpublic getAttribute(name: string) {\n\t\tfor (var i = 0; i < this.attributes.length; i++) {\n\t\t\tif (this.attributes[i].name == name)\n\t\t\t\treturn this.attributes[i].value;\n\t\t}\n\t\n\t\treturn null;\n\t};\n\t\n\tpublic toIndentedString(level: number) {\n\t\tvar a = [\n\t\t\t'display', 'split',\n\t\t\t'code', 'attributes',\n\t\t\t// inner\n\t\t\t'innerIsText', 'innerText', 'innerHtml',\n\t\t\t// outer\n\t\t\t'outerIsText', 'outerText', 'outerHtml',\n\t\t\t'isError', 'errorMessage'\n\t\t].map(k => k + '='\n\t\t\t+ (typeof this[k] == 'string' || this[k] instanceof Array\n\t\t\t\t? JSON.stringify(this[k])\n\t\t\t\t: this[k] + '')\n\t\t).join('\\n' + '\\t'.repeat(level + 1));\n\t\n\t\tvar b = (function recurse(children, level) {\n\t\t\treturn children.map(c => {\n\t\t\t\tif (c instanceof Array) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t'[',\n\t\t\t\t\t\t'\\t' + recurse(c, level + 1),\n\t\t\t\t\t\t']'\n\t\t\t\t\t].join('\\n' + '\\t'.repeat(level));\n\t\t\t\t}\n\n\t\t\t\treturn c.toIndentedString(level);\n\t\t\t}).join(',\\n' + '\\t'.repeat(level));\n\t\t})(this.children, level + 1);\n\t\n\t\treturn `Element[${JSON.stringify(this.name)}](\\n`\n\t\t\t\t+ `${'\\t'.repeat(level + 1)}${a}\\n`\n\t\t\t+ `${'\\t'.repeat(level)}) {\\n`\n\t\t\t+ '\\t'.repeat(level + 1) + `${b}\\n`\n\t\t\t+ `${'\\t'.repeat(level)}}`;\n\t};\n\n\tpublic escapeHtml(s: string) {\n\t\treturn escapeHtml(s);\n\t}\n}","import escapeHtml from \"./escapeHtml\";\nimport Node from \"./Node\";\n\nexport default class ErrorNode extends Node {\n\n\tpublic readonly message: string;\n\tpublic readonly code: string;\n\n\tconstructor ({message, code}) {\n\t\tsuper();\n\n\t\tif (typeof message != 'string')\n\t\t\tthrow TypeError('message not string');\n\n\t\tif (typeof code != 'string')\n\t\t\tthrow TypeError('code not string');\n\n\t\tthis.message = message;\n\t\tthis.code = code;\n\t}\n\n\tpublic toHtml() {\n\t\treturn `<code class=\"yamd-error\" title=\"Error: ${escapeHtml(this.message)}\">${escapeHtml(this.code)}</code>`;\n\t};\n\t\n\tpublic toIndentedString(level: number) {\n\t\tvar a = ['message', 'code'].map(k =>\n\t\t\tk + '=' + JSON.stringify(this[k])).join(' ');\n\t\treturn `Error(${a})`;\n\t};\n}","import { ElementDisplayType, isElementDisplayType } from \"./Element\";\nimport Node from \"./Node\";\n\n/**\n * the data part of TextNode and HtmlNode instances are intentionally\n * labeled differently, in order to prevent mistakenly\n * using unescaped text data as HTML data, which is an XSS\n * vulnerability.\n */\nexport default class HtmlNode extends Node {\n\n\tpublic readonly html: string;\n\tpublic readonly display: ElementDisplayType;\n\n\tconstructor ({html, display}) {\n\t\tsuper();\n\n\t\tif (typeof html != 'string')\n\t\t\tthrow TypeError('html not string');\n\n\t\tif (!isElementDisplayType(display))\n\t\t\tthrow TypeError('arg0.display should be one of \"inline\", \"leaf-block\", or \"container-block\".');\n\n\t\tthis.html = html;\n\t\tthis.display = display;\n\t}\n\t\n\tpublic toIndentedString(level: number) {\n\t\tvar a = ['display'].map(k =>\n\t\t\tk + '=' + JSON.stringify(this[k])).join(' ');\n\t\treturn `Html(${a}) {${JSON.stringify(this.html)}}`;\n\t};\n}","export default abstract class Node {\n\n\tpublic toString() {\n\t\treturn this.toIndentedString(0);\n\t};\n\n\tpublic abstract toIndentedString(level: number): string;\n}","import { RenderingOptionsType } from \"../RenderingOptionsType\";\nimport Element, { ElementDisplayType, isElementDisplayType, Nested } from \"./Element\";\nimport Node from \"./Node\";\n\nexport interface TagArgumentType {\n\tname: NonNullable<string>;\n\tdisplay: ElementDisplayType;\n\trenderer: (el: Element, options: RenderingOptionsType) => Node;\n\tsplit?: string | any[];\n}\n\nexport interface CreateElementArgumentType {\n\tcode: string;\n\tattributes: any[];\n\tchildren: Nested<Node>[];\n\toptions: RenderingOptionsType;\n}\n\nexport default class Tag {\n\n\tpublic readonly name: NonNullable<string>;\n\tpublic readonly display: ElementDisplayType;\n\tpublic readonly renderer: (el: Element, options: RenderingOptionsType) => Node;\n\tpublic readonly split: string[];\n\n\tconstructor ({name, display, renderer, split}: TagArgumentType) {\n\t\tif (!name) throw TypeError('You give arg0 a bad name');\n\t\tif (!isElementDisplayType(display))\n\t\t\tthrow TypeError('arg0.display should be one of \"inline\", \"leaf-block\", or \"container-block\".');\n\t\tif (!(renderer instanceof Function))\n\t\t\tthrow TypeError('arg0.render should be a function');\n\n\t\t[this.name, this.display] = [name, display];\n\n\t\tthis.renderer = (el, options) => {\n\t\t\tif (!(el instanceof Element))\n\t\t\t\tthrow TypeError('arg0 should be an instance of yamd.renderer.Element');\n\t\t\treturn renderer(el, options);\n\t\t};\n\n\t\tif (!split) split = [];\n\t\tif (typeof split == 'string') split = [split];\n\n\t\tif (!(split instanceof Array))\n\t\t\tthrow TypeError('arg0.split should be either undefined, a string, or an array');\n\n\t\tthis.split = split;\n\t}\n\n\tpublic createElement({code, attributes, children, options}: CreateElementArgumentType) {\n\t\treturn new Element({\n\t\t\tname: this.name,\n\t\t\tdisplay: this.display,\n\t\t\trenderer: this.renderer,\n\t\t\tsplit: this.split,\n\t\t\tcode,\n\t\t\tattributes,\n\t\t\tchildren,\n\t\t\toptions\n\t\t});\n\t};\n}","import Node from \"./Node\";\n\n/**\n * the data part of TextNode and HtmlNode instances are intentionally\n * labeled differently, in order to prevent mistakenly\n * using unescaped text data as HTML data, which is an XSS\n * vulnerability.\n */\nexport default class TextNode extends Node {\n\tpublic readonly text: string;\n\n\tconstructor (text: string) {\n\t\tsuper();\n\n\t\tif (typeof text != 'string')\n\t\t\tthrow TypeError('text not string');\n\n\t\tthis.text = text;\n\t}\n\n\tpublic toIndentedString(level: number) {\n\t\treturn `Text {${JSON.stringify(this.text)}}`;\n\t}\n}","export default function escapeHtml(s: string) {\n\treturn (s + '').replace(/[&<>\"']/g, m => ({\n\t\t'&': '&amp;', '<': '&lt;', '>': '&gt;',\n\t\t'\"': '&quot;', '\\'': '&#39;'\n\t})[m]);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(419);\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","this","peg$SyntaxError","message","expected","found","location","name","Error","captureStackTrace","peg$subclass","child","parent","ctor","constructor","prototype","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","describeExpected","j","descriptions","type","sort","slice","join","describeFound","SyntaxError","parse","peg$parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c3","peg$literalExpectation","peg$c4","peg$c5","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$classExpectation","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","a","b","d","e","peg$c67","peg$c69","peg$c70","peg$c71","peg$c72","peg$c74","left","c","peg$c75","peg$c76","peg$c77","peg$c79","value","_type","attribute","concat","peg$c80","whitespace","peg$c81","error","peg$c84","peg$c85","peg$c88","peg$c93","peg$c94","peg$c96","peg$c101","peg$c102","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","peg$computeLocation","ignoreCase","peg$computePosDetails","pos","p","details","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","push","peg$buildStructuredError","s0","s1","peg$parsethings","children","peg$parsething","peg$parseelement","s2","s3","s4","s5","peg$parselbm_push","peg$parselbm","bstack","peg$parsetag_name","s6","s7","s8","s9","substring","test","charAt","peg$parseattributes","s10","s11","s12","peg$parseEOF","peg$parse__","peg$parserbm","content","right","separator","peg$parserbm_pop","pop","lbm","attributes","rbm","peg$parseverbatim","peg$parselvm","vlevel","peg$parseverbatim_separator","peg$parseverbatim_text","peg$parservm","lvm","rvm","peg$parsetext","peg$c7","peg$c90","peg$c100","shallow","o","o2","k","copyOptions","tags","hljs","katex","o1","TypeError","STATE_ATTRIBUTE_DQUOTE","STATE_ATTRIBUTE_SQUOTE","addCodeMirrorMode","CodeMirror","token","stream","state","levels","lvmLevel","rvmString","repeat","skipTo","match","skipToEnd","peek","includes","status","lbmLevel","rbmString","next","level","backUp","defineMode","config","parserConfig","startState","baseColumn","globalOptions","yamd","parser","renderer","highlighter","ast2nt","ast","render","pt","input2pt","pt2ast","outerHtml","highlight","pt2hl","cascade","cascadeOptions","set","setOptions","makeHtml","fragment","html","m","recurse","ret","tmp","map","q","tmp2","peg","r","filter","code","reduce","l","tagNameMap","normalizeUrl","url","trim","comment","display","el","entity","innerIsText","innerText","forEach","innerHtml","getAttribute","split","h","table","n","hh","fill","blockcode","trimmed","bi","link","href","htmlUrl","escapeHtml","img","quotes","squote","normal","angle","corner","dquote","highlighted","commonLangs","lang","highlightAuto","math","rendered","renderToString","throwOnError","displayMode","strict","displaymath","aliases","rootClass","default","tree","createElement","recurseSplit","list","unshift","Node","TextNode","HtmlNode","ErrorNode","Tag","Element","isElementDisplayType","obj","super","innerIsRendered","outerIsRendered","Function","foo","every","renderInner","len","grandchildren","li","le","outerIsText","iit","outerText","it","toHtml","paragraphs","commit","add","isError","errorMessage","toIndentedString","JSON","stringify","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}